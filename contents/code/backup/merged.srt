@@@
1
00:00:02,760 --> 00:00:19,480
Are you confused. About bfs and dfs algorithm. Don't worry. In this video. We're going to talk about vps and dfs in details. Let's see how bfs and dfs.

2
00:00:20,040 --> 00:00:41,830
Algorithm works. We can traverse. A graph. In. Two wis mainly two with. Bfs or dfs. Bfs stands for breadth first search and differs stands for depth first search.

3
00:00:41,910 --> 00:00:58,080
First let struggle bird. Breadth. First search. In order to perform bfs we have to use. Queue data structure. And we have to used. Said the destructor leads called.

4
00:00:58,177 --> 00:01:17,980
Visited. We can use. An airy. R to keep truck dot. Du nord the visited nodes Oregon use assembly said data structure. Now let's see how beavers algorithm works.

5
00:01:18,780 --> 00:01:36,280
We will start from an endured we can select any node we want. Doesn't matter we can peak one or toward three or any other nodes. No problem. Let's speak one for all these examples.

6
00:01:36,690 --> 00:01:48,990
You can pick any one notes and i'm going to insert one. Into the queue data structure. And i'm gonna Mark one as visited since we have one in our queue.

7
00:01:49,320 --> 00:02:08,560
Now what i'm gonna do i'm gonna remove one. I'm going to remove one and i'm going to add it to this beer fest here let's add here one. Now let's find out the ad descent of one the ad descent of one and our two and four.

8
00:02:08,820 --> 00:02:24,550
The ad descent nod of one are two and four. First we can peak two then four or again feast for Odin tool. It's different on the implementation of our bfs algorithm.

9
00:02:24,810 --> 00:02:45,430
And. It also depends on how we represent our graph. Whether using ad decency metrics or using ad descent see a list. No. In this. In this video we're going to a peak the lowest possible velo first.

10
00:02:45,510 --> 00:03:01,390
So first we have to so i'm going to peak to. Then i'm going to pick four. So. Two has been added. In our queue and four are also added so let's Mark them as visited.

11
00:03:02,340 --> 00:03:17,400
Now what we're going to do. We're going to remove the front of our queue with do. So. We have removed two now let's find out the ad descent up to a descent up to our one three and five.

12
00:03:17,820 --> 00:03:35,830
One is already visited and now let's select three and five. Three five. Since we're picking the list possible vela first. That's why we fig three then five so let's add here and three five.

13
00:03:36,090 --> 00:03:50,830
Since you have removed two from our i q we have to add that to this. Beerfest our sill. Joakim. So we have added three and. Three and five. Now let's remove.

14
00:03:50,970 --> 00:04:14,410
The front from our q with his for. This is. On our front now. Now. Let's add to this bfs list are entered our salon just and let's find the ad descent and descent of four is a seven we have only one ad dissent here seven to let add your seven and leads market as visited.

15
00:04:15,210 --> 00:04:28,680
So let's market as visited as will. Now let's. Remove the front from our queue. We have removed. Our tree. So what we're going to do we're going to add tree.

16
00:04:29,010 --> 00:04:45,090
In a war of beavis list so this tree. And let's find out the ad doesn't adjutant of three is two and six. Two has been visited but six is not visited so what we're going to do we're going to.

17
00:04:45,660 --> 00:05:03,570
We're going to. Add six are right here so let's add six and let's market six as visited. Now let's remove. Hear of this. Nord five. Lead added in our beavis and here we see the adjutant of five five.

18
00:05:03,990 --> 00:05:17,650
Two and eight. Now what are going to do. We're going to. Add the unvisited ad descent with is eight so let's add here eight and let's add it right here as well.

19
00:05:17,820 --> 00:05:32,650
Now let's remove. The front with his seven. Let's add it in our beerfest our soul. And here out what i'm gonna do i'm gonna find out the ad doesn't have seven all the cent of seven has been visited.

20
00:05:32,850 --> 00:05:53,170
So we're done now let's. Remove six let's add six right here. Now what we're going to do. We're going to. Find out our dessert of seeks to advocate of six is three and nine nine is not visited so let's add here nine.

21
00:05:53,610 --> 00:06:05,190
And let's add your nine as visited sir knight has been visited now let's remove eight old add descent of aid visited. The night of a descent of nine visited are done.

22
00:06:05,700 --> 00:06:20,530
Because queue is empty corners saw queue is empty we are done we find out the beavis Garrison opera graph this is how bfs algorithm works if you were given a complex graph.

23
00:06:20,700 --> 00:06:47,610
Representation does didn't matter. Or you can. Find out the beavers using. This. This techniques of you have understood how be of his works. There can be many different beerfest our soul of a a given graph that can be many different valid are many different valid bf establish so this is one of that valid beerfest hour so.

24
00:06:48,180 --> 00:07:01,270
It's different on the implementation of an algorithm sometimes it's defense on the implementation of our graph. Actually two different on the implementation of your algorithm how we implemented the beavis algorithm.

25
00:07:01,440 --> 00:07:18,850
Know what we're going to do are going to talk about b of his algorithm now are going to talk about dfs algorithm let's see how dfs works. In order to use dfs his owner to find a diverse our of this graph we have to use a stack data structure.

26
00:07:19,230 --> 00:07:40,000
So stack. And we have to use said visited we can use urinary as will but here i'm going to use. A saved data structure. No. Let's see how to. Do how to find a d of his tower so.

27
00:07:40,170 --> 00:07:51,840
Let's select any arbitrary notes you can select any node you want doesn't matter. Or you can choose one you can choose and a two three four five five.

28
00:07:52,260 --> 00:08:05,280
Actually Annie nodes. Let's peek here are the snored tool for these examples so. Let's be clear to. All we'll add it to tour stag and will add ignore visited state in.

29
00:08:05,880 --> 00:08:21,520
The office tower so what. We will do we will move in one direction as far as we can. We will. Tend to move in one direction as far as possible. This is the.

30
00:08:21,570 --> 00:08:35,970
This is the formal definition again c of idea of his algorithm. We will move. To the depth of a node's. Okay. So here. We we have the ads isn't up to one five three what is the.

31
00:08:36,300 --> 00:08:52,800
Hour is the lowest of lowest ad descent which is one so what we're going to do is that we're going to peak year one so let's add year one one and one so we moved to one now let's find the ad descend upon two two and four.

32
00:08:53,220 --> 00:09:10,333
Also unvisited four so let's add four in our stag here as well and here as we'll. Know from four lets. Know. Now for four let's find the ad descent seven and one let's add in our stag seven.

33
00:09:10,380 --> 00:09:25,840
And and let's add in mistake seven and visited it. Or visited his seven and here in Davis as soon as well. So we're moving in one direction then we have only one unvisited i just didn't quit his eight.

34
00:09:26,550 --> 00:09:43,140
So let's add eight here here and here as we'll we'll remove from the stack once we find out all the ad just sent off a note has been visited. Otherwise we'll keep them moving in a direction in one direction.

35
00:09:43,500 --> 00:09:59,700
Now from eight. The doesn't of ages five and nine. So five is the Louis developed five is the lowest velo so what we will. Do will move to five so five of five and here five.

36
00:10:00,150 --> 00:10:12,962
Now we see that there is no ad descent of five unvisited so let's do more five. Well. We have no eight the Addison tonight is unvisited so let's move to nine.

37
00:10:13,472 --> 00:10:32,892
Nine and here nine. So we have just marked nine okay now let's move to six we can move to six year so six six and six six is unvisited for six we see that we have only one not three which is unvisited so let's add here.

38
00:10:33,662 --> 00:10:53,762
So let's add here are three. Three. Three and. Three. And we see there is no unvisited and add descent of three so will remove this draft there is no unvisited of six there is no unvisited descent of night and saw an answer for it now we see.

39
00:10:54,122 --> 00:11:09,692
Our stack is empty. Or a stick is emptied means that we find out a valid diverse diversity of this graph this is invalidity of his tower so. This is what we can find out the divest ourselves of a graph this is what we can.

40
00:11:10,232 --> 00:11:31,692
This is yet we can and find it be of his endeavors diversity of all of our algorithms in beerfest our salt will and visit all our ad descent. Will select a node and will visit all the ad descent then we'll move to that next level India of his we will move door in one direction as far as possible.

41
00:11:31,832 --> 00:11:50,202
This is called. This is called depth first. Search and this is called bedford sixers have you have understood how to find out beavis and Davis are of a given graph this is a or we can find out different bfs of any given graph pretty easily.

42
00:11:50,582 --> 00:12:08,432
Again just apply this formula. I just sheared in this video. Hope you have understood how to find out beavis and dfs diversity of a given graph. If you want to see the code and that code is available for.

43
00:12:08,792 --> 00:12:23,652
I'll add this as a list representation and also for. Our existence in magic representation. Hope you've understood this great explanation if you have any questions if you have any issue.


@@@
1
00:00:00,540 --> 00:00:13,150
Welcome to this video in this video we're going to solve biscotti interview question shortest sale pap. This problem states that. In a given greed of zeros and ones.

2
00:00:13,320 --> 00:00:28,570
We have some starting row and starting column. Is our starting row itchy the starting column and a target draw and target column. D r. Target draw DC target column.

3
00:00:28,860 --> 00:00:48,565
So in this trolling we're given a great. That means already given a metrics. That contains zero n. Once. That contains zeros and ones and were given a starting rw and starting column were given a index starting two and starting column and were given.

4
00:00:48,690 --> 00:01:00,720
Target. Ruined target column index. We have to return the length of the shortest path from. From starting restarting column to target your target call item.

5
00:01:01,290 --> 00:01:21,420
That oryx. Album one velas only. His location in the path including the start and the end must be a one. His subsequent location in the pat must be. For a directionally add descent to the previous location.

6
00:01:21,780 --> 00:01:37,710
So prom once again go in for direction. Dov bottom right left we have just four directions. It is guaranteed that greed is our se he calls to greed tear DC equals to one.

7
00:01:38,280 --> 00:02:03,160
And the starting and the target positions are different. If the task is impossible we have to redone minus one so in this Poland were to give any great for examples are given these great and were given starting to starting column index zero zero for this examples and target and target column index target recalled to to target comical to zero.

8
00:02:04,020 --> 00:02:14,760
For this grid it will start at index zero zero right here if you start at this one. We have to move to this one in the shortest possible path. So from one.

9
00:02:15,360 --> 00:02:27,930
We can. We can move to this one. From this aunt we can go to this one in this path this is the path so in this path. We have the length from here on to one one.

10
00:02:28,380 --> 00:02:43,780
So one two three four five six seven eight. That. The shortest path is from this on this one is eight so we have to written eight. For examples if you're given this great and.

11
00:02:44,310 --> 00:02:55,980
Starting records digital starting chemicals to your and target regards to to target column equal to zero. So it means that here in this problem we are located at this point.

12
00:02:56,430 --> 00:03:12,240
At index zero we have to. Move to the target to do that is this one. We cannot move to this one because cause we cannot work through zeros. If we try to move here we can reach at this point from here we observe that we cannot walk through.

13
00:03:12,750 --> 00:03:32,040
We cannot walk through doodle here is it that we can work along. One velas only we cannot walk Allen. The zero values so forth this great the task is impossible from source we cannot move to a destination this is starting row column either where source and.

14
00:03:32,400 --> 00:03:42,420
A target row column is our destination so we cannot find out. That we cannot move from starting. Album source to destination and from here for this great.

15
00:03:42,990 --> 00:03:57,670
Can. We he can move to our target from source. And have to find the shortest path. This is a straight bfs algorithm. If he have solved the problem in this section.

16
00:03:57,780 --> 00:04:16,090
How to traverse a metrics using bfs algorithm then this spell going to be. Similar to that. Note let's see how to solve this problem. Let's assume we're given these great that contents ones and zeros and were given source and target.

17
00:04:16,680 --> 00:04:28,210
Is our source this is our target we have to find out their shortest path from source to target. Able to find out the length of a shortest bet when you move from one to this one.

18
00:04:28,470 --> 00:04:41,910
When he moved from one to one one. The Lindy's one from here he careered the Lindy's out one so one plus one plus one so one two three four five six seven eight.

19
00:04:42,240 --> 00:04:53,310
We will have our answer. Eight. Even given here one instant. Then what would be the shortest path this would be the shortest pet for sure this would be our shortest path.

20
00:04:53,790 --> 00:05:06,150
So what we should read and in that case. From here to here. In order to move from one to one the answer is one right the answer is. One. From one to one.

21
00:05:06,510 --> 00:05:22,720
What is our answer. The answer is. Our one so from one to one the shortest but is. The shortest path is the spat and we have to return the length of this path so that is one two three four if the written for for this.

22
00:05:23,310 --> 00:05:41,704
Now here or i'm going to do. I am going to. Appli bfs stars or bfs algorithm to solve this problem let's see how to apply beavis at traversal. We'll have our direction we'll have forward direction we can move in forward direction.

23
00:05:41,850 --> 00:05:58,690
Down. Half. Right. Or left we have four direction for is is so. So we are initially positioned at index zero zero. So we are initially positioned at index zero zero.

24
00:05:59,100 --> 00:06:12,670
What is our level here what is our level one in beerfest our something we have level this is level number zero. Then here we will have a again. We will have here again many joyous.

25
00:06:13,530 --> 00:06:24,820
This is our level number one this odour level number two and so on. Now let's see how to solve this problem using beerfest hour so. We will have level.

26
00:06:24,990 --> 00:06:42,610
We will have level level equal to. Zero. This is our. Level. Zero right. This is our level number. Zero. Now. We have your for choice we can move. Down.

27
00:06:43,500 --> 00:07:12,840
We can move. Off. We can move. Right. Or we can move. Lipped. So here we have four direction. We have here geology that we have to keep track of visited nodes otherwise we will revisit that in order to do that what we can do we can multiply the nord that you have visited with minus one since you have one in zero but in this.

28
00:07:13,470 --> 00:07:28,750
Problem let's use a boolean matrix to key keep track the visited node. Will have to or fall to below at the corresponding index so we that we can detect or that we have visited the sale or not.

29
00:07:29,910 --> 00:07:43,770
So let's create a bullet or. The silver bullion metrics zero one two three. Zero one. Two. So general jewelry selected let's. Market as visited. Now let's move to.

30
00:07:44,220 --> 00:08:03,354
Down here first choice is down. Have moved down here no we have zero we cannot go to zero right we cannot go through. Zero. We are given these great in the Berlin statement latest modified little bit we get here one.

31
00:08:04,170 --> 00:08:17,920
Now here who knew a move to this direction down we saw he cannot move to this direction. We cannot move to this duration. So we will solve the stolen level by level this level is already completed.

32
00:08:18,180 --> 00:08:38,560
We are processing this level. Now let's try to go two of. That is not beyond the have we can not move to up right. Can won't do it right yes we have one we know we can walk through what we cannot walk through doodle so let's move to ride or we'll get we'll get here zero one.

33
00:08:39,960 --> 00:08:55,000
Again here we have four choice but. Will not move to up and we we're not going to move to this. From here to. Afford deduction because first you have to compete at this level we're solving this problem level by level.

34
00:08:55,590 --> 00:09:06,960
So here. Zero zero from here we have two find a wood that lived there is nothing on the left we cannot want to lip. So this level is completed. When this level is completed.

35
00:09:07,290 --> 00:09:21,220
Then we will add on tour level. Our level increased. So. We have. Processed this level. And. We have selected the zero want we have to market as true.

36
00:09:21,360 --> 00:09:34,680
So this is. Visited diesel and diesel. Visited. Now let's process our next level this is our next level here we have again for Joyce. From here Kenny move to.

37
00:09:35,010 --> 00:09:51,240
Down he is we can move to Darwin let's go down we get one one. Let's market as visited. So we moved. Into the tradition down so this is visited let's try to move to off on the af of zero one.

38
00:09:51,600 --> 00:10:02,620
Nothing so it cannot move to off can i go to write. Can you go to write your years we can go to right we can go right to let's go to right. There is one too.

39
00:10:03,858 --> 00:10:18,868
From zero one clinical lipped we have to Mark one two. We have to market i'm sorry kuru should have zero to not one to. Let market as visited. Now can he go to lipped.

40
00:10:18,978 --> 00:10:35,098
Can even leapt from zero one. No he cannot go to left we cannot go to left one zero one. So we have here. This we are done with this Lebanon let's move to this level.

41
00:10:35,688 --> 00:10:48,118
Joakim Noah let's move to this Neville we have to update our velo. So we have processed level two. So this is our first level. This is our second level.

42
00:10:49,188 --> 00:11:01,878
Zero one. Two now we are done with this level then let's process this level. Here we have one one so we have four choice. From one on Kenny go to down.

43
00:11:02,448 --> 00:11:18,785
Can we go to down from one one. We see that. From here. We see that we can go down we have one we can walk through the path one. So. Let's add. To one and let's Margaret as visited.

44
00:11:19,938 --> 00:11:40,878
When we calculated our index. For each calculation or you'll check. Does we. A hab our index target or draw he call to our the. Ruined x and target column goes to our column index will check that each time when we are.

45
00:11:41,268 --> 00:11:55,828
When we're processing certain index in this level we started at one one here here we have processed for jury duty we calculated zero one when you find out you don't want wheelchair does this indicate either or a target index.

46
00:11:56,418 --> 00:12:08,698
We see no. We completed this level. Now let's process this level so. We find that this level does this no target no then this does is your target know.

47
00:12:09,198 --> 00:12:22,068
So let's move forward. Then from here we move to down we get to one. Does this is our target to one no this is not our target. Let's try to go to Afghan you go to have.

48
00:12:22,458 --> 00:12:34,828
No can you go to right from here on the right we have four on on on right here judo he cannot walk through a doodle. From here can we go to. Lift no lift is zero.

49
00:12:35,898 --> 00:12:52,308
So this. Is done let's move to the next in this level this is the mixed so jiro two. Here we have Judah too. Can he go to down from judea to the zoological to know he cannot go down can i go to have no he cannot go to off.

50
00:12:52,698 --> 00:13:07,698
Can he go to right yes he can go to right so let's go to right. The right is one. Okay the right is we see once again could write so Judah three. Nor can he go to lipped for from zero to not we cannot go to leapt.

51
00:13:08,118 --> 00:13:22,888
Here we see that we find it to one and when a pint of disunity does does your target know. Know what i'm going to do. I'm going to Mark this when you have competed this and excellent market as visited.

52
00:13:23,958 --> 00:13:40,378
This is the corresponding position of this element of index zero three right. Now we. Pap process this level successfully now we on the next level that we're on this level so let's increase our level to three.

53
00:13:41,268 --> 00:13:53,538
We have increased our level to three. Now let's complete this. From to one we have again for choice. Can you go down. Newark and he got off no can you go to.

54
00:13:53,928 --> 00:14:09,475
A can go to write yes we can go to right here we can go to ride. So to to. Let them market two as visited. Can you lived here. He is we can go to lived.

55
00:14:10,158 --> 00:14:20,308
Before the century of complete singer computer today does this is our target ruined x no this is not a target ruined x. This is a narrow target row column index.

56
00:14:20,568 --> 00:14:34,828
So let's try to move to lipped. And let's market to to. Rehab Mark this. Now. Let's go to leapt. Off to one. Let's try to go to leapt up to one that is too doodle.

57
00:14:34,908 --> 00:14:49,978
Does this is our target. Years we find out our target. We find out. Our target and what is our level. Our level is three. Let's write up the level number zero.

58
00:14:50,238 --> 00:15:09,768
One. Two. Three. And ds nord are at this. At this function call we have at level number four. We have at level number four right. This forward is our answer but we have in our level.

59
00:15:10,158 --> 00:15:29,878
At three. In our level we have level three but we have pined out our desired target row and column index at. We find it a desired target raw index and column index at raw are at level four so we have to return for.

60
00:15:30,108 --> 00:15:56,118
Right right we have to return for. So for this problem. We have to return the afore but we have in the level what we have in the level three we have in the level three so what we can do we can just we can just check if we find out our target ruin dick's if we find it or target ruined x what you will do.

61
00:15:56,538 --> 00:16:08,388
We will return. Live will plus one. Then this will be valid until right and let check here. From the resident removed the digital one. From delete 'em up to zero one.

62
00:16:08,748 --> 00:16:23,778
Then from. Would prompt you to want to move to. One one from here we moved to this and similar to this. So here we see that. We have here for level. We have your actually five level this is our forte this is a level number so.

63
00:16:24,168 --> 00:17:01,698
Zero one two three four we find out at. At level poor. Will increased our lives will will increased our level and now this is our current level we're processing our current level when we have processed all the elements or older nodes in this decision tree in this current level only then will move to the next level will increase the level number so if you find it our desert target or or you will do will return the level plus one because the answer located at liberal plus one.

64
00:17:02,298 --> 00:17:32,638
At the next level because in our current level we don't have the answer and from here we. From here if we find that the law let's assume we have answer here from here up the law evil is to even find out the answer we have the answer at level three so we have to read and in that case two plus one right and here we see that our answer exists at the level number four so why do we have to do we have to return level plus one.

65
00:17:32,808 --> 00:17:42,438
This is the bfs algorithm. I hope you have understood this video explanation. That time complexity of this algorithm the time complexity of this algorithm meeks.

66
00:17:42,768 --> 00:18:07,018
Algorithms is one of 'em times in. We are visiting every single til every single sale at most once. And the Spears convert city is also one of 'em times in for our bullion metrics to keep track the visitor to sell i hope you've understood this video explanation.

67
00:18:08,478 --> 00:18:19,968
Still guys if you have any caution post your question on the q and a forum post your question on the q and a forum. Now let's implement our algorithm first let's create.

68
00:18:20,328 --> 00:18:42,738
Our great. So int. Let's call it greed a call to. Let's greet our good. Sir one one one one. Then we have. Zero one. Zero. One. Then we have your one one.

69
00:18:43,188 --> 00:19:00,358
One one. This is our great. Here we see that we have to path this is one path and this is another path the shortest path is dispatch. The. The length of a shortest path is four.

70
00:19:00,468 --> 00:19:15,078
And the length of dispatch is eight so. We have to call dysfunction. We have to call this function we great. Epic hall dysfunction with this great the function should return for for this given.

71
00:19:15,408 --> 00:19:34,888
Grid. Now let's call the function here. Shortest. Sail. Pat. First great dinner study index. Zero zero. This is the source and this is the destination sir to zero destination.

72
00:19:35,868 --> 00:19:49,608
Dysfunction will return. Dysfunction will return. The shortest path. Let sprint here. The shortest path system that out dot print l n. This function. Should return for.

73
00:19:49,998 --> 00:20:08,308
Now let's implement this algorithm. First think what i'm going to do i'm going to crit. Bullion visited metrics. To keep track the visited. Sell. The dimension of this brilliant matrix exactly similar to that great.

74
00:20:08,478 --> 00:20:25,076
So new bullion. Great dirt lint the number of. And a number of column greed. Doodle. Dot lint. No i'm going to create a queue data structure in the queue.

75
00:20:25,246 --> 00:20:45,836
I will store appear. Row and column index. Let's call it peer. At Scarlet cubicles to new. Linked list. We are using the spear inside this static function so the type up this beer glass should be static static.

76
00:20:46,486 --> 00:21:09,956
Beer. Static glass. Beer. It will store. It'll store appear row and column. Int. Raw. And int. Call. Let's. Outlet call here our. Deceit our constructor public.

77
00:21:10,036 --> 00:21:31,616
Beer. Ain't raw int column. Now distort records to rule and these dot. Column equals to. A column call. Now let's add our source. Our starting route and starting column to our queue.

78
00:21:32,206 --> 00:21:46,946
So q dot add. New beer. New beer starting row and starting call them. Seemed we have added this starting row and starting column to the skew let market as visited.

79
00:21:47,806 --> 00:22:07,526
This market has visited so visited starting row starting column. He calls to. True. Now we have to. We have to traverse. Sl we hip drew. We whip for choice for his sale we can go to.

80
00:22:07,606 --> 00:22:22,466
Down we can go to Africa go to right Oregon go to left ear for choice so let's great here. A two d array. For direction direction he called to. Let writer director on first.

81
00:22:22,816 --> 00:22:39,626
Down then tough. Let's call it f. Then right then lipped. You can use. Any water. In this video i'm going to use disorder. In order to move down we have to add one to the row so one zero.

82
00:22:39,826 --> 00:22:54,476
Order to move on af we have to substitute one from row so minus one zero. In order to move to right we have to add on to the columns as your one in order to lift after substance one from column to zero minus one.

83
00:22:55,546 --> 00:23:15,206
Now here. We should have a level ii and level equal to zero. This is our starting level. Now while. Queue is not empty. While. Queue dot each empty well our queue is not empty.

84
00:23:16,270 --> 00:23:28,316
Will. I keep removing the different element. And will. I choose at will moving forward direction will mid forward choice now let's see how to do with it first i'm going to remove.

85
00:23:28,396 --> 00:23:42,646
The front from q so beer. Beer current he called too. Cute dot pull this pull method will remove and return the front element of q we're storing the element.

86
00:23:43,066 --> 00:24:02,326
Appear dot typhi spear. So appear current and in this current we have. Row and column. Let's subtract that. And wrote a call to current. Dot rule. And in Cali calls to current dot.

87
00:24:02,746 --> 00:24:23,776
Column. No we have. Four direction. We are for direction. Before that before. Before removing this we have to find out the site of power. We have to find him the site of our current level in your current level in your current level how much or how many.

88
00:24:24,136 --> 00:24:35,786
Are element or how many. Items we have in the queue first we have to. We have to find out that so let's get available site inside you call to. A queue dot sight.

89
00:24:36,406 --> 00:24:54,146
If we consider easel as nerd. We have to have in each level we have. We have. Out the notes we have to process the nord in our current level. In her current level we have the north the number of nodes we have and that is equal to this site.

90
00:24:54,286 --> 00:25:08,446
So if the process. In ease level. The number of nodes three have indecipherable. Two surgical to the cute side while. Sige. Wild side is nautical two zero.

91
00:25:08,896 --> 00:25:25,486
Will give a running this. Our our logic here. Joakim. So inside your let implement our. Logic. We have to implement in your current level you you have something like this first we have zero zero.

92
00:25:25,876 --> 00:25:44,306
In our first level we have zero zero we have only one nodes. Then in the second level let's assume we have one zero and. A one zero m. Zero one. Jiro one minus one zero or zero minus one.

93
00:25:44,426 --> 00:26:02,446
Zero minus one. If we have four. Of four or notes in this level. We will see that here. If we have four nodes let me show you. We see in our current level you have to process only one node in the next level if the processed.

94
00:26:02,806 --> 00:26:17,966
We have to process for nord. So here our level equal to. Zero. When i'm up to this level we have to when we. Do we are done with this level will move a level to level one.

95
00:26:18,646 --> 00:26:30,676
Now here. Again we might have. A liberal here. When we have processed these. Wouldn't we have processed this for nor to be considered a spear as a node.

96
00:26:31,276 --> 00:26:47,726
Epicor he represses this forward only then will move our level to the next. Okay. So to keep track the level we have to first find out the size of our current level and that's what we're doing using this size readable size gold secured site.

97
00:26:49,606 --> 00:27:12,176
I hope you've understood now here. I have to remove the. Room different from our queue so currently calls to. A queue dot pool it'll. Remove hundred and up front and let's find out our current rule zero equal to current dot room our call i'm from our current so Karen dot column.

98
00:27:12,766 --> 00:27:24,166
Now we have your for choice we have for direction who can move in for direction. In i called to the room. I listened to Linda this direction is for. So with eyes less than four.

99
00:27:24,496 --> 00:27:36,858
I plus blach. Right inside here let's. A calculate a let's find out the index about ad doesn't we have four Addison for each sale. So xxii goes to raw plus.

100
00:27:37,276 --> 00:27:59,276
For frustration this is our. This is our. Beer. One durham. We add to this arrow will move to a down okay so let's add that direction. Direction i. And zero altitude we have ruined x this one is ruined x and this series column index.

101
00:27:59,506 --> 00:28:19,076
So end why he called to column plus. Direction. I. The one so this is your adjutant no less validate this index x and y. Let's validate it. If x is greater than or equal to zero then x is valid.

102
00:28:19,456 --> 00:28:33,596
And also x need to be less then. The need to be less than the height. Of our great or the number of row. We have in the great so great dot length. Now let's reality t y.

103
00:28:33,646 --> 00:28:58,336
If y is greater than or equal to zero. And. If y is less than the number of column we have. So greed. Douro. Dot. Length. And. Our ad just sent. This x white meant adjustment this adjustment must be unvisited if that is visited will not care that so.

104
00:28:58,696 --> 00:29:15,446
Out what i'm going to do here i'm gonna check the add descent. Letting the ad dissent i. Visited. I here we're taking this validating action away if accent why is valid only then it will move to this part.

105
00:29:15,526 --> 00:29:25,676
It'll move to this spot if at any one of them is overloaded fault then it'll return false it'll not move to this a condition here would not check this condition.

106
00:29:25,906 --> 00:29:42,226
So you're visited x y. If it's equal to false. If. The adjutant is unvisited and we have. The ad dissent the valor in the adjutant is. One. If the value is zero.

107
00:29:42,646 --> 00:29:54,826
We cannot work through. A zero right we have we can walk through only with one. So. If great x ray calls to one. No right inside here what i'm going to do.

108
00:29:55,336 --> 00:30:06,976
A cent but we abetted it is going to get overloaded true first in what i'm gonna do i'm gonna check. Does this x oil pier is our target pier are not. Legit at first.

109
00:30:07,336 --> 00:30:27,588
If x equals to target pier. A distributor and he the boy called to a target column. Then what i will do I'll return the level plus one. We're. In the previous level we're a week from level zero from level zero if we're on level zero.

110
00:30:27,918 --> 00:30:38,638
We're computing. These x y for level one right so if we find out this condition that means we're on the next level that we have to add. One to the level.

111
00:30:39,588 --> 00:30:51,108
Now right here what i went through this condition is not true. We have to add our current ruined dicks to add descent to our queue and let's market as visited so cute or add.

112
00:30:51,558 --> 00:31:10,978
New. Peer. New peer x y and let's market as visited so visited. X. Y. Equals to true. Right inside here we have two. Albums. We have to decrease the site.

113
00:31:11,568 --> 00:31:27,198
We have to decrease the site. Because we have removed the first element of the site we produced a decrease the size right inside here. Until the site is zero will keep removing from the front blue moon to the next level when we're done with this.

114
00:31:27,798 --> 00:31:38,585
With this away live that means we are completed widower car current level let's move to the next level so let's add onto your level so your level plus split.

115
00:31:39,918 --> 00:31:47,718
Don't worry about the screeners that look this is not that much difficult debris understand the intuition then this is going to be. A straightforward for you.

116
00:31:48,438 --> 00:32:06,648
When we're done with this wealth. If. It's never found this condition. If it's scattered rest disk. A line written level plus one. That means if we don't have a valid path from source to destination this will never overload a true.

117
00:32:06,978 --> 00:32:19,348
In that kiss at the end will return minus one. In the problem statement we saw that. If we don't have a pet or if. We cannot reach the target you have to return minus one.

118
00:32:19,938 --> 00:32:38,698
This is our core algorithm. No let's run and shake discord. For this great who should have the answer for. Let rand is good. Alright we get this vela for here and this is perfect this is our answer.

119
00:32:38,808 --> 00:33:02,218
Now let's around the chest. Alright we have passed all the test cases successfully. This problem does not exist on lead good. This is a very very important cautions to be good at graph data structure.

120
00:33:02,688 --> 00:33:13,548
And this is similar to the. Magic style Russell using bfs algorithm. I'm solving this problem on primp. I think this is a very very important questions that's why.

121
00:33:13,878 --> 00:33:27,568
I. Added discussion on discourse. We have similar questions on geek for geeks you can practice discussion on trump or he can practice discussion. On. Geeks for geeks.

122
00:33:27,828 --> 00:33:45,958
Let me show you. That practice link. This is the link. This is the link or you can prachtige. This question on trump. In order to practice first you have to register after registration you can follow this link to practice discussion on prep.

123
00:33:46,248 --> 00:34:01,618
I will address this court. With this video you can find out the link in the source could. Also we have this similar question on. Geeks for geeks. They can search on Google shortest source to destination path.

124
00:34:02,328 --> 00:34:13,581
Gmt practice if we search on Google with this. Text you will find out this. Question to practice again practice at gigs where gigs. I hope you have understood this video explanation.


@@@
1
00:00:00,900 --> 00:00:12,437
Welcome back to this video in this video we're going to solve this coding interview question surrounded resilience. In this problem given an mba in metrics board.

2
00:00:12,720 --> 00:00:31,800
Containing it and all. This is not zero this is oh. Capture all resumes that are for directional is surrounded by x. Four additionally means we have a horizontal direction or we have barty go direction so we can go.

3
00:00:32,220 --> 00:00:49,680
Right down left up. We have four directions. Erosion is captured by flipping all zeroes into x. In that surrounded reason. For these examples. We see that.

4
00:00:50,070 --> 00:01:08,800
This is our given. Metrics. And here we see this resume this resume is surrounded by x here we have x here we have x. X x x x and this is the surrounded reason.

5
00:01:08,880 --> 00:01:27,970
This. This resume is surrounded by x. In forward direction. In four direction. Top right bottom left by this for direction. This resume is surrounded by four direction.

6
00:01:29,250 --> 00:01:44,550
So we have to flip. We have to flip this surrendered resumes with x so it'd be flipped we get this. We just. Replaced this with x these critics and this eight x so we get.

7
00:01:44,970 --> 00:02:05,310
X x. X. And dis re Xian these resumes of aws does not surrounded by x. This drop is surrounded by x leapt is surrounded by x right is surrounded by x but this down is not surrounded by exit we cannot flip this zero to x.

8
00:02:05,820 --> 00:02:32,760
So we have year zero. This is the problem student but and this is. A this is the representation of this matrix. The matrix contains. X. And o's. X and o's this is not zero this is all we're given emetic that contents x and one already have to do what we have to capture all resume data for deliciousness for directional is surrounded by x.

9
00:02:33,210 --> 00:02:50,440
This is the problem statement. If that region is surrounded by x we have to. We have to replace we have to flip all zeros of the surrounded regions. With x or after flipped zeros into a Texas.

10
00:02:51,150 --> 00:03:06,180
So we can say. This resume is surrounded by x. This insta surrounded resume this is a surrendered reason. Okay for this student it's surrounded by this direction horizontal or vertical not diagonal.

11
00:03:06,510 --> 00:03:22,780
Okay so this is surrounded by these region. Is not bite this region now let's see how to solve his problem. Let's assume are given this matrix this matrix contains xs and o's.

12
00:03:22,890 --> 00:03:40,170
This is not a zero this is English alphabet letter oh. We're given this matrix that contents xs and o's. We have to find out we have to find out the surrounded reason that means the solo ended all the surrounded all that is surrounded by x.

13
00:03:40,560 --> 00:03:56,200
In four direction. Top bottom. Right left. Here in this matrix in this matrix we see that there is no surrounded aws there is no surrounded all that is surrounded by x.

14
00:03:56,310 --> 00:04:10,200
There is no surrounded us. If we have your ex then this is our surrendered reason this is so in order to buy excess. For deduction ally right this is a diagonal this is narrow direction we have to surround it.

15
00:04:10,560 --> 00:04:27,760
In this direction. Lipped. Right. Top bottom. We see this region is surrounded but if we have your douro then we can say this is not surrounded there is no genos that is surrounded.

16
00:04:27,810 --> 00:04:39,630
Now let's talk about how to solve this problem. To solve this problem what we're going to do first thing we're going to replace old and surrounded aws so.

17
00:04:39,990 --> 00:04:59,280
Replenish. All. And surround it. And surrounded. And surrounded. Aus. With any character let's use your character a hash. You can use any character. So in this.

18
00:04:59,760 --> 00:05:11,670
Matrix first order will do will replace all unsold around it oh. Let's repurpose it we see this as zero this is not surrender so let's replace it with a hash let's replace it with hash.

19
00:05:12,060 --> 00:05:29,590
Let's replace it with hash. And here as we'll. Have esh. This or is not surrounded. This one is not surrounded so we replaced all the answer and it is answered it off with a hash.

20
00:05:29,700 --> 00:05:50,130
In the second stiff what we will do will replace the remaining that remaining o's let's replace. The array remaining. Re meaning. Our aws. Width. X. We have to replace all the remaining aws with x.

21
00:05:50,490 --> 00:06:03,120
It will replace all answer rounded off with a hash. Then if we find it or any remaining aws that must be surrounded if if if we find out in the second stiff any.

22
00:06:03,540 --> 00:06:24,490
Any laws that is remaining. In the third step what we will do will replace will replace all the hash with all the hash with us. A begrudge older hash rate Mark that is not surrounded that is not surrounded so we have to recover that.

23
00:06:25,440 --> 00:06:43,980
In order to apply the second formula we're just replacing older and surrounded aws with hash you can use your any character you want. And in the third step when you're done with the second step will uploaded start step this is how we can solve this problem now let's see how to.

24
00:06:44,370 --> 00:06:59,250
How to fight not all uncertainty o's. This is our. Main goal in this matrix we have to find it all and surrounded us. In order to find it all and surrendered one first let recovered here.

25
00:06:59,580 --> 00:07:10,950
Now let's see how to find it all answered under oath in order to find it all and surrounded us we will skin we will apply our dfs algorithm. We will skin this first row.

26
00:07:11,370 --> 00:07:24,540
This first row didn't this last year oil scan this fall astro and it's lustful the old skin our last column and our first column we have to scan our. We have to skin.

27
00:07:24,900 --> 00:07:40,680
First row. The last row. We have to scan for a stroke last row if the skin first. Column if the. Skin. Last key column. This problem is similar to. Pacific.

28
00:07:41,790 --> 00:07:59,910
Atlantic. Waterflow. The stolen similar to this problem. Will solve installing in this section. Now let's see how to solve this problem in order to solve this problem we have to scan first last row then first column last column in order to find out.

29
00:08:00,270 --> 00:08:14,650
All the and surrounded. And surrounded us so let's find it all and surround it arose first let's get our first row. First row. Then old scan our last row.

30
00:08:14,880 --> 00:08:37,810
Then Earl skin our first column. First column then old skin our last column. Now let's see how to find note. How to skin our first real. Infrastructure we see that here he observed if you find a would you do one call a dfs function with that index or here the index is zero one let's call our defense function.

31
00:08:38,040 --> 00:08:50,580
Since you find we call her a different function we have four direction. We know that in your dfs algorithm we have for dear fiction. So here or i'm going to do i'm going to replace these since we have visited this.

32
00:08:51,150 --> 00:09:05,820
So will Mark this as visited we can replace it with any character if we have a character that is not zero. Then Oregon do but we can assume that that is visited if we have a hash that is visited and if we have x adjutant.

33
00:09:06,270 --> 00:09:22,350
We cannot go to eggs because our goal is to find out all connected all connected zero all connected zero. If we have your doodle and there he refined it any data that can lead you to do that is not surrounded right so let's find it all connected.

34
00:09:22,710 --> 00:09:34,480
If you have your judo. If there is any judo in this. In this matter that is connected to two due to this that means. All the that is connected to this zero is not surrounded.

35
00:09:34,800 --> 00:09:54,760
Let's replace this with a hash then we will apply here for direction. Down. Off. Right. Down of right leapt let's apply this fort direction here first down can you go down years we can sort one on let's replace this with high she.

36
00:09:55,140 --> 00:10:15,146
Later. Moved down here again moped down so let's replace it. With hash. Is index. To one. We just replaced it. Now from one one we moved down can i go to have note we cannot go to app can go to right is we can go to right so let's go right that is one two.

37
00:10:15,536 --> 00:10:26,406
Let's replace this with hash. Then here are going to have four directions going to go to don't know can you go to of north any good right yes we can go to ride so let's good right that is one three.

38
00:10:26,825 --> 00:10:42,243
As business with hash. And here we tried this. We cannot go let we cannot go to right here he cannot go to left here and here we cannot go to Africa and a good writer can go to left so we are done when he called with this index now let's.

39
00:10:42,388 --> 00:10:55,346
Scan this anti-roll there is no more judo. So we are done by scanning our first row now let skin. Now let's as can our last real. So in our luster we have only one.

40
00:10:55,676 --> 00:11:08,286
Zero COD find out good one call the function with the index three three. If we apply this for direction we cannot go to his injury just called with this you find out that lets repository and it is no more choice.

41
00:11:08,606 --> 00:11:20,376
We cannot go to an attitude action. Now let's scan our first column in the farcical and we have no cheetos or not quality of his puncture it scan with your last column we have your generals who will qualify unction with index to a fault.

42
00:11:20,966 --> 00:11:42,035
You have no choice right let's rip as dessert with hash. We scanned our four boundary against a. Rescan our boundary. So we skinned. Our boundary we scanned our boundary and we replaced all and surrounded the reason that meant all and surrounded aws with a hash.

43
00:11:42,176 --> 00:11:54,746
We are done with the first stiff now our second stiff in the second step what you'll do will find it all aws in these metrics. If there is any or against in this mattox after processing our first.

44
00:11:55,256 --> 00:12:10,526
Stiff. That means all the odds that is exist in the matrix. Are surrounded so all reapers all that was that is exist in the second step and in the to affordable to replace all the hash weed oats because.

45
00:12:11,036 --> 00:12:27,296
The marked. A hash. That is not surrounded so we have to recover that super recovery gets zero. We get zero. Zero. Zero. Zero. Zero. And zero. This is our algorithm.

46
00:12:27,626 --> 00:12:38,106
Okay we are done we have to redone these. Are these metrics we didn't have to redone it just modified it. This is our answer now let's take another example for better understanding.

47
00:12:39,386 --> 00:12:54,146
Now let's assume we are given. We are given this matrix that contains exists and oats. No first step let's find out all the answer on the region let's scan our boundary let's scan our boundary again.

48
00:12:54,746 --> 00:13:06,786
And here in this boundary where there is no oars. Here we have. This also recall our defense function it will replace this too with hash we know that already has replaced.

49
00:13:07,256 --> 00:13:19,176
We have altered zero here we have altered the Budapest with hush. So we scanned our first row and our lustful we replaced all unsold ruined it all and surrounded.

50
00:13:19,346 --> 00:13:33,596
Aws. Now let's scan our first column there is no jiro let's scan our last column so there is no other so our first step is done. Our second stiff in the second step what we will do we will find it.

51
00:13:34,046 --> 00:13:48,756
All in these metrics. If we saw. Was a guest in this matrix that means those all are surrounded for sure. Since we have scanned our boundary singer yep scant our boundary.

52
00:13:48,836 --> 00:13:58,136
If there is any uncertainty aws exist. Then in the first step that will be replaced with hash. When he moved the second step we have aws that is surrounded by x.

53
00:13:58,466 --> 00:14:09,756
So we can reflect. All the ores in the second step with excellent replace. Will just scan our will just skin this the matrix to find out that the osce.

54
00:14:10,016 --> 00:14:24,176
To be replaced now in the heart of what we will do ill. Will recover our answer rounded off so. Ruskin. Will just recover them. This is our metrics and this is the matter that we have to reader.

55
00:14:24,566 --> 00:14:33,116
This is our answer i hope you have understood great explanation. If you. Aren't understanding is reading spinach and please make sure you understand this problem.

56
00:14:33,566 --> 00:14:49,926
In the next video we'll solve the problem. Bishop fick. Atlantic waterfall. Bishopric at LAN dick. Waterflow. This roller is similar to this problem. In the next to the oil salt despoiling.

57
00:14:50,606 --> 00:15:04,206
Now let's implement our algorithm. First think what are going to do organ to find out the. Width and height the number of rows and the number of column so let's find out that so in rule he called to board.

58
00:15:04,406 --> 00:15:22,236
Dot lint. Then column number of column called to board. Zero dot at. Length. Phenomena pro and number of column. Know we have to scan our first rule and last rule.

59
00:15:22,316 --> 00:15:41,516
Then we'll scan our. Scant hour of first. Column then eu skin last column. First let's get our first rule and lustful. For. Int. C he calls to zero. While c is less than.

60
00:15:41,876 --> 00:16:00,306
Column c plus blech. Now insight here let's check. If we have if we have. Oars in our first. Rule let's check here. So bored. Judo and see. If we find out.

61
00:16:00,416 --> 00:16:17,406
Aws in aware this is not zero be right out here July it will not work. This is all. Uppercase o again. If we find out. Uppercase or ores in our first row will color a different function to replace all the connected.

62
00:16:17,516 --> 00:16:36,066
All stronger was with hash so let's call here different function. D f s. Let's provide our board. Then the index of this oath refined out. So the index is zero and see.

63
00:16:37,706 --> 00:16:52,166
Let's implement dysfunction now. Let's implement dysfunction dfs are right here. This is our main function. This function will replace all the connected all the connected aws all the connected aws with a hash let's implement it.

64
00:16:52,766 --> 00:17:05,346
Didn't the return type of this function is white so public void the f is it stick three parameter. Int. Board. Not he actually does his character matrix or char.

65
00:17:06,476 --> 00:17:20,466
Let's call it board. Eg ichiro ruin decks and nc column index. This is our Davis. Davis function we'll write our code here first let's complete this algorithm.

66
00:17:20,816 --> 00:17:34,376
Okay so let's scan our first row and last rule. So this is what our first wrote Alpha last rule Eve. Board for our last row we have to find out the index or plaster that is raw minus one.

67
00:17:34,706 --> 00:17:47,736
This route is number of rui having the given board and here see. If it you call to. Our office. A call to aws let's call it differs function board. All.

68
00:17:47,816 --> 00:18:04,716
Aboard here are first hour. The index room minus one. Room minus one didn't see. So here discord all skin this good old skin our first row and. Last row.

69
00:18:04,886 --> 00:18:20,366
Now let's implement. The court for our. First column and last column. For. Each are equal to zero are less than zero our plasma that. Writing to adhere electric or first column.

70
00:18:20,966 --> 00:18:34,466
First column. So bored. Aboard inner first column the row index is constant. Sorry the column index is constant column index is zero and the ru index is are here.

71
00:18:35,036 --> 00:18:47,766
And a cold too or if you find out all. Then we'll call our defense function to replace all the connected us with hutch. So bored. The indexes are and zero.

72
00:18:48,536 --> 00:19:04,206
No. This is. For our first call up now for the last column. Eve board if the board. Are for our last column are let's find out the indexable last column.

73
00:19:04,886 --> 00:19:18,626
If he had matic something like this oh. Then. All. Then. All we have to we have to scan our last column to in order to do that would have to do it we have to find out.

74
00:19:19,016 --> 00:19:33,246
The. The inexorable last column. That is we can find out easily by obstructing one one from our column this is number of column right. Now. Here if we find out.

75
00:19:33,596 --> 00:19:49,836
All refined it was the oil call our defense function board the indexes are and call. A call minus one. So this is our first step of our algorithm silver first is def.

76
00:19:50,486 --> 00:20:06,326
In the second stiff and in that hard stiff what we will do. We will replace. We will replace all the remaining. Aws with. X and all the hash with. All the hash with.

77
00:20:06,926 --> 00:20:26,994
Jiro have to recover that now let's implement dysfunction d f as right here. This is our default function this is a straight dfs function to. Implemented we have a base case let's evaluate our and see if art is less than zero or ii vs if art is good then recalled to the number of row so bored dot land.

78
00:20:27,474 --> 00:20:40,414
Now let's. See if sees less than zero or he sees greater than. Or equal to. The number of the number of column. It sees a greater than or equal to the Lindbergh column that is invalid.

79
00:20:41,214 --> 00:20:59,334
And here we have to check. We. We should have. We should have aws if we have aws only did you move so if we have not if we don't have a row so bored. Our c if we don't have returned to have all.

80
00:20:59,904 --> 00:21:22,734
Ok if we don't have all then what we will do will just return if you don't have oh. So we'll just a region here. This is your base guess. If this condition is true it means that the adolescent is all and at descent is val you'd write at dissent against and adjutant is oh if i doesn't is all we have to we have to.

81
00:21:23,364 --> 00:21:38,014
Replace that with hash. So bored r c. He called to hush. Now our function call have your down. Of right left for direction. Let's call dysfunction dfs.

82
00:21:38,124 --> 00:21:56,964
Board. Are plus on now four of dfs board. After our minus one c now for right dfs board. R c plus one for right. Then dfs. Board r c minus one four lipped.

83
00:21:57,564 --> 00:22:11,094
This is our Davis algorithm this is our street defense algorithm. Know in the first stiff art. We just did here. We replace. Replace. On surrounded. And.

84
00:22:11,664 --> 00:22:27,804
Surrounded. Region that meant and surrendered. Aws. With. Hush. Now in the hardest in the second step what we will do we will replace. Remaining. Remaining.

85
00:22:28,854 --> 00:22:50,404
Remaining. Of aws. Remaining one with. X. And in that hard stiff ought or you'll do will replace older hash. That is unturned it with. The suitable algorithm we can apply this is to step together let's see how to do that.

86
00:22:51,384 --> 00:23:06,384
So let's scan our metric so in articles two zero are less than raw are plus blush. Then. This nested loop for int c called to jiro see less than call c plus splash.

87
00:23:06,834 --> 00:23:31,144
Right inside here. First we have to. At first what he had to do. We have to replace our jurors with x to let's do that. So. If. If we find out our current element is oh we have to replace that with x selectric that so bored are see if we find out our current.

88
00:23:31,278 --> 00:23:47,089
Element is. Off then we have to replace that so aboard our. C he call to. Six. If we find a wood board r c he calls to hush. If you find out he calls to hush.

89
00:23:47,124 --> 00:24:00,454
Then we have to apply here this formula. This is our second step. This is our trusted we're doing it together. So our c. E calls to. He calls to you have to replace with oss.

90
00:24:01,614 --> 00:24:11,694
If we. Try disk this iep statement before this we might have wrong answer because it will replace our current element with zeros and then again if we replace the desert with x that will.

91
00:24:12,174 --> 00:24:24,694
Tends to wrong answer. This is our algorithm. I hope you've understood this algorithm we don't have to return anything we have to just mortified the guy given metrics in place we are just mortifying here.

92
00:24:24,774 --> 00:24:38,874
This is our coral great and i hope you have understood this ridiculous pronation. No let's around this before that we have your little typo let's fix it this should be d f s this is not d s f this is a little typo so let's.

93
00:24:39,264 --> 00:24:51,394
Generate two d f s now let get around this good. If you find anything wrong we'll fix that. Accepted let's admit it. Accepted we absolved install them successfully.

94
00:24:51,504 --> 00:25:01,444
I hope you've understood this video explanation. If you guys have any cushion post your question on the q and a forum. Thanks for watching this video.


@@@
1
00:00:00,000 --> 00:00:18,970
I. Will come back to this video in this video or going to solve this coding interview question bishopric Atlantic waterflow. This problem states that there is an m by n a rectangular island that borders both the specific ocean and Atlantic ocean.

2
00:00:19,020 --> 00:00:36,870
The bishopric ocean shin das sich the islands lipped and drop ages and the Atlantic ocean. Stasis da islands right and bottom aces. So really given. Him by any rectangular island this is our him by in.

3
00:00:37,320 --> 00:01:02,080
Rectangular island. The borders both the borders both die. The borders. Bought the specimen ocean and. The rectangular island. The rectangular island.

4
00:01:02,730 --> 00:01:16,510
This is our rectangular island the space you pick ocean does it the island lipped and top iss die. The bishopric ocean this is our bishopric ocean this ocean doses.

5
00:01:16,560 --> 00:01:36,090
This ocean to passage dot lipped and drop is is the lipped and top iss we see here. And the Atlantic ocean does it have the island. And the. Atlantic ocean passage the islands are right and bottom iss and here we see that.

6
00:01:36,420 --> 00:01:52,540
This is our Atlantic ocean these Atlantic ocean houses this are right and bottom iss. The island is partitioned into a grid square so you're given him by an integer matrix a height.

7
00:01:53,160 --> 00:02:14,542
A height our heights are c represents the height. Above sea level of the sill off. Of the sill at cordy in it rc. The island is partitioned into a greed of squares so.

8
00:02:15,240 --> 00:02:30,330
The island it is. This island. The island is partitioned into a great of square cells. You were given. Him by in into dramatics a height or height or sea regions the height above the sea level.

9
00:02:30,690 --> 00:02:48,220
Height above sea level off the sill at coordinate all r c here are ruined exceed column index. The island receives a lot of rain this island receives a lot of rain.

10
00:02:48,570 --> 00:03:04,960
We can assume that this is his core this is his choir. We can assume. That sell all the sill he esquire we can assume small squire. And the number represents the height.

11
00:03:05,190 --> 00:03:21,250
The height of docile. The island receives a lot of rain and the rainwater can flow to neighbouring sails directly north south east and west. We have this poor direction.

12
00:03:21,330 --> 00:03:33,640
Eve the neighbouring cells height is less than or equal to the current silt height water can flow from any sill add descent to an ocean into the ocean.

13
00:03:34,350 --> 00:03:52,540
For examples here. He from here we see the water can moves in this direction he re up to so this adjacent cells are of same height so water can flow in this direction but order cannot flow in this direction because the height of this cell we see three.

14
00:03:55,380 --> 00:04:10,770
We have to return it to the list of great. Coordinates results are rigid i e called to r i see i do notice that. Rain water can flow. From cyl r i c i to both.

15
00:04:11,100 --> 00:04:25,195
The bishopric oil. To both the specific and Atlantic oceans. So if we're given these great we have to find out the cell from hot water flows to specific ocean.

16
00:04:25,470 --> 00:05:09,720
As well as to Atlantic ocean. In this great. This mart sell. This Mark silt. In this grid we see that marked sil. In this great we saw the Mark sil from the Mark assailed the water flow to the bishopric ocean as well as to Atlantic ocean here we have five so water can flow here and here so it goes to pacific ocean as well as to Atlantic ocean from for water again flow laws in this direction or in this tradition it somehow if he can resist especially caution and Atlantic ocean then we have to add it to our.

17
00:05:10,260 --> 00:05:19,260
To our answer list and for sim for this war and for this five we see water can flow in this direction in order to live for in this direction so. From this.

18
00:05:19,590 --> 00:05:36,280
Assail Oregon go was in pacific ocean and Atlantic ocean and four six seven and five as well so we have to return the indices of the marksville or the cell from hot water flows into pacific ocean and into Atlantic ocean.

19
00:05:36,630 --> 00:05:49,270
This is the problem statement. This problem similar to the previous posts Evelyn we sobbed. Now let's see how to solve this problem. Let's assume we're given.

20
00:05:49,320 --> 00:06:03,580
This great weird given this great. Da. The integer in the great represents the height decision our islands these great represents island where the number of potential height of each square.

21
00:06:03,990 --> 00:06:15,210
And here we have specific. Bullshit and here we have Atlantic ocean turf and lipped. Doses especially precaution and bottom and right touted Atlantic ocean.

22
00:06:15,750 --> 00:06:28,510
Here we have two boolean matrix for this is for pcp kosher and this is for Atlantic ocean all seated why we need that. Now let's talk about how to solve despoil him.

23
00:06:28,560 --> 00:06:46,890
In order to solve this problem we're going to skin our boundary we have here for boundary in the previous problem we saw that we scanned our boundary first our first row then our last row then first column the last column on.

24
00:06:47,490 --> 00:07:08,020
How to solve the strolling by scanning the boundary first thing ought or going to do. We're going to skin we're going to skin our first row. First row and will check the front is there any sil he will find it all the silt from wiz Oregon flows in this direction wineskin.

25
00:07:08,130 --> 00:07:22,710
This first when we. Process this one we will. Will Mark all the sales from which Oregon flour to this water can flow to this when you move to this we will Mark all the seals in this great.

26
00:07:23,310 --> 00:07:49,170
Buy with Oregon flow in this direction that goes to specific. Basic ocean by this direction so earthscan first this and. When we find out. A certain sil when he find out the sil from what we can go to pacific ocean will Mark that sill in this specific indispensible bullion matrix will Baghdad that silly behavior true it means that.

27
00:07:49,680 --> 00:08:05,200
From one. Disorder pcp Berlin metrics hurry up to it means that water can go to bishopric ocean from the cell here if we have true it means that water can goes Oregon goes to the specific ocean from the sill.

28
00:08:05,580 --> 00:08:21,750
And if we Mark here in the sell something like this let's assume we marked here. It means that the water can flow to Atlantic ocean Atlantic ocean if we have your true it means that the water can flow to the Atlantic ocean so we will.

29
00:08:22,080 --> 00:08:35,310
Have to do this we will skin. Our boundary. First old scanner our first row then last row then first column the last column. So first let's process our.

30
00:08:35,610 --> 00:08:48,780
Let's process our first row. And last row. Of oil Mark all the sales from his Oregon. Mobs to this sale will Mark all the sales and so here. The it seems this.

31
00:08:49,110 --> 00:09:05,880
The stop doth especially big ocean so one is scan this we will store the result in specific bullion metrics and when we scan these we see this bottom this Baltimore this last raw data is Atlantic so here if we salt water can reach Oregon rest his soul.

32
00:09:06,240 --> 00:09:19,600
Then Oregon do we care can Mark that as true in our. Inner Atlantic ocean. Now let's put us our first route when we process our first room wound stood the answer in our patient big ocean let's start.

33
00:09:19,890 --> 00:09:37,330
So first we have dsl so zero. Zero. This is not a difficult question. Just bear with me. So we have this. Zero zero. We have direction first olmo down then of being right.

34
00:09:37,860 --> 00:09:57,900
And then limped the city over for direction. First let's move to down. Now here what is our vela in this. In here what is your value at this one this is our current velo now we have add descent this year will add descent then decision will add descent of zero zero right can he go to down here.

35
00:09:58,260 --> 00:10:11,886
From this doan Kendall water flow to this one to this index zero judo. We see yes because this is height is greater than this so Oregon water. A flaw to this from the sil.

36
00:10:12,046 --> 00:10:31,585
From this first row. We can say for sure order all. Our floated pacific ocean so we can Mark this. Up astral. This is where bishopric ocean. Now we have one now digital we're down we can go to can we again the water moves to this from this down the years.

37
00:10:31,936 --> 00:10:43,966
So let's motor down. This is our don't so one zero. No lifted the ad descent can water a flourish to this. Or to the street here have the fellow tree.

38
00:10:44,416 --> 00:10:59,476
Can water flows from this down to this no because this is greater than the height is greater than water or not flow in this direction so what we'll do we'll just what we'll do here will just hear region because water cannot flow here.

39
00:10:59,926 --> 00:11:15,056
Right right. No. Let's go to af. Up is already visited apis too. So if app is true that is already visited or you don't care that. We don't care that that is already visited.

40
00:11:15,196 --> 00:11:30,886
Here we have one zero right. Since we have processed orange order can move from the cell to letterman arkit as a true. Joakim. Noah let's go to the article have no he cannot go to love because on the app we have true public interest here.

41
00:11:31,216 --> 00:11:46,486
We are moving from after here so the kid is already visited. Now let's go to the right Kenny get the right kind of waterflow to this gentleman from right no this is credit then right this is greater than this at three so water can't flow from right to the cell.

42
00:11:46,846 --> 00:12:06,826
Now we have our. Lipped we have our lipped. Can you go to lipped we see the lift is boundary. From lipped order cannot flow to this were just a winner processing this one zero we're carrying from which we can have the way water flow from that direction to this.

43
00:12:07,216 --> 00:12:17,786
If you have adjutant here we're checking our goal is that witching the adolescent is there any dissent from her daughter coming to this. No. So there is nothing to do here.

44
00:12:17,836 --> 00:12:30,176
So now let's move dollar zero one this is already visited from your order can comes to. Our one right so this is visited now let's go to up. This is up up is.

45
00:12:30,406 --> 00:12:50,546
Outer boundary is nothing on the app so we'll just written because nothing on the right. Nothing on the tops that we just read and write. Can order fulfilled right to this one can waterflow from right this is straight from right to this one yes the height of one is less than two so water can flow so here's what we will do.

46
00:12:50,896 --> 00:13:05,576
How will a cope with the right sir zero one. Zero one so from zero order flows to this so let's market astral. Now. Let's process this here we have again for direction.

47
00:13:05,626 --> 00:13:19,436
Let's find the address from her order it comes to this. Right for first down. Here stone is equal to from here water can flow to this. So it let's call it read down one on let's market astral.

48
00:13:20,176 --> 00:13:32,446
Then from here. Let's write the number here we have two here we have to as well from here again leads me to a choice. Let's meet our choice. We see the ad descent up to down down is four.

49
00:13:32,806 --> 00:13:44,666
Four is good then two so what i can flip on forty two so let's a market and let's have to Darwin and there is two two one let's market as. Let's market astral.

50
00:13:44,836 --> 00:14:02,396
Now we move two to one right here. Joakim. No from four. Here we have developed for. Here first let's go to down. Can water flow from down to here yes water can flow to us four from seven so let's move to seven.

51
00:14:02,476 --> 00:14:29,806
Let's move to seven here the index is three one right. Let's market as true. Now let's face it three one. Here we have full direction we see that we have you're on the bottom we have one water can flow from bottom to hear or cannot from four to seven because this is already visited what i cannot fathom right to hear ideas on what are alternate from lip to this so there is no posse people.

52
00:14:30,136 --> 00:14:47,696
At descended from her daughter comes to this. So let's backtrack here from two one now we are at here. To one. And here we see that. From down. Order cannot water can flow to this we already salt we've already moved down we're done.

53
00:14:47,866 --> 00:15:00,556
Now let's go to. App app is visited. App is visited right. That we have here right right is fine we can move to right so let's move to right so what a good improvement right we get to to.

54
00:15:01,006 --> 00:15:13,676
Get him to do from here are going to be a forward direction. We have here for duration and he received five is greater than all the adjutant so there is no possible way since you moved to two so let's market astral.

55
00:15:14,356 --> 00:15:34,006
And can you go to lipped know from. Two one we cannot go to leapt on the left we helped you. Now let back here at one one. We moved down. From one on Kenny go to have no chemical to write years we can go to right right is granted then so let's go to variety be good right we get here.

56
00:15:34,396 --> 00:15:49,516
One to hear again we have four choice we have here for choice. So one two three four. Can go down from one two from here can you go to don't. Let market century i can visit this one too.

57
00:15:49,816 --> 00:15:58,546
Can you go to don't know donors visited can go to af. Af is less than three i can we can go to off clinical to write yes we can go right let's go to right here.

58
00:15:58,936 --> 00:16:11,506
She cannot go down can go to af let's go to right sumitra he removed to ride we get one three. Legit market as visited one three. This will be true. Now from one tree.

59
00:16:11,896 --> 00:16:23,986
We have again for choice from one three we have fortress we cannot go to down we can you can go to al because water cannot perform. Down to this we're going to perform up to this organic from.

60
00:16:24,346 --> 00:16:34,886
What i can flip them right to this okay from right to this. Let's go to right. Known as impossible an app is impossible now that good alright roadies a one four.

61
00:16:34,966 --> 00:16:51,806
Again here we have four choice. For this. Let's market on for. As true. Now we cannot go to or we cannot go to down here down is one he cannot go do or it can go off here it's good to have we got advocate zero five.

62
00:16:52,036 --> 00:17:07,396
We will get zero zero four actually. Do refer. And. Let's market zero for the sky. As true. I can order flow from. Inform down to this one is already visited can order from up to this.

63
00:17:07,756 --> 00:17:18,626
Abyss and there is nothing when the absolute will just return. Can order flow from. Right under right have nothing right i can order from the slept no so there is no way.

64
00:17:18,676 --> 00:17:39,796
He cannot move in any direction. And leads back to one four. One four right here. We moved. Off now can go to right no and right you have nothing we. Have defined a Brazil from where order is coming here we have defined itself from the ad just insult from her or his origin a flow here and there is no way.

65
00:17:40,156 --> 00:17:51,176
There is no this is already visited. So we don't care this will just a good for that and here are what i'm going to do i'm going to move to lead weekend and from group omelet but.

66
00:17:51,226 --> 00:18:08,636
And then again here for one three back to one three we get here for. Right from. A we moved to write he can move to leapt no. There is no way. And from here one two from one two we moved to right can you move to.

67
00:18:08,746 --> 00:18:20,746
Leapt no. You cannot go to la because from lipped water can come here or can flow hero this is already visited. So. This is not possible then put on on leads back to one one.

68
00:18:21,256 --> 00:18:31,606
I'm just going to complete this for this only this only for this first. For this first skin he paid for all the skin it all takes lot of time so let me finish this for this.

69
00:18:31,966 --> 00:18:46,276
First row scanning. He was scanned his first row. Here it'll be back to one one. From here was he can go to right. Can i go to right we go to ophir from one one from aunt one.

70
00:18:46,936 --> 00:19:05,326
We cannot move to f. So from one one here we have to. Write this is on one. From one one regret don't we moved down. From one one we moved to. Off note we cannot move to of we can move to actually to write so this is.

71
00:19:05,986 --> 00:19:22,166
Not possible and this is for fright. We can move to right from here we have three sept one through move to one three. And then here we have. This is for lipped this is poorer up we can have both of you can do right that is completed we cannot move to lift.

72
00:19:22,246 --> 00:19:34,966
Are going to erie back to Judah one. Zero one. We see we can move to down. Four zero one we can move to Darwin and Kenny moved to have no Kenny moved to right from here.

73
00:19:35,506 --> 00:19:58,496
Yes we can move to right so let's move to right and that is zero to. Lead the market as visited zero two. Zero two. From here from zero to Kenny moved to down no Kenny moved to af Norwich and Guinea move to right yes we can move to ride we cannot move to down identical to African move to right so let's move to right zero three let's industrial.

74
00:19:59,836 --> 00:20:10,726
Let's market as true. So here again here we have no more choice. Because all our visited. Because old i just didn't have this out. Or visited actually and we have nothing on the top.

75
00:20:11,206 --> 00:20:26,428
Now from July two. From Georgia Kenny go to. Lit know. There is no way from zero zero. Can move in any direction no. The ad doesn't are visited this is our decision our gif is I'll go to the or just applying to this.

76
00:20:26,700 --> 00:20:40,558
Your index all apples or devas are on every single tool in our first rule. If we appling. In every single cell. Or actually we will get this. This bishopric a boolean matrix.

77
00:20:41,088 --> 00:20:54,318
And then we have to apply here. Didn't we have diablo two first route then you have to apply first column now let me just. Let me just do this because if i tried to draw everything here eBay assure you be a beating in addition to that it takes a lot of time.

78
00:20:55,008 --> 00:21:23,098
Living just let me just complete this bishopric and Atlantic ocean. So if we add ladies when we process this we have to. Use this metric this Edison semantics because order will flow from dsl to Atlantic that old process our this first column the water will photo but she pick shall we have to work with the set or this matrix and when we process this last column we have two approaches dismay tricks and lets me just accomplish this metrics.

79
00:21:24,018 --> 00:21:42,718
So it was kin it was kant our boundary it was scan our boundary we will get this bishopric. This bishop pick. A bolin metrics and his Atlantic bullion metrics and from all the sil we have drew from her we can move to pressure pic ocean and here we have Atlantic.

80
00:21:42,768 --> 00:21:59,668
Are this willian metric. We have all the celts marked with a Mark drew from her Oregon moto Atlantic ocean. So the main concept here is that. Let's let's think we have this we have.

81
00:21:59,838 --> 00:22:11,668
Our were just processing this one. Epic call it zero zero what is our current our current value is one. Our current value is one. Now we have adjusted.

82
00:22:11,838 --> 00:22:25,288
We have adjutant first down on the down we have adjutant three right so one zero here we have valid tree so water can flow from here to here. Right so we'll market astral.

83
00:22:25,398 --> 00:22:36,288
Will market astral. Now from here again we will apply the same process. From here again we have four choice from here Kenny go down on the down here we have this value to.

84
00:22:36,618 --> 00:22:56,238
That is. Actual here will have. A. One zero kid in here will have. To zero. And here order will have what we have to from here we cannot. A water cannot flow from this distorted history because the height here is three Uriah two to order cannot flow to this.

85
00:22:56,658 --> 00:23:14,368
This is not possible to one market astral. Now here all move to NYC choice that is up. That is up. From here from one zero with the af is zero zero that is already visited it means that from where we are coming to this.

86
00:23:14,478 --> 00:23:29,248
From what we are coming to this. We don't have to worry about that because. We we had we don't have to order but that is already visited. Our goal is to Mark all good to find out from what already is coming to this.

87
00:23:29,508 --> 00:23:42,448
From her and here we see that we have already true we have already true. So we don't abdicate about this this is already too. Seemed our. Upper sil is visited.

88
00:23:42,738 --> 00:23:56,248
We will justice keep that. From there visited so. We know from within itself what again goes to the pacific ocean for this when you're calling this function what is forest wrong with this index.

89
00:23:56,838 --> 00:24:11,458
So we don't have to worry about this. Then we'll call it right right is true and right we have on one. Four one zero that is on what we have to to. What i cannot f o flow from height to do a tree right so this is not possible.

90
00:24:11,748 --> 00:24:33,648
This is not possible. If this is possible oil market astral. Then here we have our next choice which is leapt on the lips we have nothing. Singer of nothing water or water cannot flow from here a water Cannon from your water will flow from these to our ocean not from ocean to this or camp so he wouldn't have to worry about this.

91
00:24:34,038 --> 00:24:47,508
This is our core concept will apply to same logic to every single every single. Element in our. In our boundary. For our forest boundary for the first column we will work with bishopric.

92
00:24:47,868 --> 00:25:04,768
Wish and this matrix for our lust. For our last row and for our last. Column will work with this. Epic ocean. I hope you have understood. Now what you have to do we have to check this to these two.

93
00:25:04,878 --> 00:25:17,758
Metrics pacific and Atlantic this or bullion metrics. Let's find out that true value where we have common we'll find out the common okay we'll find out the common curiosity is common.

94
00:25:18,108 --> 00:25:32,898
Here and here. Then this guy and this guy is also common. This is also common in our boat. In our boat Atlantic and especially peak then we have your drew here we have two common.

95
00:25:33,408 --> 00:25:44,448
Than we have here drew here we have drew this is all too common. Than we have here this true hero destroy is common here we have distro here we have this too that is common.

96
00:25:44,838 --> 00:25:58,308
So the common is our answer. From the common from the common true because from here order goes to a bishopric and from your altar water goes to. Atlantic so let's find out the index number we can just eater it it.

97
00:25:58,878 --> 00:26:07,938
Will iterate. Our matrix one metrics and if we find that the. Avella at corresponding pollution in two metrics or two would add the index here we have index.

98
00:26:08,358 --> 00:26:29,158
Zero for. Didn't we have index here one three. That we have indexed on for. Ten to two. Three zero. Three one. And four zero. This is our answer read written this as a list.

99
00:26:29,838 --> 00:26:41,818
I hope you have understood this video explanation. No let's implement our algorithm. First what i'm going to do i'm going to find it the number of rows and number of column.

100
00:26:42,048 --> 00:27:00,598
And row equals to. A height dot. Lint this is the number of rows and number of column calls to heights. Duro. Dot length. No let's create two billion metrics one for psh be caution and one for.

101
00:27:01,278 --> 00:27:19,458
Atlantic ocean. So bullion. Blinn. Let's call it bishopric beige pick he called to new bullion. And the. Dimensions of this magic sim as the given. The dimension of this matic seem as the given metrics.

102
00:27:19,908 --> 00:27:32,608
This is a Maddox against it. So roll call. Number of rows and number of column. Now let's create. The matrix for pressure big ocean. So now let's get the matrix for.

103
00:27:32,958 --> 00:27:58,018
Atlantic ocean. Atlantic. He calls to new. Boolean. The dimension of this dramatics are sim. So this are our two metrics. Here we see that we have a list this list is containing another list so we have to create this list or we'll store our answer so let's create the list right here.

104
00:27:58,848 --> 00:28:17,758
Let's call it list. In this list old store the answer. Let's call it new analyst. No let's fight let's declare available. Men. Here all stood the minimum integer we can we have in thirty two bit so entered an integer dot mean available.

105
00:28:19,608 --> 00:28:33,558
Know what we're going to do we're going to scan our first row and last rule. Let's. I assume this is our given the metrics. We saw that from top and left we can move to.

106
00:28:34,218 --> 00:28:50,358
We can move to pacific ocean. So for first row. We have to. Call our Davis function with the bishopric this with the specific metrics. Now let's iterate our first route and lustful.

107
00:28:50,748 --> 00:29:04,888
Int c he called two zero super column. C less than. C list and call number of column c plus splotch. Right inside here. Let's call our Davis function.

108
00:29:05,478 --> 00:29:21,058
With the first row index source for first ruined expressed let's provide our heights matrix. Then we have to provide. Our basic. Boolean matrix. Then the raw index that raw index is.

109
00:29:21,408 --> 00:29:33,258
For our first row. The row index is zero and the column index is c. It is it will chant first time judo then second and third and so on. Since you are scanning your first roll.

110
00:29:33,888 --> 00:29:48,138
And here we will provide eight. Below for our current so let's provide here invalid min this minimum value. So here when he called this function for the first time when eateries to one it will check the fellow.

111
00:29:48,468 --> 00:29:55,848
It will take developed with and will give invalid arguable is minimum so from we know that from our forester from all the silt we can raise our pacific ocean.

112
00:29:56,148 --> 00:30:10,918
So we can provide you the minimum political have in thirty two bits. We can guarantee that the water will flow from. This first route to the specific ocean that's it we're providing this minimum this minimum integer.

113
00:30:11,958 --> 00:30:26,508
We call this function with this. We just five parameter. Note let's call the function for this last rule. For this last row so dfs a height for luster to order all mobs to an order oil flow to our.

114
00:30:26,928 --> 00:30:47,112
Atlantic ocean so let's call it with this Atlantic. Atlantic. In medics so at. La antic. Then the raw index is here the row index is. The last ruined xo that is raw minus one and the column index is c and he also minimum.

115
00:30:47,732 --> 00:30:57,992
So we can assume that water can flow from five to this baby cushion that's what we're just. Providing a minimum this is what our first rule and for. Last rule.

116
00:30:58,532 --> 00:31:10,092
It will scan his first real than the last rule note we have to scan our first column and last corner let's scan here. So the first column and last column.

117
00:31:10,262 --> 00:31:23,922
For each articles two zero are less than raw are black splotch. Right inside here dia of his heights for our first column water will move to the pcb caution so pacific.

118
00:31:24,272 --> 00:31:34,842
Then the index we see that he'll call him index is fixed but raw index old gent so are zero. For our first column. Didn't we have to provide the minimum number.

119
00:31:35,432 --> 00:31:48,992
So that Oregon float to this slipped. This is forever first column now for last column dfs. Heights. Here will have pesci peak Atlantic because. From the last seal order all.

120
00:31:49,470 --> 00:32:04,502
Water will move to Florida Atlantic ocean. Then here our index. The index that ruined Dixie here is. The ruined it's changed and the column index is the last column index so call minus one.

121
00:32:05,072 --> 00:32:20,492
And this minimum integer. So this too loaf. This to lwf. Will constrict our bullion metrics pacific and Atlantic. It will Mark the silt from where it can move to up.

122
00:32:20,852 --> 00:32:28,752
Should be caution in the specific woolen metrics and it will Mark all the self-promote we can hope to Atlantic ocean my disdain for his function we just.

123
00:32:29,192 --> 00:32:39,602
Showed you in the screen. Note let's implement his Davis function. Let's implement this d of his function. Before that let's compete our algorithm here.

124
00:32:40,022 --> 00:32:50,982
This is our state for a different function. Now let's find the comments in. In Atlantic and specific from her order goes to patients and what it goes to Atlantic.

125
00:32:51,992 --> 00:33:07,982
Let's assume. This cell is marked as to my specific question that means from here it can move to pacific ocean then Atlantic ocean. It Mark as to as well so the water can move from here to Atlantic ocean as well so we'll find the common.

126
00:33:08,342 --> 00:33:27,012
Let's scan our matrix. So for. In articles two zero. Art less than raw art plus splotch. Then for each sequel to zero see less than call c less than coal c plus blech.

127
00:33:27,542 --> 00:33:42,222
No i'm going to chick. I'm going to check into the pacific ocean pesci ffiec ocean if we have at. This row and column index equal stood true. And it was so at Atlantic at.

128
00:33:42,302 --> 00:33:57,662
Land tic ocean r and c. Is a call to true. It means that water can flow from this curry index from this r and c ruined and column in this order can float in both ocean so we can add that to this list.

129
00:33:57,992 --> 00:34:14,382
So list dot add. Now if. We have to convert this r and c to analyst or to list. Then we can add to this so. Areas dot as as list let's provide here. These are nc.

130
00:34:15,392 --> 00:34:26,740
So this list will be to editorialist list at the interior can just return our list. Now let's implement our deepest function this is straightforward. So public.

131
00:34:27,332 --> 00:34:39,522
Let's call it static void Gordon type is void let's call this function d f s. It sticks. Our metrics let's change the name of this matrix heights to metrics.

132
00:34:39,752 --> 00:34:52,692
Then it sticks this boolean matrix so bullion. Let's call it ocean because we'll call this weed. Up better because pcb had altered Atlantic ocean let's just name it ocean.

133
00:34:53,252 --> 00:35:04,992
Than our ruined x. Our column index and let's go to a current value that i showed you on the screen the current velo Joakim when you call our function for the first time.

134
00:35:05,552 --> 00:35:23,102
We assume the current value is minimum. For us to let validate our cell if r is less than zero that is invalid if r is greater than recalled two or if r is greater than a recalled to matrix dot lint or Eve sees less than zero.

135
00:35:23,432 --> 00:35:41,382
Or c is. Algorithm recalled to matrix. Dot lint. If this condition is true it means. The index is invalid so in that case will just return. Now here's what i'm gonna do i'm going to check.

136
00:35:41,672 --> 00:36:00,422
I am going to check. The value in our. Matrix so. Our see. If this value is if this value is less than our current value that means this isn't what ad doesn't for this current rate this is the adjutant we can consider this is as i just didn't put our current.

137
00:36:00,902 --> 00:36:12,405
Then it means that water can flow from this adjutant to current. Current is only start with this one we can assume. Or if we saw our currency has visited.

138
00:36:12,452 --> 00:36:29,612
So ocean. Are see if the currency is visited. Then it will market it will marked as true so in that case all just a return. Because from here. From. If we look at this look at this.

139
00:36:30,182 --> 00:36:41,852
And here he put it we saw that here from four water cannot flow from tree to this poor loader cannot flow from two to this tree right. So here we can assume our current is.

140
00:36:42,212 --> 00:36:55,092
Our current is this a tree and adjutant is two. So current will be three before the function call and a descent will be two so from two to three water cannot flow that's what we're taking this condition.

141
00:36:56,342 --> 00:37:09,342
Now. It is two statement is not executed it means that. Water can flow so let Mark what it can flow from ad dissent to recurrent cell so let's Mark that inner ocean.

142
00:37:09,692 --> 00:37:24,552
At r and c index. That water can flow. Now here we have four direction of the call function without adjutant we have your four adjutant first down then of right left you can follow any order i'm going to follow disorder here.

143
00:37:25,322 --> 00:37:36,392
Here it should ocean. Now let's call them differs function Davis and Matt tricks or sheehan. Then ruined it so we have to move to have a whip to move to to add one to reindex.

144
00:37:36,782 --> 00:37:53,862
Then see. Then our current current is for our current. Recurrent valerate for a current row index value. So metrics are c. No. Off so mad tricks or shin.

145
00:37:54,032 --> 00:38:06,192
Our bonus one in automotive off we have to subtract one from one vote we have to move to top roll. Then see. Metric this is a recurrent. R c. No d f s.

146
00:38:06,782 --> 00:38:28,692
Dfs Matt tricks. Ocean. Right here to move to right up to add one to our column so our c plus one mad tricks r c. Now dfs my tricks. Or shin in order to move to left it to substance on from our columns as he minus one matic decider our current valerate.

147
00:38:28,922 --> 00:38:46,242
We did have to check the add descent whether from addressing the water. Can flow to this or not and here this will be recurrent would discourage deliver current and adjutant will be metrics or so see singer ginning this out we are just mortifying these are moving to this direction is by just modifying that.

148
00:38:46,502 --> 00:39:02,262
Index. Oregon this is our core algorithm. I hope you have understood this video explanation. Now let's see. If this algorithm works let's run this if you find out anything wrong we'll fix that.

149
00:39:02,702 --> 00:39:23,982
Accepted. Let's submit it. Accepted we have solved this problem successfully. I hope you've understood this video explanation. If i explained everything of this algorithm little dicks lot of times i just showed you by just scanning our first drew you to scan for straw last row first column last color.


@@@
1
00:00:00,660 --> 00:00:11,620
We'll come back to this video in this video we're going to solve this coding interview question clone a graph. This is very very important coding interview question.

2
00:00:12,120 --> 00:00:27,210
In this volume were given a graph. Let's assume we're given this graph. This graph is represented using ad decentralized. This one is connected to on is connected to.

3
00:00:27,570 --> 00:00:47,220
Two and four. Then this two is connected to one and a three. Three is connected to. Do and four four is connected to. One and three. So we're giving this graph this graph is represented as add just nc list.

4
00:00:47,550 --> 00:00:58,530
That they don't address instead list this adjutant see list regent this graph we have to clone this graph. We have to close this draft reclaimed his draft order you will get will get these graph.

5
00:00:58,950 --> 00:01:14,460
One. Two. At three. Four. We have to call this graphic prequel and his graph will get this same graph but. We should have new note here this note should be newly created note.

6
00:01:14,820 --> 00:01:31,620
It cannot the reference to the origin and lord we have to create this for notes and. We should have disordered one should connected to two and four three should connected to two and fortress two should connected to one and three and four should constitute one and three.

7
00:01:32,250 --> 00:01:46,500
So if we were given this graph. We have two. We have to construct this graph from this graph. In this video we're going to clone. Graph using b f s algorithm.

8
00:01:46,860 --> 00:01:59,410
In the next video I'll talk about a dfs algorithm how to clone a graph using dfs algorithm in this video atleti how to clone a given graph using bfs algorithm.

9
00:01:59,850 --> 00:02:14,830
Let's assume we're given this. Graph at gravity distractor this graph is represented using bees. I just didn't see list. And we're given the access. Of this note.

10
00:02:15,420 --> 00:02:28,390
In this video we're going to clean this graph using bfs algorithm. Make sure he understand make sure you understand how to traverse adjacency list using bfs algorithm we have a video in this section.

11
00:02:29,460 --> 00:02:40,510
Please was that video first if he haven't. Solved that problem out of drivers Edison's list using bfs algorithm please. Solve the problem first then come back to this video.

12
00:02:40,860 --> 00:02:56,860
So we have. Access of this note. In bfs algorithm we know that we traversed level by level and we keep track of the visited node. In this algorithm will keep track the visited node using a hashmap.

13
00:02:57,120 --> 00:03:11,670
Will traverse our. Ad decency list. And all cloned the node first one a traversed one old clone one. Then we have. The adjutant two and four Oakland. Two and four for.

14
00:03:12,180 --> 00:03:28,000
Now let's see how to do this. Let's assume. This is our hash map. You our hashmap. Initially we will add our given node. As key so we have added here one.

15
00:03:28,950 --> 00:03:46,050
And as value what we're going to do we're going to create a new note we develop of this. Let's grid here note and let's add it as. Lid add. This note as value so this is key this is velo we just cloned this node.

16
00:03:46,500 --> 00:03:58,290
This node when he added this note here here it means this notice visited and here we have cloned this note so if we. If we find it the adjutant up one will add old i'd just end up on to this.

17
00:03:58,890 --> 00:04:17,080
To the Edison of this node. In this problem we given the nod. In nord. Glass we have a value we have a value and we have list of. Node. We have list up node will see that when we'll implement our algorithm.

18
00:04:17,850 --> 00:04:34,630
Up until this point we cloned this node one. And we added here so this note is visited. Now let's find out the. Adjutant of one and let's add that to the neighbors to the neighbors of this node.

19
00:04:34,710 --> 00:04:48,561
We are given ignored in the nord we have a below we have a value then we have a list of nord. We have a list of not here we have. What we can say this list is i worked neighbors.

20
00:04:49,650 --> 00:05:04,180
Neighbors Joakim. Now. Let's see how to solve this problem we will see. Our note clutch when we implement our algorithm. We cloned this note one here.

21
00:05:04,620 --> 00:05:19,890
This is our new note the ad doesn't have this note is empty but the ad doesn't have this node to and afford or not showing you hear the ad descent or just trigger the note and four cloned node we're showing you the not alter the adjutant the ad doesn't empty.

22
00:05:20,310 --> 00:05:33,580
Your emptier descent but for this note we have add descent two and four when unsure you are the adolescent. Adolescent are connected to this node. Now let's see how to Glen this graph.

23
00:05:33,990 --> 00:05:50,920
We know that in bfs algorithm we use. Queue data structure. When we added this note one. What we what we will do we will add that nord in on the origin or not this is not a cloned node we added to the sky the destructor.

24
00:05:52,290 --> 00:06:08,490
So this note is visited. No let's start our algorithm this is our initial step. So let's remove the front from our queue so we get this node one. This note is already visited right since you're at it took you.

25
00:06:08,850 --> 00:06:25,380
This nor is visited. We don't have to call on this note because duh this notice already visited. And we already cloned we already cloned this node. We will clone our not only when will.

26
00:06:25,740 --> 00:06:39,750
We insert our note to q. When will insert one or two the queue will cloned that note. Will add origin the lord. Ascii and the cloned not as velo. Now we have this node one.

27
00:06:40,170 --> 00:06:54,100
Let's explore the adjutant at the center too. Then we have a descent for. Okay. So first just sent is to. Is our forest at dissent what we will do will add this ad to send.

28
00:06:54,510 --> 00:07:12,490
Also can say the neighbours of this note on his two and four. All she can say Edison. So when we. When we find out this adjacent to what we're going to do we're going to call this adjutant there is no cloned copy of this i just sent in our graph.

29
00:07:12,780 --> 00:07:31,800
Also if the market has visited let's clone it first so we are going to coordinate by asterisk i meant cloned node. The ad doesn't have this nor is emptier the neighbors of this note is empty and we have nothing and the neighbors or adjutant of this nor do we have year one and three right.

30
00:07:32,340 --> 00:07:43,590
Singer added is not here and reclined so let's add this note to our queue. So we have cloned this node. We call this nord since this nor does not exist in our.

31
00:07:43,980 --> 00:07:59,590
In our hashmap you have to clone does not and you have to add this note so this notice visited alter this notice already clawed. This notice already cloned now we have to add this cloned not disclosed nod to the ad descent of this note.

32
00:07:59,730 --> 00:08:10,290
Of this grand nord right. We have to add this nod to the ad descent to the adjutant of this gallant nod. So we have the access to this see the route of our.

33
00:08:10,740 --> 00:08:32,230
Visitor center against a. Begins to visit our current. Sure we can find out the neighbors. The neighbors of our cloned node. Will get the nod first this is our nod we can get by this current node will get these know that we have access to this not we can just do it the name of detachment his math math dot get current.

34
00:08:32,670 --> 00:08:44,880
That will get. This node right in order to access the neighbors will just to hear. Ne bourse so we'll get the access of this abortion here again just add here we can add.

35
00:08:45,240 --> 00:09:09,450
What we snort we have this. We have this note to. Write we have this note too. It was at this note is in that it can we can find the cloned nord since we have process that is not here we have added to the queue and we have cloned here we can access the corner of this not even in the name of this notice in that it can get that by saying here if we say.

36
00:09:10,020 --> 00:09:27,210
It was a math. Dot get it was a map to get. In. It was at this math dot get in. Then what we will get. We'll get this. Go and not right this not an all added nod to the adjutant.

37
00:09:27,540 --> 00:09:43,510
It just to this map dot get current dot neighbors matador to get. So we'll get this note here to let add is not. Right here to a star. This is our. Neighbors of this not one.

38
00:09:43,710 --> 00:09:57,220
Of this gallant note. So if this is our current node. This is our adolescent fasting. We see that this does not exist either nor does not exist or doesn't not visited first thing what will the old corn does not.

39
00:09:57,270 --> 00:10:10,668
So first we can create a temp not here hypocrite attempt not typical to. A new node we can say this is our clannad with the velo of our lord in the. Name of this is in indoor to tavel.

40
00:10:12,012 --> 00:10:27,562
So this is our cloned node will add. This. Let's add a tour map will apply this simple formula math dar to put. Math dirt port whatever the origin lord origin or lord is in and our temp is temp.

41
00:10:27,672 --> 00:10:39,172
We have guaranteed right we have cloned it. Now what we're going to do. We're going to find out. We're going to find it or we have to or we have to add this node.

42
00:10:39,492 --> 00:10:51,432
Temp right. We have to add this note timp to the neighbors of. The neighbors of the coolant of this current node. That is that is here right so we can get it.

43
00:10:51,852 --> 00:11:11,692
By are you saying. Maf dot get. Current. Dot neighbors. Ne. Ne boards. We find that our neighbors right. This neighbors and here we will add. This gallant nord.

44
00:11:11,832 --> 00:11:25,632
We have just inserted here. This temp we can see here. This temp. Or we can say. Or we can say math. Dot get whatever we have for our in. In your math.

45
00:11:25,992 --> 00:11:41,982
Is so get. Some map that get in. We will see this algorithm will write the code. Now let me finish this. So what we call this no this is visited. Now let's move to the next descent.

46
00:11:42,402 --> 00:12:01,512
That is for. This is for. So this does not exist so let out here and let's clone it. So this note four is visited we have this. For asterisk. Now. For this for is the adjutant of one so we have to find the cloned of one.

47
00:12:02,082 --> 00:12:14,902
That is this not one. We have to add the neighbors of this gland. This gland so we'll add the support. Right here. This is pretty straightforward. For the first time.

48
00:12:15,522 --> 00:12:27,712
It'll take a little bit times to understand but this is not that much difficult. When we added this year we have to add. This not foretold you. Joakim.

49
00:12:27,882 --> 00:12:38,202
This level is completed. This level is also completed now let's remove the front which is too. So let's find out the. Ad doesn't up to the adjutant up to his.

50
00:12:38,742 --> 00:12:51,192
I just signed up to his one. One is already visited since on it's already visited. We cannot clone this we have already quand we have the coolant copy your porn right with the corn copy up on.

51
00:12:51,522 --> 00:13:02,152
What we'll do we'll add the colon copy of one to the adjutant up too right here you can get simply using our previous formula to see our current if this is our in.

52
00:13:02,442 --> 00:13:15,912
We can find out. That gallant. The cloned copy. Of one. From the hashmap. We can find a glum copy up one and we can added to the adjutant of two. So let's adhere.

53
00:13:16,422 --> 00:13:36,232
One. Can tell me. How we can find a corn copy of this. Op this node in. That simple it would just say math dot get. Will get the clone copy. Of in and what we will do will add the corn copy of into the adjutant up to.

54
00:13:36,702 --> 00:13:52,302
How can do that. We can just say here. Math dot. Get. Current. Method get currents that we get. This. We get the access. Of this not to. And will add to the neighbors so your.

55
00:13:52,722 --> 00:14:10,372
Neighbours. And we can just add it right here. Again as simple as that. We'll see this one all right that could. Now let me finish finish this. So he cloned we added this cloned node one right here.

56
00:14:10,422 --> 00:14:26,832
Now let's explore the next adjutant that is three. So three is not cloned so let's clone it. Three. Three asterisk. The ad doesn't have three there is no address and up three here the neighbors up three is empty but the neighbors have three we have your.

57
00:14:27,162 --> 00:14:40,212
Singer gallant we have to add three right here. We learned this not three here. Now we have to add this glendive not to add descent to the adjutant or to the neighbors of this gallant not to so let's add your.

58
00:14:40,542 --> 00:14:55,302
Three three asterisk. Now let's remove. That front from our. Queue. That is for. Sure we are processing this liberal. So ad doesn't have four. Let's move here.

59
00:14:55,722 --> 00:15:05,542
We see the adjutant of forties one. One is already visited on it's already visited so we'll just find a clean copy of one that is desert can find out easily.

60
00:15:06,102 --> 00:15:19,072
And then we'll add the clone copy of one to the adjutant of four. Right here. So let's add glom copy onesta. Know the next adjutant. The next adolescent is three.

61
00:15:19,392 --> 00:15:28,582
Three is the next adjacent. With three is already cloned so let's find a glum copy of three we don't have to coordinate because we have already cloned.

62
00:15:29,232 --> 00:15:42,322
Three is visited means. Three exist in the hashmap also the clone two or three exist. So. Let's get the clone copy of three that is this and let's add it to the neighbors of clone copy.

63
00:15:42,942 --> 00:15:57,532
That neighbors have one copy of this note four so that is. This is the neighbors of this gallant. Note so let's add here three-star. So we are not adding this in our.

64
00:15:57,612 --> 00:16:10,572
Queue because this already visited this is already visited. In the leg slip and we have only nord three. So let's remove front. Removed front. Now let's explore the adjutant up three that is two.

65
00:16:11,082 --> 00:16:26,412
Two is already cloned so let's wonder the cloned copy that is to the star. That is to start so let's add two step to the adjacent to the adjutant. Opulent copy of this nord three let's add here tools do.

66
00:16:27,342 --> 00:16:39,562
So here. The adjutant is too. It is it this is in him he buys his current. We can find out that one copy of two pretty easily by just saying math door to get.

67
00:16:39,672 --> 00:16:53,412
In will get backlund. The glum copy up to. And can add to the neighbors of three we can just say math dot get. Cut current. Then here neighbors. Neighbors and here we can add.

68
00:16:53,742 --> 00:17:11,922
This. Neighbors and your neighbors dot. Add. This. As simple as that. Now let's explore the next descent that is poor. Four is already visited so we have one copy already so let's wanted the chronicle pilot added here so let's add here.

69
00:17:12,252 --> 00:17:28,362
For easter. So we are done. Or queue is empty that means we're done we cloned this graph successfully. And eby if you look at here. And he can relate this.

70
00:17:28,662 --> 00:17:42,462
With this given. This is the list one candidate to three two candidate one three four candidate to one three. Then two connected to two for. This order doesn't matter the notice candidate the adolescent of is not.

71
00:17:43,062 --> 00:17:53,602
Our. Adolescent up is not. Mentioned the relative order the same order right so here one start that isn't a one star is two to add to store and forster.

72
00:17:54,372 --> 00:18:12,622
I just signed up to star. I just signed up to star of this node one and three one and three. So three stir. A descent of four one and three so one and three that isn't addressed went for so same as this graph so we cloned our group have successfully.

73
00:18:14,382 --> 00:18:25,522
I hope you've understood this video explanation. This is the definition of all nor the clutch. It has a value and at least up note. That is called neighbors.

74
00:18:27,972 --> 00:18:44,992
Now let's implement our bfs algorithm. First thing i'm going to check if the given node is now. Will return null this is our basis. The right to blow here i'm going to create a hash map data structure.

75
00:18:45,026 --> 00:18:58,422
Will store. Key bell appear nord sur noord noord. The sky will be origin a lord and the north will be the cloned node. Let's call it math a call to new hashmap.

76
00:19:00,492 --> 00:19:15,342
Now let's. Glow on this note and let's call the cloned node is new node so node new node you call to new node. No dot vel. Now let's insert our original nord.

77
00:19:15,822 --> 00:19:33,082
Nord and this new not to this hashmap. So math dot put. Our origin a lord key and our cloned node. New node. Something like this. One first we have one this is your origin a lot.

78
00:19:33,162 --> 00:19:50,152
We. Have the decent ski under. Developed his one stir one doormen. One stir mean our cloned node. You will have the neighbors of this cloned node. And we have the neighbors up on that one showing you're here.

79
00:19:51,462 --> 00:20:05,242
Now let's get acute at a structure. We know that in bfs algorithm we have to use a at destruction in the queue all store nerd. So queue node let's call it q a call to new linked list new linguist.

80
00:20:06,282 --> 00:20:19,372
Now in the queue we're going to insert or origin a lord the notary just cloned so let's add to queue dot add our origin a lord that is one. So let out here or origin the lord node.

81
00:20:19,602 --> 00:20:37,614
Now let's run our beavis algorithm. While the. Queue is not empty while queue. Dot is empty all queue is not empty. We'll remove the front sook current note currently call to queue dot.

82
00:20:37,974 --> 00:20:53,374
Pull. So we find that our current node. We find that our current node the node we have other note record. I hear what you're going to do or going to find out.

83
00:20:53,454 --> 00:21:05,184
Now i'm going to find out the neighbors of current. And i'm going to add. By cloning the neighbors up current to the cloned. Neighbors of koran that meant.

84
00:21:05,604 --> 00:21:21,414
That Minnesota neighbors of this cloned node. First let's find out. The neighbors of cloned node. Of this note so. List. List node we know the neighbors.

85
00:21:21,774 --> 00:21:39,294
Is a list of nodes let's call it new neighbors. New knee. Bars. He calls to. Maf dot get mattered get. Current. So at this point we get the access to this by midas.

86
00:21:39,684 --> 00:21:55,794
Current beget access of this node now we have access to the neighbors of this cloned not so here a per se ne. Ne burse. D h neighbors. And here we have this neighbors this is.

87
00:21:56,244 --> 00:22:19,624
Ni burst. So we have. Find out. The neighbors up gallant north of current. Now let's find out the adjutant upgrade for. Nord let's call it in. So we find we have to find out at dissent or neighbors of current we can find out that simply.

88
00:22:20,334 --> 00:22:35,904
By seeing current dot. Ne boards. Will get will find that the neighbors of one. We have a graph here let's er let's be right on the graph here. This is our given graph.

89
00:22:36,324 --> 00:22:50,254
So the neighbors of current is two and four we can find out simply. Now i'm going to check. If. The neighbors if the neighbors is not cloned. We have to clone that.

90
00:22:50,634 --> 00:23:05,544
So let's check that if math dot contains key. If the neighbors of in is not cloned. If the neighbors of in. We have to conte the neighbors right if the cloned the neighbors.

91
00:23:05,874 --> 00:23:28,534
In this case to foster the corn it will clone it. Before adding the corner neighbors the cloned neighbors of our. In. To this. To this neighbors we have declared that neighbor first to let go on that so let's call it temp so nord be called to new and nord new not in dot vel.

92
00:23:29,214 --> 00:23:45,694
Now we have to put it in our hashmap. Right here. So too. And because we get to star. Asterisk means corn. So we have to edit this beer. Math dot put.

93
00:23:46,104 --> 00:24:10,794
Our. Our nord here. In right we have to clone in sir n and the client is temp. So we have. Put it. In this list. Now we see. If the. If the neighbors of current is not cloned we have to first clone it then we have to add it if that is already cloned we don't have the quantity of to find out that first.

94
00:24:11,214 --> 00:24:26,014
So let's find out the cloned. Of this neighbor can find it from hashmap. So first let's find out that much math dot get. Map to get in so using this statement will find that the cloned.

95
00:24:26,784 --> 00:24:43,354
Flaunt of in. And if at the cloned off in to these neighbors that we have here new neighbors so let's add that so new. Knee boards dot ad. This new cloned note.

96
00:24:44,004 --> 00:25:01,104
Okay. So here at this first step we clone this then we added here toaster. And this bfs algorithm. Will run oil or queue is not empty. When he cloned that also to add that no tour key right so cute add.

97
00:25:01,734 --> 00:25:17,104
Our. Our origin lord record he reclined in so let's add in our q n. This is how this algorithm works. I hope you've understood. Let's move to the second step here of this algorithm.

98
00:25:17,694 --> 00:25:29,824
The next. The next adjutant is four four is not clawed. So first it'll clone here for for asterisk. Then it'll add four right here forster and so on and so forth.

99
00:25:30,144 --> 00:25:43,914
It is will be added to the queue as well. I hope you have understood this video explanation. We are given. Access to this note. We learned this note. And we cloned.

100
00:25:44,244 --> 00:25:55,594
The entire graph right so we have to return. That note that is our new note we just cloned here. We've just written. Years since you cloned this will written.

101
00:25:56,154 --> 00:26:09,784
This. Does not recline first written this one stir. Since we're given the node one for this examples. So here we'll just return. New. Return new note.

102
00:26:10,284 --> 00:26:25,774
I'm sorry guys we have here little typo. We should have here neighbors n e i g s b o r s new neighbors i'm sorry guys but this typo. Now let's run this good.

103
00:26:25,824 --> 00:26:50,314
I think it'll work. Accepted let submitted. Accepted we absorb this volume successfully. I hope he understood this video explanation. In the next video we will see how to clone a graph using dfs algorithm thanks for watching this video I'll see you in the next video.


@@@
1
00:00:00,480 --> 00:00:12,780
Welcome back to this video in this video order to solve this coding interview question clune a graph. In the previous video we solved this problem. Using bfs algorithm.

2
00:00:13,140 --> 00:00:28,360
In this video or going to solve this problem using dfs algorithm. We're given undirected graph. We are given an undirected graph the graph is represented using adjacency list.

3
00:00:28,470 --> 00:00:47,620
One is connected to two and four. Two is connected to one end three. Three is connected to two and four four is connected to one end a tree. We have to clone this graph epic lowndes graph we get one asterisk.

4
00:00:48,090 --> 00:01:09,450
Two asterisk. Three. Asterisk for asterisk. So we have to join them. Epic on this graph will get this graph. We have to recreate. Fresh nord we have to create that note we can reference to the origin or node we have to.

5
00:01:09,900 --> 00:01:24,040
Return this graph. Now let's see how to clone a graph using dfs algorithm. Now let's see how to solve this column using dfs algorithm. We're going to use.

6
00:01:24,180 --> 00:01:43,420
Hashmap data structure to keep track the visited node and we will map our cloned nod with orginal nook. We're given this. We given this note one. We see that this node does not exist in our hashmap.

7
00:01:44,040 --> 00:01:54,600
So what we will do will clone this node initially. When you call our dfs function. Initially for the first call. The nor does not exist in our hashmap.

8
00:01:54,990 --> 00:02:12,870
Or hashmap mt. Now let's Glen this naughty pic on we get one. Asterisk. Let's assume we call our dfs function with nord and new node. We call our Davis function with node and new node.

9
00:02:13,470 --> 00:02:28,540
This is our new node and this is our given node new node is the cloned node. One does not exist in the hashmap so org and insert as key one. And as velo i'm going to insert the cloned.

10
00:02:28,680 --> 00:02:49,480
Of this not one that is one asterisk. The neighbors of one. Two and four the neighbors of one asterisk nothing. We have empty. I'm not showing here the neighbors upper one i'm just chewing the neighbors of the clone not.

11
00:02:50,820 --> 00:03:02,258
Now what am to do we have to explore the adjustment or neighbors of one. And we have the corner neighbors have one and we have to add that to this nero list.

12
00:03:03,385 --> 00:03:22,500
Is node. In our graph. He is not in our grab contains two. Properties one is. A value integer value and. A list of node a list of node and this is called neighbours this is called.

13
00:03:23,040 --> 00:03:37,330
Ni bourse. So the note contains two properties vel and neighbors neighbor is a list of note and velo is integer. Will see this one will write our code.

14
00:03:37,440 --> 00:03:50,950
Now we have inserted this node one and is. Not disclosed not one in our hashmap. Now we have to explore the adjustment of what. The ad descent of one is to.

15
00:03:51,120 --> 00:04:07,920
The ad descent of one is two. We can see this is our current adjustment. We say that. Too does not exist in our hashmap. Do does not exist. So what are going to do we're going to call this nord.

16
00:04:08,400 --> 00:04:26,700
Let's glue on it epic lawn we get to asterisk by asterisk am indicating the cloned not. Yet we have two asterix this is grown good. And what are going to do we're going to add these asterisk to the neighbors of our cloned node that is new node.

17
00:04:27,090 --> 00:04:40,060
That is this node. So we'll add this glow note to the adjutant of this note. In dysfunctional we're finding out here the current. The current is too guarantees our current adjutant.

18
00:04:40,200 --> 00:04:50,500
And then we're finding out. This. Discontinued will go under nord let's call it temp and here we can just clone this not. With the value of current node.

19
00:04:50,790 --> 00:05:08,110
So we can see this in your current individual temp. So we're just adding we're just adding these. Disclosure note. To the. Neighbors of our new node with the access of this new node will see that Quinn will write out our code.

20
00:05:08,940 --> 00:05:25,900
So let's add this to asterisk to the neighbors of. This note. Now let's call this function when we call this function. What we'll do we'll add this. Will add this beer in our hashmap set to then to asterisk.

21
00:05:26,520 --> 00:05:37,890
You will have the neighbors of the two asterisks and is your original not. Now let's explore the ad just sent up to the adjutant up to his one that is already visited that exist in our.

22
00:05:38,280 --> 00:05:55,200
Hashmap. So let's find out the glory we already cloned an existing one hashmap that means we have cloned copy of one in our hashmap. We cannot. Clone this one again here we cannot clone here because this one exist we have to just.

23
00:05:55,530 --> 00:06:10,950
Copy the reference of this and to add the reference of this node. A one. Is it our new node we cannot recreate here the node. We have to copy da we have to coffee here the reference of this node one asterisk so let's copy that we can.

24
00:06:11,340 --> 00:06:22,210
Simply copied it with this current the current here is one. We can find out this not using this current easily and will add this one asterisk arrived here.

25
00:06:22,650 --> 00:06:35,800
So here we are not creating the copy of this one again we have already in our hashmap so we're just. Returning that and we're just adding here. We cannot call here because one already exist.

26
00:06:36,240 --> 00:06:53,380
When is already visited now let's explore the next adolescent. Of two that is three. We see that three does not exist in our hashmap so what are we going to do Oregon to create a clone copy of three so three asterisk.

27
00:06:53,460 --> 00:07:08,560
Let's add this clone copy to the adjutant up to two Edison of this. Nuno regency. So let's add here three asterisk. Now let's explore. The ad descent.

28
00:07:08,850 --> 00:07:25,630
Of three or neighbors of three neighbors were adolescent aren't the same thing. Here since you call dysfunction here since you call dysfunction we have to add despair despair does not exist when you call a function that means the pier doesn't exist just so let's add despair.

29
00:07:25,920 --> 00:07:39,940
Three let's map it. Three asterisk and he will have neighbors. Let's find out. The neighbors of this note three that is to to already exist so let's copy the reference that is to asterisk.

30
00:07:40,050 --> 00:07:56,680
It's ad here next. Neighbors is for. Next neighbor is four of three right. One assuring you hear the. Adjacent or neighbors of. The key or just renew the we're just showing you hear that i just sent a poor cloned note.

31
00:07:57,390 --> 00:08:29,310
Now we have the adjutant for we see. Four does not exist the four a descent does not exist to let clone it unlit added to this. And to the neighbors of three asterisk so let's add here for asterisk and let's call our function when you call our function will add that beer in a war when we'll call the function it means dead da nor does not exist that is not visited will caller function only if the node is not visited that means either nor does not exist in our hashmap so let's.

32
00:08:29,730 --> 00:08:42,360
Add here this clone we have this clone here we just added here. Now let's exploit the adjutant of four. That is one one is already visited that exists let's copy the reference you cannot recreate your one.

33
00:08:42,960 --> 00:08:54,400
So let's copy this reference when easter is we get her an asterisk. The next adjutant is three that is also visited. So let's copy the different that is three.

34
00:08:54,480 --> 00:09:05,580
As the three asterisk we just copied here. We can access that we discourage doesn't hear the car industry. A current issue with the current we can find out this good.

35
00:09:05,970 --> 00:09:22,260
Since three existing hash and we just read in the copy here these three and these three are the same note this two are not different note this poor. At this one asterisk and this one yesterday dishonest risk are the same nor they're not different they're the same not.

36
00:09:22,680 --> 00:09:40,140
Having same address. So we. Learned we learned all the adjustment of four. No let's back here. We see we cloned all that isn't up to as will. We clone of the old adjutant of three now let's grunt all the adjacent up one.

37
00:09:40,530 --> 00:10:03,220
We cloned only one add dissent we see that. Now let's move to the next that is four four is already exist four is already exist we. Are so what it will do will return will return the cloned afford that is mapping that we're mapping using this hashmap that is this for asterisk let just a regional let's add here so for asterisk.

38
00:10:04,020 --> 00:10:22,056
Now we see we're done. We cloned. Our graph successfully and. Tried to relate the. At this address addresses list with this. We see Sam ping right. So he get here one asterisk it is connected to two star four star.

39
00:10:22,136 --> 00:10:39,036
Then to asterisk it is connected to. One asterisk three asterisk. Then three asterisk is connected to. To ask the risk. For asterisk and then for asterisk is connected to one asterisk and three yesterday risk.

40
00:10:39,746 --> 00:10:57,246
We see that here we gleaned this graph. We cloned this adjacency the list successfully. We're not referencing to the original not recreating new nod and is it our cloned graph this is how we can gallant our graph using dfs algorithm.

41
00:10:57,746 --> 00:11:12,276
I hope you've understood the his video explanation. Now let's see. The implementation of this d f s algorithm. We are given this node this node has these two.

42
00:11:12,416 --> 00:11:24,246
Properties velo and neighbors vel and one neighbor's neighbor is. The least up node and the value is integer value. Now let's implement our dfs algorithm.

43
00:11:24,356 --> 00:11:37,166
First i'm going to check our baskets if the node is a call to now now we'll simply return null. Now here let's create our hash map the destructor will store nord.

44
00:11:37,556 --> 00:11:58,825
As key also nord as velo let's call it math mapi called to new hash map. Now here let's go on our nord let's go on our node. So. Nord. New node. Node new node he calls to.

45
00:11:59,246 --> 00:12:22,566
New. Node. New node and the veloso no dot vel. So he here we cloned this and not. Know what we're going to do or going to call our dfs function with this note the origin or lord then clone nord this era clone note and then our math to keep the visited.

46
00:12:23,246 --> 00:12:39,306
Visited nod and to map our a new node or cloned not read the original note. This differs function will clone our graph and will return. That. Copy of our first node so let's return here just new node.

47
00:12:39,356 --> 00:12:53,876
Now let's implement this function Davis are right here. Public return type is void d f is. Noord noord here noord new nord this is cloned node. Then our hashmap hash map.

48
00:12:54,206 --> 00:13:09,326
Nord as key note as velo. Let's call it mef. When you call this function. Will call these functions it means that the nord does not exist in our hashmap so let's put in our hashmap.

49
00:13:09,656 --> 00:13:25,346
This arena lord as and the. New note or cloned node as velo. So let's insert your math daughter bought our. Our origin and lord then clone note. Now let's find out that.

50
00:13:25,706 --> 00:13:49,146
The neighbours of our origin a load. Of this note so nord. Current nord dot. Ne bourse. Neighbors. Now he probably saw this current naughty we saw this current node already exist in our hashmap it means that we have cloned.

51
00:13:49,196 --> 00:14:02,396
Already discarded not so we'll return the cloned node to let check here. If. Math dot contains key ye. It is current not content in our hashmap we will.

52
00:14:02,696 --> 00:14:16,346
Return the cloned note it means this current node is already cloned so let's return that map to get current we'll find out our. Cloned not. Know let's add the cloned node.

53
00:14:16,856 --> 00:14:29,376
Disk. Cloned note for our this and neighbors. Let's freedom the gallant not unlit add that to the neighbors of our current node so let's add that. So.

54
00:14:29,966 --> 00:14:49,436
Here. New nord dot ne bourse. Neighbors dot add. Our gloom note. Joakim. If our lord is not glow nerd so first let's clone our node so nord team he called to.

55
00:14:49,798 --> 00:15:04,556
New node. New node here. Let's provide a valid for a current node so current dot vel so this is a clone node of this current node. Now what. Now what i'm going to do.

56
00:15:05,096 --> 00:15:22,946
Now i am going to add this cloned note. To the to the. Just sent. Or to the neighbors of this new note since we have cloned this node so let's add that new nord dot neighbours dot l add.

57
00:15:23,426 --> 00:15:40,446
This tampa note. Now let's call our defense function it means that this current node does not exist anywhere hash marsalis correct note and the clone of this current a nod is temp so let's provide your temp and our map.

58
00:15:41,366 --> 00:15:54,216
This is our core algorithm i hope you've understood this video explanation. I'm sorry guys here we should have neighbours a little typo. So we have neighbors.

59
00:15:54,386 --> 00:16:11,856
Your we have a little typo. And here. The sooner our core algorithm i hope you've understood this video explanation. Now let's run this code. Accepted now let's submit it.

60
00:16:15,116 --> 00:16:28,206
Accepted be absolved this problem successfully. I hope you've understood this very explanation if you have any questions post your question on the cuny forum thanks for watching this video I'll see you in the next video.


@@@
1
00:00:00,480 --> 00:00:14,880
Will come back to this video in this video or go to soul discouraging interview question bipartite graph. What is a bipartite graph. Let's assume. We are given this gruff.

2
00:00:15,270 --> 00:00:33,160
Decision and directed graph. If we can color. The nodes of this graph we can colors all the nodes of this graph with exactly two colors says that. No two adjacent north recipe https cym color.

3
00:00:33,270 --> 00:00:47,700
Let's assume we have to color. One and minus one. Let's colored this graph. Here we have zero you have no colorless colored with one. This not here in this note we have nor color.

4
00:00:48,030 --> 00:01:01,210
Candy colored with one no because the adjutant node has the color. One so let's color it with minus one. Nor can ecologists not. One yes we can color does not with one because.

5
00:01:01,470 --> 00:01:12,420
The i just sent node this not has the color blindness and is not has no color. Now let's move to this not going to color this not with one note because the ad dissent nor has the color one.

6
00:01:12,780 --> 00:01:23,160
Can color does not we discolored minus one. Years again color does not with minus one because the adjutant node has different color so it lets colored with a minus one.

7
00:01:23,550 --> 00:01:37,920
We see that we colored this graph so against it this is a bipartite graph now let's try to color this graph. Be colored this Norwich one. Can color this note with one no we're going to color this with minus one.

8
00:01:38,520 --> 00:01:50,130
Now can he can this not with one note the adjutant note has the color one can call it does not with minus or not i just ignored has the color. Minus one so this is not a bipartite graph.

9
00:01:50,580 --> 00:02:02,290
So if we are given this graph we have to return true if you're given this graph we have to return false. I hope you have understood what is bipartite graph.

10
00:02:02,730 --> 00:02:18,910
In this volume we might have disconnected grab something like this this is one graph this is disconnected. This portion is disconnected from this portion so this is our disconnected graph in this problem we make even disconnected graph.

11
00:02:20,130 --> 00:02:37,660
We have to check that whether the graph is. Bipartite or not. Let's assume we have two color one and minus one let's try to color. You'd be colored this Norwich one we're going to color this noted minus one here we're going to tolerate one we can go to this one minus one now let's try to call at this portion.

12
00:02:38,250 --> 00:02:50,620
Let's collide with one let's call it with minus one. And Kenny colored this not with Kenny color this nord with minus we're not going to color this with one no because the adolescent.

13
00:02:50,730 --> 00:03:07,720
Nerd has the color one also minus one so he cannot color does not so for this graph we have to return false. If we don't have this is right here then again color does not with minus one so for this graph we can return true.

14
00:03:07,890 --> 00:03:21,220
Now let's see how to solve this problem. In this video organ to solve this problem. Using bfs algorithm. In the next video we'll talk about how to solve install him using dfs algorithm.

15
00:03:22,080 --> 00:03:35,620
Let's assume we're given these disconnected graph this graph is represented using this address in seat list. In this graph we have to portion this portion and this portion.

16
00:03:36,120 --> 00:03:51,360
This portion is disconnected from this portion. In order to keep truck. The visited node as oil as to. Color the note we're going to use. An erie let's use an array.

17
00:03:51,750 --> 00:04:10,050
Right here. Op size six because we have in our grab total. Six not from zero to five. So let's create here an array of site. Six. This is our array. Of size six the default fellow here.

18
00:04:10,440 --> 00:04:26,310
Is. Zoo zero. We will color our noord will color our node. Using two-color one and minus one. If we have here minus one it means this note two is colored with minus one.

19
00:04:26,880 --> 00:04:39,460
If we have here one it means this node is colored with one. Now let's see how to sold the stolen using our bfs algorithm. Let's create greeted us doctor.

20
00:04:39,870 --> 00:04:52,750
Let's assume visit our cue. We will start we will start from. Nord zero. Will start from nor do to change our our central graph is disconnected oops start from zero.

21
00:04:53,280 --> 00:05:05,620
We will call it a reverse function we do not and we'll call it one. Then two three four five. Since we have five node. This. The given grip can be disconnected.

22
00:05:05,730 --> 00:05:22,320
We can have grub something like this zero one two three. Four five. Holder note or disconnected in this graph we have six portion. Since. We may have the grub is disconnected so we will.

23
00:05:22,920 --> 00:05:39,190
We'll call herbivorous function. For. All the notes. Zero one two. Three. Four five for the or sketchup the corner of his function five times. Actually it will call up if his functions.

24
00:05:39,450 --> 00:05:50,910
With the number of. Connected portion we have here we have two portions so you have to color or beavis. Of beavis a function. Two times. We'll see that when all right our code.

25
00:05:51,330 --> 00:06:03,462
Will start from this node zero. Will insert this note on our queue when all insert the new not in our queue initially and will color this node zero with color one.

26
00:06:03,810 --> 00:06:19,180
So here we see that we colored this node zero with color one. Now let's start our. Bfs algorithm first organ and remove the front from q. So we get the nod zero.

27
00:06:19,290 --> 00:06:33,280
We colored this node with one. We see that in our. Erie. Now let's explore the descent of zero the descent of series on a and three first let's peek here one.

28
00:06:33,870 --> 00:06:47,170
Now here we see this is adjutant of zero century colored this nord with one. So we can color does not with the opposite color we have to color skin color does not with minus one.

29
00:06:47,550 --> 00:06:59,130
So what are you going to do we're going to update. The value at index one with our color that is minus one. To this node is colored with minus one the node below is minus one.

30
00:06:59,580 --> 00:07:13,390
So this notice visited we can see. If we have. Any more airy. Valid uniform a c certain order that means the nord is not visited. Also the north is not colored.

31
00:07:14,550 --> 00:07:32,310
And how we can color does not. So this is where the signal recurrent not we just removed from our accused so he recalled this is our current node then this is our ad descent ready digital ad descent we can apply a simple formula it was said this area is color than Oregon say.

32
00:07:32,820 --> 00:07:46,980
We can see here color or. Color then add just send e d j color eg equal to if the nod is not colored if we have the value zero then we'll apply this formula color eg he called to.

33
00:07:47,310 --> 00:08:08,700
Color. Color current. Color. Current. We'll just. We'll just alternate the color so the color here is that the color here is one so if we just added minus one then all colored does not with the opposite color or we can simply say Oregon multiply this with minus one.

34
00:08:09,480 --> 00:08:28,660
So we will get the opposite color or oil see this one will write the code. Now we see that. This is your ad descent so let's color it minus one since the color of this note is one so we colored this with minus one scenery colored will add is not in our queue.

35
00:08:29,010 --> 00:08:39,580
Now let's explore the next Edison that is three. So next adjutant three digital ad descent we see that. Week. This is the adjutant of this not current.

36
00:08:39,630 --> 00:08:58,350
The current nor is colored with once we can cuddle this not with minus one. This note is not colored since this note is not colored we have your value zero right that means this note is not colored so old colored is not with the opposite color of our current node so let's color does not with minus one.

37
00:08:58,830 --> 00:09:12,060
The node tree. And let's add the tour queue. So we colored this not three with minus one. Now let's remove the phone from view that is one. This node will Kim.

38
00:09:12,750 --> 00:09:27,250
So let's expert i just sent off one. So we have colored this. With minus one and the snood with minus one the adolescent abdulla. No let's process this and nor the adjutant of this note one the adjutant is zero.

39
00:09:27,390 --> 00:09:38,970
We should adjutant of one is. Zero. Which is zero is already visited. If the zero if the notice is already visited will check the color of the nord zero.

40
00:09:39,420 --> 00:09:53,100
Ip we saw the color of the snow desert is similar to this not. Now this is our current look at this each our current. Episode the color of the nor dessert is equal to the color of this note the.

41
00:09:53,730 --> 00:10:06,280
District Addison up one episode. We colored is not with the same color will immediately return false will immediately return fault but we see the color of the snow desert is one.

42
00:10:07,232 --> 00:10:24,632
Will do nothing we'll just skip. We'll just skip. Let's explore the next adjutant that is. To. Select choosier to dust who is visited no the no two is not visited so we can color this not with the opposite color of this current node.

43
00:10:25,112 --> 00:10:40,742
Since bruised the adjutant of this. Op is not one. Solid color this with one. Typically does not want him to object here in our. In our area. Here we have the valley one so this knot is visited and colored with one.

44
00:10:41,102 --> 00:10:53,592
Let's add this to in our. Queue. Since we're solving this problem level by level first resolve this level. Then we sobbed. Then we saw or something this level now.

45
00:10:54,812 --> 00:11:09,512
No. Let's ruin the fun for more q that is three. Lets expert Addison up three. Zero and two the ad descent of three zero and two. So zero this note is already colored lucic the color the color is one.

46
00:11:09,902 --> 00:11:22,592
So no problem. It is not he was colored with the same color as this note. Needed to return written fault immediately. Because it is not as coloured with the same color of this note.

47
00:11:23,012 --> 00:11:33,422
That means the ad doesn't know the colors with the same color so we have to return immediately false. See this notice colored with one. With a different color so no problem.

48
00:11:33,752 --> 00:11:45,792
Now let's explore the next adjutant of three. The next adjutant of three is to. Know a chick. Does this too is visited yes to his visited lets the colored carries on so no problem.

49
00:11:46,622 --> 00:11:57,392
You have to do nothing here. Now let's know the front por que. This is our front. Room have to visit our front this too let's explore the Edison opto.

50
00:11:57,842 --> 00:12:11,682
Let's explore the adjutant off to. Weighted ad isn't up to his one. Does one is visited yes one is visited legit the colored color is minus one so no problem the color minus one is opposite.

51
00:12:11,762 --> 00:12:25,002
Of one so no problem. Now let's check the next i just entered that is. Three does trees have visited years visited la took the color up through that is minus one the opposite of this note too so no problem.

52
00:12:25,682 --> 00:12:40,332
We are done. We are done. So this not as visited let's market and we collided with a one. So we see that this portion of paragraph is completed. This portion is now completed.

53
00:12:41,402 --> 00:12:49,832
Since it's disconnected graph we don't have we don't have access to this. So we have to enter it one by one so first a call these are different function for digital.

54
00:12:50,402 --> 00:13:02,102
Then optical or different function for one we see one is already visited so let's give then to boot already visited. The value is not zero then three we see trees also visited.

55
00:13:02,462 --> 00:13:19,332
Let's call it for. When he called with for we see four is not visited every corner from reverse function with four. Lets colored this with one. Since this is our starting or starting of our bfs algorithm singer called or befits algorithm for for.

56
00:13:19,682 --> 00:13:31,542
Let's color it with one so let's color it with want and let ad for tour que. Now let's explore the descent of four that is five at dissent of four is five.

57
00:13:32,192 --> 00:13:44,562
Now letting the color of five. Five is not visited so let's call it the opposite color that is minus one let's collaborate with minus one. We colored this note five with opposite color.

58
00:13:44,852 --> 00:14:00,402
Let's add five to you we have to remove this. To start our algorithm right. In the beginning of our algorithm we have removed the front we get four and we explored the adjutant five so a colored forward on and pi with minus one.

59
00:14:01,412 --> 00:14:11,852
Now let him have the front this is five let's say the adjutant at the center five is four. Lipstick does forties visited years visited let it the colored color is one.

60
00:14:12,242 --> 00:14:22,712
We have opposite color no problem. And our queue is empty. A queue is empty now we are done now let's call our function for next nord so we called for judo.

61
00:14:23,192 --> 00:14:33,362
Then four but one has visited we skipped tourists visited skipped threes visited skipped. Then for recalled for. We called for for. Now let's call for five.

62
00:14:33,692 --> 00:14:45,942
Which if i was visited so we origin. Week colored our graph successfully. Well coloring this graph is that we cannot color the graph. That will return false immediately.

63
00:14:46,082 --> 00:14:57,582
Since we have successfully colored this graph will return true so this is a bar portrait graph. For better understanding let's take another example. Let's assume we're given this graph.

64
00:14:57,722 --> 00:15:09,662
Let's see how to color this graph we have to color one and minus one. We'll start from this nor gillette ad is no tour queue. And let's color. The nord zero with color one.

65
00:15:09,992 --> 00:15:21,782
So let's color it with one. You can color here with minus one or you can use any combination of these two colors you can use one two or three four. As your wish it's different on you.

66
00:15:22,142 --> 00:15:32,852
How will implemented that algorithm but i am using here one and minus one to eat easy to manipulate. For me at least. So we colored this no zero with one.

67
00:15:33,542 --> 00:15:42,762
So we color does not do that with one knowledgeable front from q we get the nord zero let's explore the ad descent. Is a scullery doodle at dissent is one.

68
00:15:42,812 --> 00:15:53,582
One is not visited so let's color with the opposite color of this so it would get minus one. Let's add one door key huh. The next explored let expert the next.

69
00:15:53,942 --> 00:16:07,752
I just ended that too. Now let's color. This too because history is not coloured so we can so we will color this to it minus one. Let's editor q. Let's color it with minus one.

70
00:16:07,862 --> 00:16:19,292
Now letting them have front wishes one. Let's explore the Edison of one that is zero. Zero is already coloured jury's already colored so this guy is colored with minus one.

71
00:16:19,742 --> 00:16:40,862
This. Dude this guy is also colored with minus one. Look we see here. Invalid coloring no problem let me just continue here. So we get your zero. We see the note zero is colored with one that is the opposite color of this and that and this notice visited so we cannot add this to the queue so.

72
00:16:41,282 --> 00:16:56,102
No problem. Now let's explore the next i doesn't do. Next i just sent to. The streets of visited gears let's take the color color. Is minus one the color of this edge isn't too is minus one that is same as this.

73
00:16:56,522 --> 00:17:09,342
This is visited and it has the same color. This node has two this is the i just sent off one right to his address and upon the stoner has the same color so will immediately return false.

74
00:17:10,292 --> 00:17:20,472
This is how we can solve this problem i hope you've understood this video explanation no let's implement this algorithm. Now let's implement this algorithm.

75
00:17:20,642 --> 00:17:31,662
Let's find the number of note we have in the graph so individuals to. Graph dot length we have v number of notes in the given graph. Now let's go our colors.

76
00:17:32,132 --> 00:17:50,022
Erie to keep track the visited node. So v. We have nord. From. Zero to the minus one. Will color our nord with one or minus one. The default value is zero initially all the notes are unvisited.

77
00:17:50,282 --> 00:18:04,742
Will color note and will store the color of a specific node at that specific location. Now let's run aloof for each node he calls to jiro. World notice less than v.

78
00:18:05,132 --> 00:18:20,142
We have v number of nodes from zero to be minus one ignores from jewelry minus one hundred. Or less than v node. Plus blech. No internal organs chick iPad our current node is unvisited.

79
00:18:20,582 --> 00:18:32,802
Since our graph. A can be disconnected we might have money portion up our graph. So apt to call our. Own we have to call a different function for east portia that's what we're running is aloof.

80
00:18:33,032 --> 00:18:50,532
Now let's check if the nord is not visited so ape colors nord ip colors nor is it called digital that means the note is not visited. Or linen color or beavis function so let's call here our beef is spunk should be if is let's provide our graph then our colors.

81
00:18:50,822 --> 00:19:12,252
And our current node note. If this function return false. If this function return false will immediately return false will immediately return false. Even given it is going to get gruff and if we cannot collect any portion of the disconnected graph if the return false immediately.

82
00:19:12,782 --> 00:19:27,522
If. This function already a student true this instrument will nobody will load it. Through so we will hear return true that means our graph is a valid bipartite graph now let's implement this b of his algorithm.

83
00:19:28,142 --> 00:19:45,732
Public return type is bullion. The function m b f s. First let's provide our graph. Then our colors. Our color sorry so colors then our note. Let's call our nord.

84
00:19:46,022 --> 00:19:57,822
Elliptical here in note. You can use anonym. Now first thing we're going to do Oregon to create our cuda structure. So in the key all store in teacher q he called to new.

85
00:19:58,082 --> 00:20:12,392
Linked list. Know what we're going to do organ to add our current nor to the queue so let's add that queue dot add. A nord current node. Winner adding the notable colored that node right.

86
00:20:12,932 --> 00:20:26,438
So let's color the nod. Colors nord he called to one we colored initially with one each. Colored the initial know that with minus one that's okay no problem but i'm going to use year one.

87
00:20:26,608 --> 00:20:42,008
As the. As the initial color. Now let's run our lwf while our queue is not empty this is our street bfs algorithm. Now inside here i'm going to remove the front let's call it our current.

88
00:20:42,568 --> 00:20:56,198
So let's call it our current so current a call to cute dot pull. Now let's explore the adjustment of this current so for and a d j ad doesn't up our current so.

89
00:20:57,028 --> 00:21:10,028
So graph current. You're worried reading the ad doesn't have his current. Now let's check if the adjutant is not visited if the ad adolescent is not visited will colored the descent with the alternate color of.

90
00:21:10,288 --> 00:21:21,728
This current. So let's shake that ip colors e d g e which he called digital that means the nord e is not coloured yet so let's color the north with the opposite color up current.

91
00:21:21,778 --> 00:21:39,148
So. Colors e d j e called two colors of current. When he colored our note. When a color our not we have to. Add that not tour q if the colored opposite notes we have to get a multiplayer with minus one.

92
00:21:39,928 --> 00:21:52,808
Our color is one and minus one so we can find out the opposite color by multiply with minus one. Let's add here. Or edges into the qc yep colored this note so we added here.

93
00:21:53,278 --> 00:22:04,618
Eve. Else Eve Eve our agent is colored if the adjutant is colored i just end up current is colored with the same color of current. Then already up to do.

94
00:22:05,068 --> 00:22:17,188
If Addison is already colored with the same color up current in that case if written false because that is not a valid bipartite graph. So let's check here if colors of current.

95
00:22:17,518 --> 00:22:29,528
Is a call to. Colors of edges and. If the Addison is already colored and either a descent has the same color as the current nord. We have to read and immediately falls.

96
00:22:29,758 --> 00:22:47,018
Immediately after return false. This is your core algorithms. If. We have valid coloring. This eartips statement will never. It true. So in that case at the end earner done with our algorithm will return here simply.

97
00:22:47,308 --> 00:23:04,508
Similar to natural. If this function returns true. If dysfunction return two. This statement will never wanted it. True. When we're done with autograph it will return true if that is a valid bipartite graph i hope you have understood this video explanation.

98
00:23:05,608 --> 00:23:16,658
Let's emulate the time and space complexity the time complexity of this algorithm is off v plus he. Be the number of vertices and is the number of ages.

99
00:23:17,848 --> 00:23:28,438
And the space complexity is off v the number of vertices for discolored area and also for this q. So it'll text for the orcas to be that is equivalent to v.

100
00:23:29,038 --> 00:23:50,828
I hope you've understood the sweet explanation now let's run this code. If something goes wrong we'll fix. Let's run it. Accepted. Let submitted. Except that we have solved this problem successfully.

101
00:23:51,208 --> 00:23:59,498
I hope you've understood this great explanation. Still if you have any question guys post your question on the cuny forum thanks for watching this video.


@@@
1
00:00:00,240 --> 00:00:11,880
Welcome back to this video in this video or going to solve this coding interview question bipartite graph. In the previous video we solved this problem using b f s algorithm.

2
00:00:12,210 --> 00:00:26,590
In this video or going to solve this problem using dfs algorithm. So what is bipartite graph let's assume we're given this and directed graph. Apricot colored this graph with two color one and minus one.

3
00:00:26,670 --> 00:00:40,950
With this two color. Weed out. Without coloring the ad descend nord with cm color. Epic color this Norwich one we can call this number minus one we're going to color this Norwich one we can call this nordic minus one.

4
00:00:41,520 --> 00:01:10,350
So it can color this graph or distro color so this is a. Bipartite graph. If we're given this gruff Kenny color this graph with this two color without coloring the adjacent node with the same color lit stride epic color this with one we can color this with minus one clinical odis with one no because the ad dissent the color of his eye doesn't notice one can ecologist with minus or no the ad doesn't have this not to two one has the color minus one.

5
00:01:10,710 --> 00:01:26,710
So this is not a bipartite graph. For this given graph we have to return true and for this graph we have to return false. In this problem. We mere given disconnected graph something like this.

6
00:01:27,090 --> 00:01:42,330
Zero candidate to one. When connected to two through connected two. Three and three gonna get to. Zero. In this volume we mere given a disconnected graph something like this this is a graph.

7
00:01:42,660 --> 00:01:54,600
This is one graph. This is disconnected graph. We have to check the graph is a bipartite graph or not first all colored this portion we have three portion let's color it we have to color.

8
00:01:54,960 --> 00:02:06,240
Out we have to color. One and minus one. We can call this graph. So. We see this is. Valid this portion is valid now for dispersion we call this with one.

9
00:02:06,570 --> 00:02:16,720
Yet we can color this with one and we can call August with minus one. So against this is a valid bipartite graph. For this given graph we have to return true.

10
00:02:17,370 --> 00:02:29,280
But if we are given. If we're given. This graph. Then can we say this is a barber trade gruff let jacket this is valid this is Barbara straight and let's this portion.

11
00:02:29,670 --> 00:02:41,710
Year it recovered this with one we can call this with minus one okay but we cannot color this node so this is not a valid bipartite graph we have to origin fault we have to return false for this graph.

12
00:02:42,420 --> 00:02:59,050
No let's see how to solve this problem using dfs algorithm. Let's assume we're given this graph this is a disconnected graph. In this graph we have total Sybil node from zero to six we have totaled seven note.

13
00:02:59,250 --> 00:03:11,890
This graph is represented using these addresses the list. This is the representation of this ad decency list. Now let's see how to solve this problem using dfs algorithm.

14
00:03:12,120 --> 00:03:28,810
To keep track the visited node we're going to use. An airy. Let's create here an array of length. Seven. We have note from zero to six. This is our. Era let's call this airy colors.

15
00:03:29,100 --> 00:03:50,410
This is our array using this array. We will color our graph if we have your minus one it means this node two is colored with minus one if we have here one that means this note four is colored with one and so on by default this era is filled with zero so let's fill this area with zero.

16
00:03:50,700 --> 00:04:03,910
Here we have zero. At this index six it means that the nord six is not visited. Or we can say the note six is not colored if we have the fella zero we can say dot node is not.

17
00:04:04,110 --> 00:04:18,010
Visit did Oregon say the north is not colored. Visage our ad just didn't see list. Now let's see how does oldest volume using dfs algorithm. These group can be disconnected.

18
00:04:18,240 --> 00:04:36,810
We might have the grub something like this zero one. Three. Two four five six. There is no connections. This is a disconnected graph we might have a grab something like this so in order to handle all type of grabs.

19
00:04:37,170 --> 00:04:46,740
It can be connected it can be disconnected. First we'll call our function for. This zero then we'll call for one but one will be visited in this portion.

20
00:04:47,190 --> 00:04:57,220
For this given graph we have to call our diverse function two times because we have here to portion epic quality of his function with any note of this portion that if his function will color.

21
00:04:57,450 --> 00:05:07,450
The entire graph that is the connected portion. Then will try with one we'll see one is visited and two three visited than one start from four and so on and so forth.

22
00:05:07,530 --> 00:05:20,620
Note let's start with nord zero. Now i'm going to call our dfs function our defense function with node zero and collar one. This is our initial function call.

23
00:05:20,850 --> 00:05:30,780
This is not the first parameter is not and the second parameter is used color. Will have more parameter we will see when we'll implement this function.

24
00:05:31,200 --> 00:05:46,200
Just remember it initially we'll call these functions with the nord with ignored and with a color. We will have been gnawed and rehabbing. Color. So we have nord zero and we have the color one.

25
00:05:46,890 --> 00:06:02,160
When he called our function will check does this notice already colored does this note is already coloured nor this nor is not colored so what i'm gonna do i'm going to color this note with one so let's colored the node.

26
00:06:02,580 --> 00:06:15,880
Zero with one it's color it. So we colored this node zero with one. Now let's explore the add descent of zero. We have the ad doesn't observe on end at three.

27
00:06:16,080 --> 00:06:31,300
We know that in dfs. Algorithm we moved in one directions. We will move in the slept. Sub table the twenty first. Our first ad descent is one. Our first ad doesn't absorb is one.

28
00:06:31,770 --> 00:06:42,030
Now what are you going to do this as your adjutant we find out the adjutant of this note one. Not world to call our dfs function we did add descent and with the.

29
00:06:42,510 --> 00:06:57,270
Opposite color of this color we have color one and minus one. It is minus one so we'll call this function will call this function with the opposite color of this color and that is minus one.

30
00:06:57,930 --> 00:07:13,000
To recall dysfunction. So this is your first function call here we'll call our function with nord one and with the opposite color that is minus one. So in this function call what we will do do.

31
00:07:13,470 --> 00:07:27,820
We will check. Does this not one is already visited. No this one is not already visited this is not coloured we have the value in our colors array we see zero so this note is not visited.

32
00:07:27,990 --> 00:07:42,300
That means this note is not colored. If the node is colored. We can say then lord is visited. So so we're going to color this new one since we have no coloring this not once organ going.

33
00:07:42,958 --> 00:08:00,760
Is not one week minus one let's color it. So we colored our node zero with one and recovered our node one with minus one. Now let's explore the add just sent off of one the ad just sent off one is zero.

34
00:08:00,960 --> 00:08:18,120
The ad descent of one is zero. So here we'll call our function again or dfs function. Our dfs function with the nor the zero the ad just sent and we. Will provide the color the opposite color of this.

35
00:08:18,690 --> 00:08:36,640
Because desiring to add doesn't have one. So let's provide the opposite color and that is one. No. We'll call this function. In this function called organ a chick does this notice visited yes this node is visited.

36
00:08:37,110 --> 00:08:49,650
Now if this notice visited let's check the color if the node is colored with one that is ok that is ok fine fine. But if we saw this no desire is colored with.

37
00:08:50,190 --> 00:09:02,470
Wit or the opposite color obvious color. That's a problem. If we have here since this is the ad just end of this one this note is colored with minus one.

38
00:09:02,520 --> 00:09:14,560
So we call this we call this function with the nord zero and color one. Since this notice colored we're going to check the color does this nord nord has the colored one.

39
00:09:14,730 --> 00:09:35,200
Yes it is so it is valid no problem what you will do will return true. We will return true this is ok. Here will return true. Since we return true. That means this Nora has a valid color no problem so let's explore the adjutant of one.

40
00:09:35,670 --> 00:09:50,590
The ad doesn't the next adjacent opponents two. So let choosier two so here we'll call this function will call this function with node two and the colored opposite the color of this lord and that is a wind opposite color.

41
00:09:50,910 --> 00:10:07,510
It's written true. Now the color here is one now let's cig does this not have color. Now let's Jake does this notice already colored know this isn't this note is not colored so he can color this not with one no prob.

42
00:10:08,449 --> 00:10:17,432
We colored with the one. Without an issue now let's move to this node two and let's explore the edges into business too let's explore the add descent.

43
00:10:17,762 --> 00:10:30,522
The ad doesn't have no trees one the first ad sent is one. We colored with one. Now the first ad doesn't have this not too easy one. Does one is visited.

44
00:10:31,082 --> 00:10:44,682
Yes so we call this function. Will call here dysfunction. For this. We'll call this function df es with one and the cult opposite color of this nord and this minus one.

45
00:10:45,212 --> 00:10:58,862
Now here we have the color minus one. This notice already visited or against this note is already coloured so. So let's check the color. Does this nor is colored with minus one.

46
00:10:59,282 --> 00:11:10,802
If this notice color it minus one that is okay but it is not is not colored with minus when that's a problem because here we have the color of one. It is not has colored one.

47
00:11:11,402 --> 00:11:25,032
Then it will create a problem here we have the colored one so the ad doesn't nord we of the same color. That's your problem. Sees this nord one is contains discolored a minus one.

48
00:11:25,202 --> 00:11:39,002
Minus one that is minus one okay so no problem so here we can read into this notice colored with da a perfect color no problem at all. Now let's check the next adjutant up to the next adjutant up to his tree.

49
00:11:39,452 --> 00:11:52,872
So let's call. Three and let Robert hair color the opposite color of this not that is minus one so here we'll call this function dfs we then know the tree and the color miners when the opposite color.

50
00:11:53,342 --> 00:12:04,982
Does this not a skull word no so let's call this not minus one without any issue so let's apply yet minus an added minus one. Now let's explore the adjutant of three.

51
00:12:05,432 --> 00:12:18,782
Let's explore the adjutant of three that doesn't first adjutant is zero. Zero. So here we can color with one sees this color since this note has the color minus one so here let's call this function with colored one and not zero.

52
00:12:19,112 --> 00:12:31,152
So here we'll call this function with d z zero nor to zero and Canada one. Does this nor jury's already colored yes it is and it has the color one so no problem.

53
00:12:31,262 --> 00:12:42,972
Since it has the colored one no problem so it has the correct color without any issue so only return true will return through here let's explore the next adjutant up through that is to.

54
00:12:43,352 --> 00:13:05,982
That is to hear. So you will call this function d or d of his function with the note two and opposite color of this note that is a one. Let's check here too does this notice colored already yes it is does it is colored with one years so no problem just return your true this notice colored with perfect color.

55
00:13:06,212 --> 00:13:19,742
We did an issue. So we explored all the edges and all the adjutant of three. We explored all the adjutant of three so let's write of the color here this notice to his caller ID on this note.

56
00:13:20,072 --> 00:13:33,602
Our three is great minus one. So we had done the just up three lets better to we see it we're done with the i just end up do. Let's back here we had done let's move to route here so let's explore the next.

57
00:13:33,932 --> 00:13:46,872
In that is three. Let's call this function three for our route. Our next adjacent is three so let's call it three and the opposite color here minus one so you'll have to provide three and minus one.

58
00:13:47,252 --> 00:14:01,512
Does this notice already colored yes it is colored does it has the color minus one yes it is so again read until it has the perfect color let's start explore the next edition there is no adjutant so we are done.

59
00:14:01,712 --> 00:14:19,242
We have no issue here we can color this grub and we colored this grub successfully without any issue. Now let's move to the next portion so we call this function for what we du nord zero we are done for digital now let's do four one when he's already visited.

60
00:14:19,712 --> 00:14:31,422
Then for two two is already visited through trees already visited. No let's call let's call for four let's call our differs function. With this nord fall.

61
00:14:32,912 --> 00:14:43,472
No let's color differs function with four. Four and let's Robert or colored one this is your initial call so we call a devious function with nord four and collar one.

62
00:14:43,922 --> 00:14:55,242
Okay. Now let's explore the adjutant afford the adjutant for a digital forty six. And here we can provide the color the opposite color of this note that is minus one.

63
00:14:55,502 --> 00:15:14,472
Now let's check does this node is. Colored. No this note is not colored. So. Let's color does not with minus one let's insert here minus at one. Now let's explore eerie call this function with six and minus one.

64
00:15:15,152 --> 00:15:25,452
Let's explore the adjustment of six. This notice colored with one and this note is color with minus one. Now let's expert the adjutant of six that is four.

65
00:15:26,582 --> 00:15:41,702
And he will call the function with the opposite color of discolour so that is a one. Now let's check does this nord has any color no. Now electric does this note is already coloured.

66
00:15:42,062 --> 00:15:53,852
Years this note is already coloured. We have to update when initially call our function we have to update developed with one guys. Then we have to opportunity call this.

67
00:15:54,272 --> 00:16:08,912
We have to admit this valley here we just did. Now he received four. Does for his colored years for is already coloured. No letting the color does it has the color one yes it is.

68
00:16:09,452 --> 00:16:23,162
So no issue nor problem so lead just read on here true it has the perfect color there is no violation. Now let's check the next adjutant so you recall this function d for the one.

69
00:16:23,591 --> 00:16:40,932
Next to adjutant of sixty five. And here you can color with one the opposite color here right so five and one. Now let's check does this note five is already colored no this nord is not colored so it lets color this not with one.

70
00:16:41,432 --> 00:16:54,392
La scala does not read one. So we colored now let's explore the descent of five that isn't a five or six. At the center five or six hero can color it with minus one right the ad isn't a five is six.

71
00:16:54,812 --> 00:17:16,352
You have to chick. Does this nord is already colored. Does this not six is already colored. Yes it is. Does it has the color minus one yes it is so return true because this is valid coloring no problem let us put the Knicks or the gender is new and next adjutant to we are done no let's back to the root not here.

72
00:17:16,862 --> 00:17:46,662
Rude not here. It's written true it's written as well. Let's back here let's check the next adjutant that is no next adjutant so we are done. We colored this poor shop are disproportionate paragraph no let's call a function with five five is visited and six six is visited we are done and we colored our graph with discolored you do this nor do we won the inaugural with one then would wanted monotone and so on and so forth we have here the color.

73
00:17:47,252 --> 00:18:00,122
Are you hope you've understood this video explanation. Now let's take one more example for better understanding. Let's assume we're given this graph we can call this graph with two color.

74
00:18:00,572 --> 00:18:17,502
One and minus one. We have your four hundred. Zero two or three let's call this function. For node zero to let's call our function. With not zero and here we have default values zero in our colors.

75
00:18:17,912 --> 00:18:30,492
Arab. And European colored the first cuddle richest one so here are divas one Korea let's call it with no de zero this is nord. And this is our color this is color.

76
00:18:30,752 --> 00:18:41,592
Now let's check the color of the snood zero does this notice. Colored already know the Nora has no colors let's color it with one no problem let's color here.

77
00:18:41,792 --> 00:18:51,582
Now let's check the add just a hint of zero to add doesn't obscure is one so let call here one and here we should color the opposite color that is minus one.

78
00:18:52,052 --> 00:19:03,732
To your recall dysfunction with nord one and color minus one. Does this notice already coloriage no so let's call it does not wheat minus one. Minus one.

79
00:19:04,952 --> 00:19:23,592
Now let's explore the ad just send the adjutant off one the adjutant of one or judo and two. Jewelry hitters with the colored one. Does this node is colored already yes it is this node zero is already colored so let's writer the color your want minus one.

80
00:19:24,092 --> 00:19:40,422
And had one call with. Zero and one does this not is already coloured years does it has the colored one it okayed has the colored one so only return true it has valid coloring now let's explore the next ad just send up one that is too.

81
00:19:40,832 --> 00:19:54,072
And here we should provide the color which operate the color the opposite colored one so let's call this function here. Let's call this function here d with two and one does this no two is already colored yes.

82
00:19:54,662 --> 00:20:06,332
No let's check the color up to does this note two is already colored. We see no so let's color there's no Rita one. Now let's explore the addition of let's explore the adjutant up to.

83
00:20:06,902 --> 00:20:22,472
He return true this is two. And here let's expert i just end up two. Adults and up to his first is zero. Zero issued has the colored opposite color of one right so you're issued up minus one now let chick does zero is.

84
00:20:22,802 --> 00:20:38,802
Done. Is visited or does zero is already coloured. We see zero is already coloured does it has the colored one no it has the color minus one. We see that zero is colored with one.

85
00:20:38,882 --> 00:20:54,132
So we have a problem zero is not colored with minus one if the. If the zoo is colored with one. We know that this dress at descent up to this is colored with one and we have color at zero one so this is not a valid case.

86
00:20:54,812 --> 00:21:12,852
Yet we have a pollution. We cannot color this zero we cannot colored this zero. With minus one. Because this is already coloured this is already coloured this is a valid this is an invalid case so this is polluting our rules.

87
00:21:13,502 --> 00:21:26,042
Our rules is that we cannot colored the ad just sent a note with the same color. But here. We find out the pollution so will immediately return false.

88
00:21:26,612 --> 00:21:38,832
So it will return false immediately this is what algorithm. We don't have to check any more will return false it's. Immediately. The city where algorithm now let's implement this algorithm.

89
00:21:39,902 --> 00:21:51,972
Now let's implement our dfs algorithm first let's find out the number of nord we have in the given graph so let's call it numb he called to graph dot length.

90
00:21:52,592 --> 00:22:04,502
This num is the number of nodes number of nodes we have in the given graph. Now let's create. Our colors array so end colors to keep track the visited.

91
00:22:04,832 --> 00:22:23,502
Node so new int. The sige is the number of nodes. Now let's run our love for. Int let's call it nord nautical to zero we have your. Are total. A total this num number of nodes.

92
00:22:23,912 --> 00:22:37,992
So while note is a less than. Less than numb the nod plus splotch. Our grab can be disconnected ebola graph is disconnected we have to call our functions.

93
00:22:38,582 --> 00:22:55,872
For the number of portion we have in the disconnected graph. So let's check here if our current notice. If our current node. Is. Not colored metric here if colors note if your current node is not.

94
00:22:55,922 --> 00:23:09,452
Colored then we have your doodle the default value of this era is zero. If our current nord is no what coloured will call our dfs function will call our beavis function we don't want a graph.

95
00:23:09,932 --> 00:23:27,252
That will provide our colors area then our nord then our color. Our initial color is one. In the exploration part we just shorted is two arguments. This function will return true this function will return true if it can colors.

96
00:23:28,292 --> 00:23:41,142
So let's check here if devious. If dysfunction and return false if dysfunction written fault that means we cannot color our grub. He perked up is disconnected and he cannot.

97
00:23:41,192 --> 00:23:52,433
It we cannot color or especially pick portion then it will return false. It will return false in that case all immediately re Eden fault it means that autograph is not bipartite.

98
00:23:54,542 --> 00:24:06,002
If this function never written fault never return fault that means dysfunction all adjusted and true. This function will be called once if we have a connected graph.

99
00:24:06,392 --> 00:24:17,042
If we have disconnected graph this at this function will be called for the every portion where every connected portion of the game rough. So if this function.

100
00:24:17,342 --> 00:24:33,132
Will be written all adjust to that means the drop is a drop is a. Bipartite graph so he will return. True. Now let's implement this function df as. Public regent of his bullion dfs it sticks poor parameter.

101
00:24:33,182 --> 00:24:48,522
Int. Disk prove it explore parameter this graph are given graph then our colors array colors the and our nord our given nord and i were given color that is called color.

102
00:24:48,752 --> 00:25:09,822
Now i'm going to check. I'm going to check does the current nord is already cut alert. Logic that. If our current notice already colored light jacket ip colors nord if it's not if it's naughty called to duty that means the nord the nord is colored.

103
00:25:09,992 --> 00:25:25,142
With color. One or minus one. If our nord if the lord. Is colored. Then we're going to check does the snot coloured with the given color. Let's check that.

104
00:25:25,562 --> 00:25:41,112
If our nord. Colors with the given color. That means it ok. That meant. It okay no problem lim. We have no pollution in coloring our graph. The ad doesn't receive in different color.

105
00:25:41,222 --> 00:25:53,732
You be colored or given node whether you be colored our given node with the. Given color. So in that case it will return true. Let's assume the given node.

106
00:25:54,152 --> 00:26:11,642
Is colored with one. And will given the color minus one. That meant we have different colors in our nord. It means that. The two ad doesn't nord has same color.

107
00:26:11,972 --> 00:26:31,302
In that case what we should do we should return false immediately we should return false. This is our base case of our recursive function. Now let's color if we saw our current note is not colored let's color our current node with a given color.

108
00:26:32,402 --> 00:26:46,452
If we're giving a grab something like this one is connected to two and four. Then two is connected to. A two is going to get to three. Initially it will given this new one let's assume we're given this node one.

109
00:26:46,742 --> 00:26:59,262
And we're given this color on. Initially our note is not colored so here we have two colored ignored with one so let's color here so colors nord he calls to color.

110
00:27:00,272 --> 00:27:16,902
Now let's find the ad just end of this not that we have colored already there have colored here let's wind the edges into end at just sent e d j ad doesn't let's find the adjutant a graph nod to we find out our edge isn't.

111
00:27:17,462 --> 00:27:38,358
We find out our adjutant. You're finding outer edges and let's assume we're given. This graph dude has gone into one too. Then one is connected to. Doodle and two let's assume for examples so initially we call this function with not zero and colored one so ecologists note with one.

112
00:27:38,522 --> 00:27:47,788
That will call this function with this nor the adolescent is one so let's call this differs function dfs let's bullet graph then colors the nord the ad just.

113
00:27:48,512 --> 00:28:00,032
And opposite color we can find the opposite color back by multiplying our color with minus one senior ecologist noted once what we can. Call this not one with minus one.

114
00:28:00,662 --> 00:28:11,102
So it can get the opposite color something like this. Then we see the doctor then we see the not one is not colored all color is nodded minus one digital color function with one.

115
00:28:11,552 --> 00:28:23,472
We'll call our function. With zero and will provide the opposite color of this nor that is one and we see his dress already colored we'd want to no problem it'll return true.

116
00:28:24,362 --> 00:28:42,552
But if we call it function if we have something like this. Or two is connected to three if we call this two if it's. If we have unit three let's assume we call this function just for the sake of honestly let's assume that we call this function required function to characters not with one.

117
00:28:43,112 --> 00:28:53,652
And. We we have to call this ad doesn't we the opposite color to minus one you'd call it three and minus one if this notice colored with already one. That means.

118
00:28:55,262 --> 00:29:08,132
We have a pollution. We have to not to Addison not that having same color so in that case it will return fault. Once it returns false. Will immediately return false from this for more.

119
00:29:08,612 --> 00:29:22,652
From this function so if this dfs function. Once it's return false. We will. Immediately will immediately return false. If this defense function never returned fault.

120
00:29:23,072 --> 00:29:40,772
That means. We can color our graph with two colors. Then again to the gop is a bipartite graph. At the end here all region. True. If call. Our function if you have only one note one is connected to nothing you have just only one node.

121
00:29:41,222 --> 00:29:50,012
Then we'll call this function this dfs function with one and colored one. We have to color does not we'd want it will just colored right here and there is no ad doesn't have one.

122
00:29:50,342 --> 00:30:09,756
This loop will not run it will just return to buy this. Region true. Now let's run this code. It let's submit it. Accepted one hundred percent foster we have solved this problem successfully.


@@@
1
00:00:00,420 --> 00:00:12,780
Welcome back to this video in the previous video we have solved this problem all path from source to target. In this problem will given a graph and in notes we have to find it all possible path from zero to.

2
00:00:13,230 --> 00:00:29,680
In minus one. Hundred with the output for this. Graph the output should be. Zero one three. And zero two three. Will have two outputs this to. List in our output.

3
00:00:30,000 --> 00:00:47,440
Now let's see how to solve this problem. Let's assume we're given this graph. In order to solve this problem. Using. Bfs allegory Adam. We have to create a cute at a structure let's great here a cutie at a structure let's assume this is our crew.

4
00:00:47,760 --> 00:01:04,150
This is our queue data structure. Will start from zero. Let's start from zero. Let's insert zero in our queue. So. Zero. U'll. In subdued as enlist in the queue this is a list.

5
00:01:04,620 --> 00:01:22,210
Now let's explore all add cent of zero. The add percent of zero is one and two. So we insert it. Into cubes euro for strip to remove the front and we have to get the last the last is zero.

6
00:01:22,500 --> 00:01:39,780
Sodium affront and we get zero this is jiro. Now. Let's add. This one let's add this one to this list to this removed list. So this is our list. Zero let's add one to this list so what we'll get.

7
00:01:40,260 --> 00:01:57,100
We'll get zero one let's add drawn. In our queue zero one. Then we have to. We have to adhere to. Endow. Removed in there removalists we get zero to. Get here douro too.

8
00:01:57,660 --> 00:02:11,350
Note let's remove the front what is different. Zero one. This is different ordered the last this is the last one so from here. This is one let's explore the add descent we have all wanted to send off one that history.

9
00:02:12,330 --> 00:02:25,500
So our. Prompt is zero one this is our list. Does three exist in this list know so we can add three if three August one skiff. So let's insert here in our q.

10
00:02:25,890 --> 00:02:45,000
So is euro one three this list. Then. Let's do them different what is different this is that front. So front is zero two. Is it our list. What is the ad descent up to that is tree at the center of two is.

11
00:02:45,330 --> 00:03:00,150
A tree. Let's add three to this list. Since two does not exist we added here now let's add this. Right here. So zero to three. There is no more add to send off to.

12
00:03:00,510 --> 00:03:10,680
An alter one we saw that already we have no more addressing drop one. Now let's remove the front what is the front now this is different. And the last.

13
00:03:11,070 --> 00:03:23,880
Will when will remove all take the last does the last your target when removed these will take does the last each our desired target or target is. Your any goals to four our target is.

14
00:03:24,330 --> 00:03:33,360
A tree. Did you have this list that theories three know when to remove this list already soldier does three calls to this last note and altar for this altar for.

15
00:03:33,900 --> 00:03:50,730
Altar for this was he to his naughty calls to tree when he removed his we see this last remote. Remote we get zero one three. Here we see the last article to targets all add this in our answer list will add these in our answer list cerrito on.

16
00:03:51,120 --> 00:04:07,080
You to one three. Now what i'm gonna do i'm gonna remove this what I'll get I'll get zero. One three. Zero one. Actually will get zero two or three. Does the last your target years it is.

17
00:04:07,650 --> 00:04:28,390
So let's add it to our list and just continue we'll just continue. When we find out that desired the last the desired target. Will just continue let's move door akua lucic and we see that accuse empty so we will stuff and only return this list.

18
00:04:28,530 --> 00:04:39,480
This is a solution this is or we can solve stall him using q near destruction and is it were a bfs algorithm. Now let's implement our previous algorithm.

19
00:04:39,900 --> 00:04:55,386
First let's create our list to store the answer. List. He called to new erie list new era list. Let's find out our target node serene target he called to.

20
00:04:55,590 --> 00:05:07,920
Graph dot lie lent minus one. Grabbed dot length is the number of nodes and every substrate on we get target. Now let's call our beef is function. Of.

21
00:05:08,400 --> 00:05:27,040
First graph the in our list then. Da. A starting node zero and our desert node target. Dysfunction will constrict are all the valid path from zero to target and all add to this list here added we'll just redone the list.

22
00:05:27,090 --> 00:05:42,180
Let's implement the function right here. Public you'd do is avoid. B f s. Event. Graph the in our list. Let's call it a list. Then we have our starting nord.

23
00:05:42,655 --> 00:06:00,550
Source let's call it source and or target inte tr t r for a target. Let's get here you did a structure q in the cute will store list of integer. So. We'll store path in our queue so list integer.

24
00:06:01,440 --> 00:06:19,410
Q he calls to new link list. New link list. Right below here. Let's greet our list. Let's call it a pat. Saw. List and. In teacher. This is our pet he called to.

25
00:06:20,160 --> 00:06:36,270
New. Aerialist. New list and in this path we'll add our source let's add disorder so. Bad don't add source. Is ursi and let's add dispatch to the skew so.

26
00:06:36,600 --> 00:06:57,640
You dod add pat. Now. Let's. Run our. Love for beavis algorithm in order to abuse this away live while. Queue is not empty while queue is not empty let's remove the front and let store it in our path variable we don't need this.

27
00:06:57,720 --> 00:07:11,820
This list here. So again this muted that had he calls to q dot. Pull it will remove the first or the front. Now let's find out the last in a recurrent bad so ain't lost.

28
00:07:12,150 --> 00:07:38,410
The last northern or current path so lost he called to pat dot gate. Path dot sige minus one we get here last night here i'm gonna shake does the last each hour a target does the last you're a target if we saw last is equal to the target what we'll do we'll add our path we'll add our current path to this list.

29
00:07:38,460 --> 00:07:52,740
So list dot add listed add our current path so. Bad. And here we'll just continue we didn't. Continue wouldn't have to and we didn't have to traverse.

30
00:07:53,100 --> 00:08:06,370
Through that i just end up blasted we find that the desert i target here. If this is not true what will do all eras over the edge ascent and descent of the last node so for.

31
00:08:06,600 --> 00:08:30,730
Int. Integer eg add descent. Of. Up at the center of this last node so let's get that. We can just implement ideas graph last. Illiterate offered the ad distant now here i'm going to check does the adjutant exist in her path if the adjutant a guest in our current but only just escape that so here we're going to check Eve.

32
00:08:31,140 --> 00:08:46,780
Eve pat. Dot contains a g if. It does not contains. In the path the Edison does not content in the path what we will do. We will. A great here new path so list.

33
00:08:47,610 --> 00:09:10,350
In teacher. Let's call it new. New pat. He called to new. A new analyst new analyst and lead sbr alright here our pet. Message our. Ah Beth. And in the pet one ad or add to st so new path toward an hour add to set.

34
00:09:10,950 --> 00:09:24,820
We just added our ad just send in our new path now what i'm going to do i'm going to add this new pad into the queue. To explore further. So acute add new pet.

35
00:09:25,442 --> 00:09:44,790
New path. Okay. This is your core algorithm. This is our algorithm now. Let's. Around this skirt. Except it let's admit it. Accepted we have solved this problem successfully this is how we can solve the strolling.

36
00:09:45,150 --> 00:09:54,070
I hope you've understood this great explanation if you have any cushion if you have an issue. Post your question on the q and a forum thanks for watching this video.


@@@
1
00:00:00,270 --> 00:00:22,290
Welcome to this video in this video or good to solve this coding interview question all pets from source to target. In this problem given a directed acyclic graph dag of innards level from zero to in minus one we have defined it all possible paths from no desire to not in minus one and we have to region the Anne answering any order this is the problem.

2
00:00:22,680 --> 00:00:34,170
For example if you're given this graph this is a directed a cyclic graph. We have to find it all possible path from zero to. Three. From zero to three we have to path.

3
00:00:34,680 --> 00:00:49,240
We have to return this to pet we can return them in any order. For example taper you in this. Dag or density could exactly graph. Have written. The path from zero to all possible patterns zero to four.

4
00:00:49,320 --> 00:01:00,640
We've defined it from zero to. In minus want to hear any gods to four. With read and all possible paths from zero to four and we have this path from zero to forty written all the path.

5
00:01:00,690 --> 00:01:09,250
Now let's see how to solve this problem in this video are going to solve destroy them using dfs algorithm let's see how to solve this problem using Davis algorithm.

6
00:01:10,020 --> 00:01:22,570
Let's assume we're given this graph this graph is represented using this add to censor list. Let's see how to find it all possible path from. Zero two in minus one here.

7
00:01:23,160 --> 00:01:32,040
Any gods to four because we have four notes. So we have to find out all possible path from zero to three. Now let's see how to find it all possible path.

8
00:01:32,456 --> 00:01:43,290
Will start from zero. No let's call it differs function with zero. Recall or differs function with zero. And we will have in our list the starting node.

9
00:01:43,620 --> 00:01:56,830
So in the list until our current pat list we have zero. Now let's explore the add to send of zero that first ad descent is one. Does one exist in the list.

10
00:01:57,000 --> 00:02:10,720
No. One does not exist in the list so let's add this one to the list torah get we get a zero one. Now let's explore. The adjutant of one. At the center on his tree.

11
00:02:11,370 --> 00:02:30,330
Does three exist in this list we see that three does not exist in this list so let's add to our list zero one three. Now he received that he received at the last node either a target node will also just ciccone call our function will all ages chick.

12
00:02:30,690 --> 00:02:47,250
Does the last node is our target node initially recalled dysfunction what he will do all cig does the jury the target node no. Then when you add this one here already called dysfunction will Jake does this one is our target the end.

13
00:02:47,670 --> 00:03:03,060
The last element. In the pad list does it our target know. So let's call. A dysfunction if we call this function we see that. Three is our targets are all at this door answer list let's add that.

14
00:03:03,420 --> 00:03:20,550
Zero one three in our answer list. We added here. We are just exit from here singer pirate or target so let's move to one that just back to inlet stream of all three from the end we get you the one let's explode the ad descend upon it is no more ad doesn't.

15
00:03:21,060 --> 00:03:37,570
Lead back to here lets you move on or get zero. Know here what I'll do i will move to the next adjutant to. Let's go here are two does to exist no let's add here does do is the target no let's explore the add descent up to that history.

16
00:03:38,250 --> 00:03:49,380
Does three exist in the list now let's add three. Right here so July two three now let's call this function only call this function a finder this last node this is our target node.

17
00:03:49,740 --> 00:04:01,620
This is our target not soiled all added in our list showed zero to three. Now here. All exit will exit. Let's try to explore next edit that is no more at dissent.

18
00:04:01,950 --> 00:04:16,330
Leads back to judo that is no more i just signed up to so we origin. We're done. We'll written this to. Add this to pat this is our answer to how does Davis algorithm works.

19
00:04:16,500 --> 00:04:26,680
I hope you've understood this great explanation no let's see the algorithm. Now let's implement our algorithm. First thing we're going to create this list.

20
00:04:27,060 --> 00:04:40,000
We're going to create this answer list. Let's call it list he call to new analyst. New era list. Right below here and we'll create our current path. So.

21
00:04:40,590 --> 00:04:55,200
List of integer list integer let's call it our paddock holds two new. New error list. In this analyst what oil do. Will add the node zero because all start from zero.

22
00:04:55,560 --> 00:05:17,770
So path toward ad. Zero. Now and we'll call our Davis function and would call our Davis function. D f s let's provide. Our graph graph then our list or we'll store our answer then pat our current bad one starting and restarting node is zero.

23
00:05:18,030 --> 00:05:32,860
We're sending the reference. Of this list to dysfunction will find it all possible path from zero to target from from zero to target and all added to this list and you're adding the oldest written this list.

24
00:05:33,030 --> 00:05:51,670
Written list. Now let's implement gave his function public return diversified. Df es. So int. Then graph. Then we have. This. List so let's just copy this from here.

25
00:05:52,920 --> 00:06:06,040
Copied and let's best it then our list. This is our path. Than our current note let's call it ain't not. No i'm going to check eBay the last notice our target note.

26
00:06:06,840 --> 00:06:22,620
Where does your target note. The target nerd. Ease the length of this graph Oregon to the height of this graph. So. Graph dot lint. So this is in. So we have to substitute one.

27
00:06:22,980 --> 00:06:36,120
Any quotes to the number of nodes that is the height of this graph. So we get this. So we get this in script as obstruct one who substrate one and if we saw this is equal to a current node.

28
00:06:36,570 --> 00:06:50,880
That means. Episerver current node. If this is a culture or current node that means we find out our desert pat invalid path let's add that path to this list to list dot ad.

29
00:06:51,300 --> 00:07:03,990
Path with the first converted to new lists or new era list. New area list. Let's provide your pet. And all exit by desert. Modest return statement and hear.

30
00:07:04,380 --> 00:07:18,760
What i'm gonna do i'm going to. Find it all the dissent all the ad doesn't upper orange note. So indeed you're a d g. R graph note. It will find that the ad dissent.

31
00:07:18,870 --> 00:07:33,490
If we saw the ad dissent. Exist in our current path is a path toward contains. Eve our ad descent ie if the adolescent contents in the pat will just continue if the packages not contained.

32
00:07:33,690 --> 00:07:49,680
In our path all add our address into the pat so pat dot. Add. Pat dot and our current ad descent. That is a d j and now let's call out the of his function dfs let's provide graph least pat that are not.

33
00:07:50,070 --> 00:08:04,770
Our guarantor his address and a degenerate the ad dissent note. When we find it or desert note or. If we moved to the left most are not on leftmost call in our decision team will Patrick and all.

34
00:08:05,078 --> 00:08:19,630
The last. Will remove the last one this path and will choose. We'll choose the next ie the next element or next node. Alters the next note to remove that surpass dot remove.

35
00:08:19,860 --> 00:08:43,530
Pat dot. Sight minus one. This is our coral grader i hope you've understood now let's run this good. Let's. Run this good. Accepted let's admit it. Accepted.

36
00:08:43,830 --> 00:08:53,380
This is how we can solve this dilemma isn't give his algorithm i hope you've understood this read explanation. Thanks for watching this video. I'll see you in the next video.


@@@
1
00:00:00,390 --> 00:00:19,840
Welcome back to this video. In this video or going to solve this coding interview question detect cycle in an. Undirected graph. In this column we are given a graph data structure this is our graph this is disconnected graph we have two components in this graph.

2
00:00:20,040 --> 00:00:34,200
Or against it we have two portion of this graph. This is one portion and this is the second portion we have to portion in this crap we have to check weather dot graph contents cycle or not.

3
00:00:34,650 --> 00:00:49,090
We clearly saw that. In this graph this portion has no cycle but in this portion we saw that this portion has a cycle this is a cycle. So we have to region true because this graph contains a cycle.

4
00:00:49,710 --> 00:01:12,730
If we are given these graph douro one two. We see that this graph contains no cycle there is no a cycle so for this given graph we have to written we have to return false because there is no cycle in this graph so in this problem we are given an undirected grow if the grub can be disconnected.

5
00:01:13,230 --> 00:01:27,810
We have to check whether the graph contains a cycle or not. In this video we're going to solve this volume using bfs algorithm. In the next video. We'll solve this problem using dfs algorithm.

6
00:01:28,230 --> 00:01:41,010
Let's assume we're given in this graph data structure this graph is represented using this ad decency list. Now let's see how to solve this problem using bfs algorithm.

7
00:01:41,340 --> 00:01:54,640
Since our grab can be disconnected for the oldest catch we have to call our b of his function. Put the beef his function in number of times where n is the number of nodes we have in the given graph.

8
00:01:55,440 --> 00:02:14,670
Now let's call our beef is puncture for the nord zero for nord zero. To keep track of visited nodes are going to use. Visited bullion erie. This is our visited bullion airy and we're going to use q to destruction we know that in the beavis algorithm we have to use.

9
00:02:15,030 --> 00:02:29,440
A keyword a structure in India skew will store. A bear nord and the previous note of. The previous note of this current note. Will store appear no rd and prep in our q.

10
00:02:29,550 --> 00:02:43,020
Initial it will start from zero. Will start from zero. So let's Mark your as visited and let's store in our queue so zero and the previous observer there is no previous because we're starting at zero.

11
00:02:43,440 --> 00:02:56,580
So let's say minus one as previous there is no previous. This is your initial step. Now here we see it we have. A current note and a previous of this note.

12
00:02:57,000 --> 00:03:11,140
Now let's remove the phone from rq if we remove we get here. We get our current node. So our. Current node is zero and we get a previous. Previous is minus one.

13
00:03:11,880 --> 00:03:23,310
Now let's explore all the add to send up zero older ad to send up zero. So the ad doesn't absorb is. One. We have only one that doesn't absorb. That is one.

14
00:03:23,790 --> 00:03:37,470
Does on his visited nose and one is not visited. Will insert in our queue to let's insert one in our queue so the nord is one and the previous up one is zero we're coming to this one from zero.

15
00:03:38,040 --> 00:04:00,370
That is the previous so one. Zero. Seems we have selected this. This ad doesn't want to let the market as visited. Now what are you going to do we're going to remove the front promote q this is the front let's remove it we get our nod we get the nord one and what the previous prevents is zero.

16
00:04:01,140 --> 00:04:12,960
Now let's explore the ad doesn't off one. Let's explore. The ad descent of one what are the adjutant of one and what is the previous off one previous up on is.

17
00:04:13,290 --> 00:04:28,740
Zero we have year. And the adjutant of one here we have zero. Ad descent of one we have have zero this is the ad descent. Does zero is visited does zero is a visited.

18
00:04:29,130 --> 00:04:44,860
We saw that zero is already been visited. St jury's already visited. Does it. Does each form and his cycle. Let cig that. Lit cig that. So this is our duro.

19
00:04:45,060 --> 00:04:58,530
This is the ad descent and this is the nord one from one we're moving to judo. From one we're moving to zero right. Now what is the parent of one. Or what is the previous up one.

20
00:04:59,160 --> 00:05:18,160
Zero the previous of one is zero we moved we moved to one. From. Zero right we we come to one from zero. So we have. This is we come from. Zero to one and here we see that from one will coming to judo.

21
00:05:18,660 --> 00:05:30,270
It means that we happen age we have an age in between this do not. Here we alter your condition epistle to add descent and descent of our current note.

22
00:05:30,660 --> 00:05:45,130
If the ad just sent up our current node. Is he called stew if the ad doesn't up our current node that is one. The ad descent is zero. Since the adjustment is visited since the adjutant is visited.

23
00:05:45,570 --> 00:05:58,890
If the ad doesn't have this note one. The ad doesn't have the snowden is he calls to the parent or pip. The adjutant of this no one is. Zero. Right i just end up on a zero and the.

24
00:05:59,220 --> 00:06:24,790
Prep or the parent from where we come to one that is also zero. So the pip let's call it crib or we can call it parent. You probably saw this condition true we can clearly say that we can clearly say we have an age from one to zero since the graph is disconnected since the graph is and directed say if you find out this condition.

25
00:06:25,050 --> 00:06:45,240
It means that we have an edge that does not form any cycle for sure. If the adjutant is visited and if he saw this guy condition is true it means that we have an edge so we'll just as keep that erosion will move to the next adjustment so let's move to the next adjutant of this nor the one.

26
00:06:45,870 --> 00:06:58,590
The next adjutant abyss node one is to dance to is visited no two is not visited. Since two is not visited so there is no chance having a cycle. So let's Mark the note.

27
00:06:59,220 --> 00:07:13,630
Two as visited. And let's add it to our queue. So that no two and we we come to this not to from the node one from this current node. So against it one is the priv and two ista.

28
00:07:13,890 --> 00:07:24,330
Two is the current nord altered into this one is apparent from parent we moved to the child. We can we can say that. Is there any adjustment of one note that is no more Addison.

29
00:07:24,750 --> 00:07:38,910
So let's remove the front that is dis two one. So let's remove this front to get nautical institute and biblical to one. Now let's explore the adjutant up to the ad just descent up to his one.

30
00:07:39,270 --> 00:07:57,010
We see that the adjutant of. A two is one does one is visited yes one is already visited. So adjutant. I just didn't he calls to hear. Identical to one and the previous August no to his articles to one.

31
00:07:57,270 --> 00:08:12,690
That means we have an age in between these two not two and one so it will not for me cycle. So we'll just continue what we're jazzed contain the new. Let's move to the next ad descent we see there is no more ad dissent.

32
00:08:13,260 --> 00:08:28,390
Bc. There is no more adjutant. Of two. Our queue is empty. It means that. In our current component or in your current portion a paragraph do not have any cycle.

33
00:08:28,710 --> 00:08:42,270
Initially we called our function with zero and we have processed this portion now let's move to one. We see one is visited. Then two trees also visited then three threes not visited let's call our b of his function.

34
00:08:42,570 --> 00:09:01,120
With this node three. So let's Mark three has visited the zoo initial stage and let. Insert this tree and what is the previous updated is no previous so let's insert your minus one because we are starting at three so there is no previous and that's what i mean sir you're just minus one.

35
00:09:01,290 --> 00:09:17,560
Now let's remove the front from q. So what is our current noord. Noord he called the tree. And what is the previous. Previous is minus one. Periodicals to minus one let's explore the adjutant of three.

36
00:09:17,760 --> 00:09:29,320
The adjutant of threes for. Add doesn't have trees where does for his visited know so let's insert four from where we moved to afford three saw the previous is three let's Mark four as visited.

37
00:09:30,090 --> 00:09:43,030
Let's. Explore the next adjutant. That is six. Next adjutant is six dollars six is visited know what let's market as visited and let's insert here. Six three remove two six from three.

38
00:09:43,560 --> 00:09:54,210
We moved to. A six from three. So this is a recurrent and does your previous. Is there anywhere i just didn't. Know. So let's remove the front which is four three.

39
00:09:54,810 --> 00:10:13,030
So a nordic yards to four and previous equal to. A three. Now let's explore the ad just send up three. Now let's explore the. I just can't afford that is three does trees visited yes trees already visited threes already visited.

40
00:10:13,230 --> 00:10:27,450
So for this note what is the previous. The previous is three and Addison is three. So we can say. It's two hundred four and three. Or four days to not embed this doughnut we have an eight so this is not a cycle for sure.

41
00:10:27,900 --> 00:10:47,320
Since the previous of this note and the agis end up this not at the sim. The previous so for a nord the previous and the adjutant at the sim. So there is no cycle began say so old skip let's move to the next nord that is five despite his visited note let's market as visited.

42
00:10:47,430 --> 00:11:04,870
From her we moved to five from four so of five four. Let's do the front six three. Regards to six and protocols to. A baby girl to three. Let's explore the adjutant of six that is three.

43
00:11:04,980 --> 00:11:19,570
The ad descent of six. Ad descent of six is. At three. At this point we have visited our entire graph we have visited all the notes. Now let's explore the adjutant obscene that is three.

44
00:11:20,250 --> 00:11:36,060
So the descent of six is. A descent of sixes. Three and the previous is altar three so what we can see the previous is altar three and adjutant is altar three it means that we have an ID in between these two not six and three.

45
00:11:36,450 --> 00:11:49,410
This edge. Now let's explore the next the next descent. That is five that's why we visited yes five is already been visited five is the adolescent of six.

46
00:11:49,830 --> 00:12:05,340
So we can walk to five from six what is the previous of six that is a three. This five is already visited. But we see that we come to this nord six from three we come to this nord six.

47
00:12:05,850 --> 00:12:18,870
We moved to north six from three. See the previous we moved to this note six. From three so we moved to this nord six in this direction. And from here we see that.

48
00:12:19,440 --> 00:12:33,370
Already five is visited. In these directions we we haven't visit five but we see this five is already been visited in another day erection. So his wife can visited in this direction.

49
00:12:34,650 --> 00:12:46,600
And here we see from six to five we have an age since we have visited this y from another direction and here we cannot visit this fight from this direction because five is already visited.

50
00:12:47,490 --> 00:13:09,940
And we have an edge. The ad just sent off sixty five. The ad descent of six. Is five so it can move from here to here but we said this is already visited in another direction it means that is five has been visited in another path so we raised this five we raised his wife we started here and we re is this five in this direction.

51
00:13:10,170 --> 00:13:20,320
And here we're trying to move in this direction and from here it will try to move to this fight we said this is already visited so it means. It's form is cycle.

52
00:13:20,670 --> 00:13:36,490
It's form a cycle will return immediately true how to achieve that how to actually check that so what is it the adjutant of this note six. What is the adjutant of this nord six five so add descent equal to five.

53
00:13:36,540 --> 00:13:51,810
This adjutant is ignored fyp and what is the previous of this note. Six that is three. To oblivious or parent is three with this nor are not the same if the nord are not the sim Eve.

54
00:13:52,230 --> 00:14:01,930
This Addison is already visited and if the ad descent and previous is not the same it means that it's warmest cycle so we have to return true immediately.

55
00:14:02,880 --> 00:14:17,920
This is our quarter logarithm. This algorithm will takes time complexity off v plus he. B the number of vertices is the number of edges and a space complexity is o of a v now let's implement this algorithm.

56
00:14:18,780 --> 00:14:31,090
Now let's implement our algorithm. You're into bbs the number of vertices or number of nodes we have and our list decision our adjacency list. First thing we're going to do or going to create a boolean.

57
00:14:31,200 --> 00:14:45,300
Array to keep track of the visited note let's call it. Visited. He called to new boolean v. Now we're going to run and look for int i called to zero i less than v i plus splotch.

58
00:14:45,630 --> 00:15:05,700
Because the grub can be disconnected. And right inside here if we saw our current nord if our current node i is not visited so visited i put the current node is not visited than one call one hour b of his function b of his frost are going to provide our ad doesn't list the number visited or even visited.

59
00:15:06,060 --> 00:15:21,120
Then we're going to provide these i'm going to provide this current node i. E dysfunction. Return if dysfunction written to at any time. If dysfunction written to will emerge totally redone true so if dysfunction.

60
00:15:21,452 --> 00:15:31,360
Return true all immediately return true if this function never returns true that means. That gravity does not contain any cycle so in that case i didn't already done false.

61
00:15:31,590 --> 00:15:43,620
Now let's implement or bfs algorithm right here. Public return type is boolean. Let's call the function b f is. It takes three parameters. First this addresses the list.

62
00:15:43,950 --> 00:15:57,100
So let's copy it. Does it over add decency list. Let's call it grub and when a name or a graph that are visited arab bullion visitor at a bullion visited and a recurrent node node.

63
00:15:58,110 --> 00:16:08,560
Now right inside here i'm going to create a recutita structure in the key oost or appear all store or current node and a previous note. Oregon to the previous notice our parent.

64
00:16:09,360 --> 00:16:29,530
So here. A cue he calls to new link list. Now let's implement this glass beer glass. Beer. B r. It has two properties int. Our first our current nord so nord and it has baron or previous let's call it parent.

65
00:16:29,790 --> 00:16:44,220
Promoted we moved to this node node. Now our constructor constructor public bear it extra parameter end node end parent. Ignored end. Parent right interior.

66
00:16:44,580 --> 00:17:01,060
These dodd nordic gods to nord these dart baron calls to parent. This is our bare clutch. Now let's insert our current node under previous our current node sir q dot add.

67
00:17:01,110 --> 00:17:10,680
New appear. Our current node is node and the previous is minus one is surely. Because we can put this not from your notes so there is no previous obvious nod.

68
00:17:11,310 --> 00:17:25,590
That's what we inserted here minus one. Now let's Mark our note as visited so visited nord he called stew. True. Now let's run our away live while the queue is not empty while the queue is not empty.

69
00:17:26,130 --> 00:17:40,440
First let's remove the front from the queue superior car and he called to a queue dot pool let's do the phone and from the queue. Now let's find out our current notice in end current node a call to.

70
00:17:40,980 --> 00:17:55,240
Currently holds the current dot node and. Parent int. Parent we can see this also brave and want to limit parent so the parent he calls to current dot p parent.

71
00:17:56,340 --> 00:18:07,196
Now what i'm going to do i'm going to explore the adjutant of this discouraged node so for integer add just scent of his current node. As a graph door to get.

72
00:18:07,560 --> 00:18:32,740
Current. Node. Here this liberal illiterate all the and. You are addressing is not visited sleep add dissent is visited addressing the goals default this condition is true that means that dissent is not visited so in that case i'm going to add this add descent and the previous of this adjutant that is current not door q so let's add that sir q dot add new pier.

73
00:18:33,000 --> 00:18:50,130
New. Pair first add Joe scent and then the and the previous that is current note so current dod and let's Mark our current node as visited. It. Let's Mark our ad isn't as visited so let's Mark that.

74
00:18:50,730 --> 00:19:07,680
So visited ad just sent a call to. Draw. Now hear it final dyskinesia ailes Eve if we saw. Ad doesn't equal to our. Descent is equal to the parent. The adjutant of this nord current node.

75
00:19:08,070 --> 00:19:20,820
Eve is. If the ad doesn't have this current nord is equal to the parent of this node that means in be doing this current nord and in and the ad descent in between carnival and adjutant we have an age that is not a cycle.

76
00:19:21,330 --> 00:19:35,190
So if this condition is true if a dissent equals to parent what we will do all just continue. We'll just continue ill tip if we saw at distant is naughty calls to parent that means we.

77
00:19:35,520 --> 00:19:51,540
We have already visited this nord add just sent from another direction from another direction. And also this ad descent is and this this is the adjutant of this current note that means we have a cycle so here all written Terrell.

78
00:19:51,900 --> 00:20:08,290
Will read and hear true. When we're done with USB of his function Eve never this this is a statement overloaded true it means that. The grub does not and does not contain any cycles in that case at the end will return false.

79
00:20:08,520 --> 00:20:19,690
This is our coral greet him. This program available on geeks for geeks you can practice dear now let's compile discord he refined or something wrong we'll fix that.

80
00:20:21,840 --> 00:20:45,224
Except it compiled successfully now let's admit it. It passed all the test cases. I hope you've understood this video explanation. Just tried to understand this and just disabled him statement this is the most important part of this algorithm if the adjutant is already visited.

81
00:20:45,614 --> 00:20:58,404
If the parent of current node and adjacent are not the same. That means we are visited the ad doesn't have current node from another direction so that form a cycle for sure.


@@@
1
00:00:00,810 --> 00:00:09,850
Welcome to this video in this video we're going to solve this korean re question bfs on metrics this is very very important coding interview question.

2
00:00:09,930 --> 00:00:27,400
If you count all discretion. Wheat this same pattern you can solve a lot of grab problem. Now let's see how to find it bfs diversity aapi metrics. For example if you're given one two three.

3
00:00:27,810 --> 00:00:46,290
Four five six. Seven eight. Nine. Let's assume you're given these metrics. Net we have to traverse these metrics using b of his algorithm. For beavis algorithm for every single sale.

4
00:00:46,830 --> 00:01:04,450
We have for direction. We can hab. Boredom. Before boredom we can have a bottom. Doff. Then right lipped. Oregon move we can move in any one direction once u'll have.

5
00:01:04,530 --> 00:01:16,650
A four directions top right bottom left we can choose an annual order. If we choose disorder we have to follow you have to follow this. Order for all that so.

6
00:01:17,280 --> 00:01:31,800
Let's see the beerfest hours of this matrix. Epistle to one. We. Be selected here one. Now we have to find it boredom. Boredom is poor. Boredom is for.

7
00:01:32,130 --> 00:01:49,740
Joakim. Then job there is nothing on the top. Then right. Right is too. Then. Lipped. There is nothing on the lipped. So we applied. This. Disorder. On these how on this.

8
00:01:50,130 --> 00:02:04,590
Element one. Note we have to move to four. Let's move to for. Now. We have to move the bottom so seven. Then topped up his visited. Seven is also visited.

9
00:02:05,070 --> 00:02:21,300
Then. Right. The right is five. Let's add your five. Then lipped that is not the one that lipped. Poke him. Now let's move to. Two. Let's move to two.

10
00:02:21,720 --> 00:02:37,000
Now there is and it isn't not there is a bottom pipe that is visited. Then we have here. Out of. There is not even that of. The right registry. Let's add he had three.

11
00:02:37,050 --> 00:02:51,450
And visited. Then leapt leapt is visited. So we're done let's elect seven facility seven will see. Boredom nothing on the bottom not that obvious word that is visited then right right is eight.

12
00:02:51,930 --> 00:03:07,600
Let's add here eight. Din. Let's market. Then we have. Then we have lipped. We have nothing on the lipped so we're done. Now let's select five he will select five we have only six is six that is unvisited.

13
00:03:07,830 --> 00:03:19,050
We have four we have. Boredom that is visited we have to have visited. Then right is not visited six. And lips lip is visited. There was move to three.

14
00:03:19,440 --> 00:03:31,718
If we move to three we see that all the ad descent of three are visited and four bottom visited tavis and that has nothing on the turf then ride that is not the one right then leapt leapt is visited.

15
00:03:32,070 --> 00:03:50,140
Now here we. Have. The next eight. Mixed eight. At four eight we see that. Bottom three on the bottom. Five is visited then right. Nine only nine is. Only nine is unvisited.

16
00:03:50,520 --> 00:04:01,200
And here on the left we have seven that is visited. Then four six. Old and older. At the center visited and four nine as well so this is a val it'd be a fast arsenal.

17
00:04:01,680 --> 00:04:21,210
Of. These metrics using. This pattern. Bottom top right left eunice Annie pattern. Right lift top bottom. Oregon use. Right top left. Leapt boredom egan is Annie a pattern.

18
00:04:21,690 --> 00:04:39,670
You can select them in any order doesn't matter. You will get a different. Abi vista person but that's a valid beerfest hours. In beerfest our cell. How oil tablets it all drivers level by level this is very very important.

19
00:04:40,020 --> 00:05:05,650
Very very important we traversed level by level the first recovers this level then this level then this level and so on. Nope let's see Howard traversing metrics level by level and this is very very important if he understood how we're traversing the semantics level by level then you can absorb a lot of problems and there are many problems.

20
00:05:05,910 --> 00:05:17,860
That follows the same pattern. If he understood. This algorithm Howard traversing this matter tricks in the level of diversity. Lit as you were given these metrics.

21
00:05:18,030 --> 00:05:33,040
And all covers in this order first all divers bottom. First will diverse bottom let's call it dominant first all drivers. And down then old drivers drive then all divers.

22
00:05:33,270 --> 00:05:55,270
Ride then all drivers let this is our order we have to follow this order for all the elements. We'll start with. This index zero zero we can start at any element we can start at any limit doesn't matter but here i'm going to start it at index zero zero at this element.

23
00:05:55,530 --> 00:06:08,970
So we're going to start at index zero zero. Now huh here we have four direction. Right let me ride out the four direction right here on direction. This is one two.

24
00:06:09,360 --> 00:06:28,420
Three four direction. This is our down. Decision we're top. This is your we're. Right direction this is your lipped direction. Joakim. Noah we have selected our first element so we just print one.

25
00:06:29,130 --> 00:06:43,830
Let's ride out our dearest our son right here. First one since you have selected one all market will market. How we're going to market in order to market that this is visited will use auxiliary airy.

26
00:06:44,220 --> 00:06:56,380
Let's use your auxiliary array. We're going to use boolean array as seem a hide and seek we'd about given. Up or given metrics this is our tertiary. Also judiciary.

27
00:06:56,940 --> 00:07:11,890
Let's draw here. This. Matrix is zero one two. Zero one two. So to Mark the element oulu is this auxiliary matrix. Or here we selected once all the market as true.

28
00:07:12,600 --> 00:07:26,200
Now let's move to down. How to motor down. Who're trying to moab to down. Or we have to add one to our index right in a row index will get here. One. Zero.

29
00:07:26,970 --> 00:07:45,090
So we add your one zero know. We have two printed. Right. This is selected. So let the market astral. Lit market as a true cannot will not print it when we when we selected this index and.

30
00:07:45,570 --> 00:07:57,360
We have processed. Know who you. Are now we will add this element at in the judo tour Davis list then uli explore all the ad doesn't offer zero zero old ad descent up on the.

31
00:07:57,780 --> 00:08:10,170
A boys two and four right to be moved down this is ad descent. So we Margaret astral. Now let's go to top. What is the top on the trophy of nothing. So the top will be something like this.

32
00:08:10,620 --> 00:08:23,320
One minus one zero. Does not exist. This is does not exist on the top know right we have right here okay. In order to move to ride we have to add one two or columns of judo one.

33
00:08:23,790 --> 00:08:40,390
Alright. Then we have leaped in return to let that is not the one that lived. Since we have added here. The right market estriol. Now on the lead if nothing cb try to move on the lead how we're going to do that we will just substitute one more column we get this but this is invalid.

34
00:08:40,560 --> 00:08:54,120
We have your disk two valid one zero. Zero one so we traversed our first level. We traversed our first delivered now we'll move to our next level this is our next level.

35
00:08:54,630 --> 00:09:09,690
Try to understand this this is very very important. At this point we say that we have completed this level this is our first level this is very very important this is your first global now we're going to.

36
00:09:10,080 --> 00:09:25,390
Move to this level we're solving is level by level so we have processed our first eleven now let's move to the next level this is our next level this is the first of all the next level so at one zero let's select one zero that is four and let's attitude differs list.

37
00:09:25,590 --> 00:09:41,440
Now here we have again for a choice we have for choice we have down. Dov. Right. Then lipped. Note down one zero on the down of a ones or a hurry up seven.

38
00:09:42,030 --> 00:09:55,390
Here we have seven so how to move to dot down. Will just add one tour index will get to zero. Then top. Jarvis visited. We can add one to the top since we have selected this leads.

39
00:09:55,920 --> 00:10:11,850
At true to at. Let's add two. At index i two zero gear. Now. There is not one that we helped off the top is visited then write. The writer for is not visited let add that we can just add one to the column.

40
00:10:12,240 --> 00:10:27,256
So. A one on one so we move to. Then lived. There is not even the lift so we have nothing left here we have here. This to a destroy element. These two index here two zero and one one.

41
00:10:27,916 --> 00:10:42,476
Now here. One at one we let marketers to. Tinge of added here. So we have processed this. Now let's move to this this. These are invalid the store invalid in here also we have to invalid.

42
00:10:42,886 --> 00:10:58,666
Him. We'll see how two. X out escaped the invalid as elections when will write an algorithm. Are here we have zero one. Four four zero one. One. Lit up our.

43
00:10:59,146 --> 00:11:15,926
Let's apply here are for choice. Okay for choice here we have selected seven and we have selected five okay. Since you have selected Judah one. Soul. Singer polluted zero one and so let adhered to.

44
00:11:16,366 --> 00:11:29,065
Now let's apply a little. Dry here all for choice first down. On the doubt we have five five is visited. Five is already visited. At index one or it is visited.

45
00:11:29,686 --> 00:11:45,467
This is invalid. Then. Top there is nothing on that of satori result invalid. Then. Ride on the right we have. Three. Right on the right we have at three so let's add one to this index we get to two.

46
00:11:45,736 --> 00:12:00,556
Din. We get we have lipped. Dot lipped is. Lit Margaret first. Then lip lip is one that is visited so this is alt invalid. I do see that we. Are solving in.

47
00:12:01,006 --> 00:12:13,766
In level order this is your second level. We have finished our first level then we finished our second level. Do you understand this this is very very important.

48
00:12:14,746 --> 00:12:28,456
If he understand. This. This level out you can solve. There are some. Popular recording into regressions you can solve using the same pattern. Actually did a lot of problems you can solve that.

49
00:12:28,786 --> 00:12:41,396
Using the same pattern. Now we processed our this level so we have process this limit and this level let's move to this level we're going to pro and we're going to process these level.

50
00:12:41,686 --> 00:12:57,766
Joakim. No hero to zero. Or get we have to digital. Here we have four joys again. Again there is nothing on that down. On the turf. On the top we have four four is visited.

51
00:12:58,096 --> 00:13:11,266
Then right right is eight. So to one. Then we have. A lipped not the one that led to this is invalid. We have selected this we have to add this. Before we explore all at dissent.

52
00:13:11,686 --> 00:13:27,946
So. Let's market as true giant here. Now let's move to the next in this in this level. One one. One one we have here. One one one Kim. So. I. Want one this is five.

53
00:13:28,486 --> 00:13:40,276
Nothing we have on the down aid visited top minister visited on the right we have six. So we can move to. Right. Down is visited. Top is visited on the right.

54
00:13:40,696 --> 00:13:56,306
Want to this is not visited. So. We have to. Oh this is a for one one before. Selecting the ad doesn't have to add five dollar list. Let's add here. Now we have selected this.

55
00:13:56,446 --> 00:14:13,256
One two the settlement toilet. And Margaret distro. Let's move to our next. Induce labor look at euro two. For a juror to love again here for choice. U'll have here total for dear friend Joyce Joakim.

56
00:14:14,086 --> 00:14:30,616
For giroud two. This is. Zero two. For geraghty we have three. All that doesn't end. Here down is visited. Nothing on the top. Right and on the right.

57
00:14:31,036 --> 00:14:41,666
The left is ultra visited. Added people are exploring this will just print this value here so let's add he had three. The leads one to the next le this level is completed.

58
00:14:42,106 --> 00:14:55,726
This level is completed okay now let's move to these level. Zero or next level. Two one. Two one eight. We have. Done nothing on the. On the down then.

59
00:14:56,056 --> 00:15:12,206
Top top is visited. Then right right is nice mine. Was his two too. Welcome who says. To two. And before every exploring i have to add this to this list right here.

60
00:15:12,406 --> 00:15:28,616
That is. Eight. Joakim. Then here we have. Our. Next that is left limited visited. So this is where next one to add onto we have six. Now let's brought his old at descent of this.

61
00:15:28,726 --> 00:15:39,886
As process old ad descent of. One to be habitable for storage for one two. Four one two we have the six actually to do yeah about adheres to market distro.

62
00:15:40,216 --> 00:16:00,236
Now we have your six right. Down visited. Dog visited. Nothing on the right. Lived visited. Befor we have printed here at wanted Israel. Okay. We processed this level successfully.

63
00:16:00,526 --> 00:16:12,526
Now we're on that next level this is the last level here we can see. Are two two we will just. A print total the valleys nine. Joakim. And here. We have to.

64
00:16:12,916 --> 00:16:24,446
We have no choice here. So we are done. We have solved a strolling. This is or we can solve this problem if you understand this level this is the most important.

65
00:16:24,646 --> 00:16:38,626
This is the most important part of this. Of this. Algorithms and traversing metrics using bfs. Using the same process again see we can find out that. We can find out the pat.

66
00:16:39,016 --> 00:16:52,436
We can find her to the pet from our. From a. From from a source to target. The minimum distance path we can find it that we get will solve that problem section of discourse.

67
00:16:52,546 --> 00:17:02,846
Don't worry. And make sure that you understood how we're never seeing this matrix level by level this is your first level second level third level fourth level and fifth level.

68
00:17:03,406 --> 00:17:16,736
Joakim. I hope you have understood this district explanation here which used as source juju we can choose any one one or two judo or two one. Entity. It'll work just fine.

69
00:17:17,386 --> 00:17:29,726
There is no limitation. I hope you have understood this reader explanation this algorithm all dicks off. Him times in time complexity and you'd expect compensated for the auxiliary matrix.

70
00:17:29,822 --> 00:17:53,326
Off. Sometimes and. And we will. Will add first is history q. Then when you select all of the adjutant all at all the all of them and into the queue. Then all the streamer from the front and will add old accent and you see a pattern here first all add judo torque you will remove it will add all add descent.

71
00:17:53,806 --> 00:18:09,466
One zero. Zero zero one of that descent to the queue. Then we'll remove this all add or add distant here. To judo. One one. Okay then ordered him over to the one who'll add.

72
00:18:09,856 --> 00:18:27,236
Dura two and and should put it you saw a pattern here right. For. For bfs algorithm. We use. Q. Over beavis algorithm we use. Acute at a structure. Now let's implement our algorithm.

73
00:18:28,366 --> 00:18:40,196
Visitor would have given metrics okay. Now here we have to create a boolean matrix to keep track of the visited node. So bullion. Let's call it visitor to goals to new bullion.

74
00:18:40,786 --> 00:18:54,298
And the dimensions of these metrics same as the given magic sword number of column at tricks dot land. Then no number of. This is where a number of Peru actually and this is one number of column so matrix.

75
00:18:54,376 --> 00:19:11,066
Zero dot length. Now we. Are going to call it dfs function. D f s. So. Davis i'm going to provide here these metrics. Then i'm want to provide our visited.

76
00:19:11,536 --> 00:19:29,426
This visited. On my tricks. Din our. On. Our index as starting index zero the old started index zero zero. Now let's implement dysfunction. Public static public static.

77
00:19:29,476 --> 00:19:43,256
Avoid you don't dive is void. And function name divis it strikes for parameter. Int. Is it a word. Tricks. Then bullion. Does he ever visited metrics.

78
00:19:43,966 --> 00:19:55,396
Visited then our starting grow and as our starting element are indicated we're starting element. Oregon silver source. So our ansi ruined dicks and column index.

79
00:19:55,756 --> 00:20:07,766
Are for raw zipper color. Or inside here. The first thing. What are going to do. We're going to create. E. We're going to critic queue data structure.

80
00:20:09,226 --> 00:20:22,976
We're going to crit acute at a structure in the queue will store the row and column. So q and outta tour appear. Ok it all cute story appeared here. This year were accustomed it i began say.

81
00:20:23,056 --> 00:20:42,716
So q. Q e calls to new. Linguist. We'll get whipped embodied from this July don't entity to packet. Joakim. Noah here let's. Implement this pier this pier glass right here.

82
00:20:44,056 --> 00:21:02,276
So let's implement disappear glass right here. Inside here. Static. Static pier. Sturdy claws. Pier. In your lab to properties. In first. And second we can say.

83
00:21:02,506 --> 00:21:22,576
Oregon c ruin column anyway. And insight here. Our constructor. Public pier. Dicks to f and. Is and set to frosty calls to f and. Second goals to s. Is it your peer.

84
00:21:22,966 --> 00:21:38,656
Joakim. I q. So we have to input it. Just used everything from here. Okay. Now here all insert. Will into discovering true and current. Column to this.

85
00:21:39,256 --> 00:21:52,526
So q don't add new pier. New pier will. Insert our current drew and current column. And we have to Mark that as visited as your initial state. So visited.

86
00:21:52,786 --> 00:22:10,126
R. C. E called to true. Now to find out the heightened wheat. So let's call it. Roy called do. I wrote he call to my tricks. Dot. Lint and call he called to.

87
00:22:10,636 --> 00:22:29,116
My tricks. Douro dot lint. Joakim. Now. Right. After this. I'm going to shake while our queue is not empty q. Ease empty one hour queue is not empty. Joakim.

88
00:22:29,656 --> 00:22:47,576
Our current so we have to remove the front promoted q. So pier. A current a call to. Q dot. Pull we have to. Remove the front from our queue. And here all have our our first and second.

89
00:22:47,806 --> 00:23:05,596
So let's call it first decodes to. Karen dodd first and and second. He calls dual. Current dot second. Now we have to print. Whatever we have at this index the first and second.

90
00:23:05,986 --> 00:23:21,806
So. From automatics. Matrix aiv and. Sorry first metrics. Are first. This is what ruined eggs and this is where call him dick second. And what just happened here empty string.

91
00:23:22,696 --> 00:23:32,566
Okay. So this is your work you did a structure. And here we're just moving from the front of the queue and we have first and second. Our appear we have to.

92
00:23:33,106 --> 00:23:49,256
We have to get developed from our peer surrendered first and current second rule and. Quantum inducer can see. Now right here we have we should have a direction we need a direction so let's great here our direction.

93
00:23:49,636 --> 00:24:07,276
Erie. So. Int. Direction. He calls to new. Outlets just institute or direction. She will have direction in here. First we'll go down. Down din one good turf.

94
00:24:07,606 --> 00:24:19,916
Then ride the lift economic any water doesn't matter. So in order to move down. You have to add one. To our. Eye rule so one zero quantum is a constant.

95
00:24:20,326 --> 00:24:32,776
Or a column is zero here now for a tough we have do. We have to move down so into moped of we have to. Subtract one from one rule so minus one zero. The inner to the right.

96
00:24:33,166 --> 00:24:48,436
You have to add one to our column. Nor do left we have to. We have to subtract one from our. Color. Okay this is your direction array. There we're here i'm gonna run aloof for int i coasted euro.

97
00:24:48,916 --> 00:25:07,694
I less than here the land obvious a four. All we have for direction and i plus blech. Now right inside here. Or i'm going to do i'm going to find the ad just said ok sir e d g x e d g x e calls to.

98
00:25:08,356 --> 00:25:26,009
Direction. I actually looked at your first two. Row plus the first is a rule. This first is our rogue nc so first pledge and direction. I said index zero we have the ruined dexia.

99
00:25:26,254 --> 00:25:40,636
The indexer is ruined ex index one one is column index. And you're aimed at dissent why. I didn't wake up to second plus d correction. Ah you won. Joakim this is.

100
00:25:41,116 --> 00:25:56,906
Our street algorithms. No in order to add. These spear in our cute we have to validate it first. Eve that is valid or not. If he saw a d g x is less than zero then it is for sure invalid.

101
00:25:57,256 --> 00:26:11,116
Okay. Even so a d g x is. Greater than or equal to this is where ruined dicks Joakim. If it is greater than or equal to the rule. That is alt invalid hero is the number of where we have economies the number of column we have.

102
00:26:11,686 --> 00:26:26,486
If saw saw column is less than zero that is invalid it was economy's great records through. Our call that is also invalid. Joakim. And. If our. Our current.

103
00:26:26,716 --> 00:26:42,386
Ah at at dissent x. If our. This added syntax and Edison why if our this new our new all element is already are if our current. Current limit is already visited.

104
00:26:42,496 --> 00:26:54,106
We can't. We can choose that again or shall we will not add that to our queue. So iPad isn't ex. Add dissent why. If it's written true oldest continue we'll just skip.

105
00:26:54,466 --> 00:27:12,286
This is not the case order will do. We will add tour q. So cute add. New pier. Add descent. Eggs. Add dissent why. Andrew to Mark this. Now we can. We can say for sure.

106
00:27:12,706 --> 00:27:27,686
This is a valid. X it doesn't Dixon different ways village will evaluate it right here. Or or i'm sorry here guys here we should have a a d g why not call women right here call i'm sorry guys.

107
00:27:28,216 --> 00:27:39,776
I disintegrated in toi now it is validating so. Now we have to add up the market as visited because we were selected here we have editor q. So. Visited.

108
00:27:40,906 --> 00:28:01,486
A d j. X and you're a d g r y. A call to. A true. Okay. This is our core algorithm. Do. We have disappear clause in the spiritual as we have to prepare it to a property is the first and second against this is a road this column.

109
00:28:01,996 --> 00:28:18,136
We have here does Davis function stick for parameter we abreu call then we have the disputed structure. And then we're adding our. Our given our current Illinois add to this a q promote will start or beavis algorithm and remarked as visited.

110
00:28:18,496 --> 00:28:36,916
The direction without you is not empty and inside your designated core algorithm. I'm so sorry guys i named dysfunction Davis. This is a b of his algorithm but he named this algorithm dysfunction Davis i'm so sorry let's send it to beavis Morgan.

111
00:28:37,246 --> 00:28:54,026
We could just change the name or to add this to replace bfs. No no it is okey i think. No let's run this good. We have the star wars will result. We traversed.

112
00:28:54,136 --> 00:29:06,245
This. A graph in bfs order whichever is dismayed tricks in nb of his order. I hope you've understood his great explanation and am against a sorry guys a for.

113
00:29:06,286 --> 00:29:20,716
This Davis. For naming these gifts because this is our beef is puncture. I hope you've understood this video explanation. Please please guys at Eve you aren't understanding this great explanation please.

114
00:29:21,046 --> 00:29:35,986
Oh please erie was this video make sure he understand his brolin if you have any issue post your question on the q and a forum this is a very very important problem with the same pattern with the same pattern we will solve a couple of problems in this.

115
00:29:36,321 --> 00:29:47,626
Intersection of discourse. A please make sure you understand as we do explanations and this algorithm before move to that mixed video. Thanks for watching this video.


@@@
1
00:00:00,720 --> 00:00:13,330
In the previous video we solved this problem using b of his algorithm. Now let's see how to solve this problem using dfs algorithm. In this opponent argument graph the graph can be disconnected.

2
00:00:13,590 --> 00:00:28,480
Or a pigment is graph zero one two. Something like this there is no aloof in this graph swift return false. If we're given this graph zero one two three and if we have.

3
00:00:29,610 --> 00:00:39,300
Zero one two three if we're given this graph after return true because described contents a cycle. Let's assume are given this graph and this addresses the list.

4
00:00:39,810 --> 00:00:51,030
In order to keep track the visited node are going to use visited billionaire elites grittier visited a brilliant array of size seven. This is our visited woollen area.

5
00:00:51,480 --> 00:01:09,250
This gap can be disconnected. This grab can be disconnected so all collaborative his function first four zero. Let's color differs function zero. There is no previous observer because we're starting at zero we can assume the previous is minus one let's call him a defense motion here dfs.

6
00:01:09,420 --> 00:01:26,890
Zero previous minus one. Let's explore the adjutant at descent is. One. First let's Mark this as visited. Since we choosed zero initially. Now let's explore at doesn't adjust and is one does on his visited know so let's Mark on as visited.

7
00:01:27,450 --> 00:01:39,360
And let's call our dysfunction. Out with one or the previous of order the previous have one that is zero. So we'll call this function and here the previous is zero.

8
00:01:39,870 --> 00:01:52,470
Now let's explore the descent of one. Zero at descent of one is zero. Does zero is visited yet zero is already visited. Since this is the ad just sent off one.

9
00:01:52,800 --> 00:02:12,690
Ad doesn't have one. Now let's check the previous of one that has zero previous is zero ad doesn't is zero. We're moving to one from zero. And from one we're moving to zero if we saw the previous is equal to the at just in the previous an ad doesn't at the sim.

10
00:02:13,020 --> 00:02:25,330
What it means. It. Means we have an ID in between these two nodes. This will not form a cycle so all just skip it. Let's expert the next adjutant oasis to.

11
00:02:26,430 --> 00:02:42,580
Twister next adjutant so let's. Let's choose this to hear. Dust we visited no. Two is not visited let's map two as. True. There is no leaped and for two d.

12
00:02:42,720 --> 00:02:56,650
Two what is the previous. One Joakim. Now for to let expert at descent up to the previous is on the ad descent is on when he's already visited and here is a previous an adolescent or the Simpson old skip.

13
00:02:57,000 --> 00:03:14,380
Now let's explore more there is no more i just. Leads back through one that is nowhere i just end up on leads back to zero. This number i just end up zero so we are done we we haven't found any cycle here we haven't found any cycle here so let's move to one.

14
00:03:14,700 --> 00:03:24,880
We call four zero now let's move to one. When he's already visited. Then four two three is also visited now for three now let's color differs function for three.

15
00:03:25,620 --> 00:03:36,400
There is no previous because we're starting it at three four dispersion so previous is. Minus one. That's clever differs function right here dfs three and the previous is minus one.

16
00:03:36,450 --> 00:03:51,510
Let's explore the add descent of three additional three is for agenda up three is four. That is what is visited. No central choose first three of the Mark three as visited so let's market as true.

17
00:03:51,960 --> 00:04:06,670
Let's exploit the adjutant of three additional three is for the sport is visited the previous offers three let's Mark four as visited because. We are processing now four so one color for action here dfs a previous.

18
00:04:06,810 --> 00:04:31,800
Is three and currently support for three. Now let's explore the Edison for. Three. Does three is visited we see trees already visited. Three is already visited not for four or did the previous offered three what is the adjutant tree the previous and the previous and Addison are the sim that means we have and is in between this two not three and four.

19
00:04:32,190 --> 00:04:43,500
There is no cycle for sure so olds keep it. Will just skiff will skiff. On the left. Now let's explore the next descent the next adjutant of four is five.

20
00:04:43,830 --> 00:04:57,210
Does five is visited no five is not visited so let's call our function. Out with five and the previous is four here the previous is poor. So cured of his function.

21
00:04:57,570 --> 00:05:12,700
Of five and previous four. Now let's Mark five as visited right here. Five. Now five is visited. Let's explore the ad descent of five the additional five is four.

22
00:05:13,650 --> 00:05:27,270
Does forties visited. We see that four is already visited. So let's check the previous of five previous is for adjacent is four so no problem. Even is in between this doughnut we can see here.

23
00:05:27,810 --> 00:05:40,630
In between the student we have and it so that not form a cycle. Let's explore the next. What is the mixed. Six does six is a visited. Know so let's market as visited.

24
00:05:40,830 --> 00:05:53,265
Let's call our Davis function with six and the previous year is five. So. We cannot call it. These four then. If the call with. Six and five. Pvc pipe currently six.

25
00:05:54,120 --> 00:06:08,020
Now let's explore the adjutant of six that history. Does three is visited does threes have is he visited years three is already visited. What does this means.

26
00:06:08,310 --> 00:06:22,110
Three is already visited. The ad just went off six three we can more from six to three and we see trees already visited. We're not visiting three wounded coming to three from six.

27
00:06:22,620 --> 00:06:36,070
Threes already visited it means that. Three is visited by another pet. We're not coming to three from six. Threes already visited. Now let's to the previous and add doesn't previous is five.

28
00:06:36,570 --> 00:06:55,270
And this ad sent is. Three dear not the sim. If we find out the ad just sent the ad just sent and previous are not the sim. It means that we are visiting three from another direction not from six to three.

29
00:06:56,010 --> 00:07:10,110
Since three is visited from another direction and here we try to move from six to three we cannot move to three because trees already visited. Since the previous and this doesn't is not the same we can see that.

30
00:07:10,440 --> 00:07:28,660
We have a cycle. We find out a cycle trees visited. Not from six. This is already visited nor transects from any other direction. So we can say that we have a cycle in our graph will immediately return true.

31
00:07:28,950 --> 00:07:42,910
Now let's implement our algorithm. First i'm going to grit. Bullion airy blend visited he called new boolean. We have number of nodes v so the sight of this woolen area is v.

32
00:07:44,430 --> 00:07:57,790
Now let's run our love. Our grub can be disconnected so for he and i called two zero i less than v i plus pledge. If i saw i is already visited Bernard eyes already visited.

33
00:07:58,320 --> 00:08:18,820
Let check here if visited i he called to a true eBay either not eyes already visited orland Colorado his function. If. An order is not visited. If i is not visited a Bernard is not visited only the uncle or Davis function when he created his will and editors air is filled with false by default.

34
00:08:19,530 --> 00:08:30,900
Now let's call here r Davis function dfs first hour given a distance list a d j then visited array then our current node and the previous is minus one and surely.

35
00:08:31,350 --> 00:08:43,660
If this function returns true. If the graph content cycle this function will return true if this function returns true will immediately read central. We don't have to check anymore.

36
00:08:44,100 --> 00:08:55,450
If this was never ridden true. Will return at the end fault that means the graph does not conduct any cycle so he will return false. Now let's implement our defense function.

37
00:08:55,920 --> 00:09:09,970
Public boolean return type is boolean d f as. The sponsored export parameter first autograph at distance list i just changed his name to graph. The never visited bullion array so bullion visited.

38
00:09:10,560 --> 00:09:26,130
Than our current node and parent. We'll call this dfs function. If the node is not visited. So let's Mark here. The nord as visitors have visited node a call to.

39
00:09:26,490 --> 00:09:41,260
True. Now let's explore all the Addison of discordant note so integer a d j of edition for descent. The ad descent of our current note. So graph dot git.

40
00:09:41,490 --> 00:09:59,499
Node. This loop will iterate da. This liberal illiterate the. Ad just sent nord of our current node. If we saw our current node. Is not visited ybor current node is not visited we'll call our devis function.

41
00:10:00,540 --> 00:10:17,447
If our adjacent node is not visited one call our defense function when colonel Davis wanted only Eve our adjutant nord is not visited so a graph visited then our current nord is adjutant and what is the parent already the previous up adjutant.

42
00:10:17,760 --> 00:10:36,492
The previous of adolescent easter car. Is the current node so here. Note. Here this note is the previous. If this function returns true if dysfunction regent true will immediately return true.

43
00:10:38,642 --> 00:10:51,822
Now right here i'm going to check if else if. Else if you pre saw. The ad just sent note is he calls to if the ad descent node. Is equal to the parent.

44
00:10:52,412 --> 00:11:03,272
Will just continue. We will just continue it means that for a current nor the ad doesn't and burnt are the same that means. For our current node and add descent we have.

45
00:11:03,632 --> 00:11:21,632
An edge. So that's not form a cycle. If we saw. Ad dissent is nautical to parent that means we have visited our ad dissent. From. Other direction so it will for sure have form a cycle so will return here.

46
00:11:22,262 --> 00:11:38,522
True. If this is different overloaded true it'll return true. And here i'm going to return fault at the end. If. This. If this statement is this used il tips admit nobody will know the true.

47
00:11:39,092 --> 00:11:52,272
Will written fault that means the graph does not contain any. Cycle this is our corral great. Let's run this good. First let's comp pilot. Compiled successfully.

48
00:11:53,342 --> 00:12:08,622
Now let's submit it. It passed all the disguises. I hope you've understood this great explanation. If you have any question guys post your question on the uniform thanks for watching this video.


@@@
1
00:00:00,480 --> 00:00:12,870
In the previous video we absorbed the sprawling. Detect cycle integrated graph using. D f 's algorithm. In this video we're going to solve this bowling using bfs algorithm.

2
00:00:13,260 --> 00:00:39,810
We cannot apply here during bfs algorithm we have to use. This algorithm. Gahanna. Algorithm. In order to detect cycle in a direct did a graph in a directed graph using beavis algorithm we have to use counts algorithm now let's see how to solve destroying his encounter algorithm before that we have to understand what is a topological sort.

3
00:00:40,290 --> 00:01:04,890
Capitalism the sort orcs only for. Dag. Or directed a cyclic graph. Every given this graph zero. One. Two. Then three. He forgive any graph something like this we see this is a direct it is cyclic graph this is a directed a cyclic graph.

4
00:01:05,370 --> 00:01:20,080
What is the topological sorting of this graph ot is a topological ordering. So what is. Top sort of this graph in short. If we are assume. Every single noord as a course.

5
00:01:20,130 --> 00:01:47,070
Zero the course one is a course to the course and three is a course. So here against see in order to take this course two-row. There is no pedagogy discourse there is no course record to indore discourse today so we can take discourse at the beginning there is no period it's on the left of zero will have all the course that is pretty good it's opposite or there is no brokerages so we can start at this.

6
00:01:47,490 --> 00:01:59,560
Node zero this is course zero there is no peerage it's what we started at zero then won the big widgets up one is zero we have years that we can add one right here what are the prerequisites of one.

7
00:01:59,820 --> 00:02:10,810
Zero we have here. Then do what is the prerogative of two that is one. What is a privilege of one that is zero. What is the pilgrimage it's up three that is to.

8
00:02:10,980 --> 00:02:28,110
Say big biggest of three is to be it's up to his one and the period graduates of one is zero so this is a valid topological ordering. We see that. We have in these stops at four knots the county calls to four.

9
00:02:28,740 --> 00:02:50,688
If. The given graph is a dag directed acyclic graph the grub does not contains a cycle if you find it valid topological ordering so all return false if we saw it we cannot find out invalid topological ordering what we will do will return true if we cannot find a valid topological already that means the graph contains.

10
00:02:50,940 --> 00:03:08,200
Cycle if a crop content cycle. We cannot find a topological. Sorting. For examples if we're given the scruff zero one. Two. Three. Let's add arrow symbol here.

11
00:03:08,880 --> 00:03:18,120
Let's assume are you in this graph. Can you tell me ot is the toppling of ordering of this graph. It started judo is it up you could it's up. What juries three.

12
00:03:18,720 --> 00:03:33,550
Retried restarted when we see the bigger budgets of one is zero. He bids start at two is it appear digits of two is. One. That bitter gadgets of three is too so we cannot start at any node.

13
00:03:33,720 --> 00:03:47,580
So there is no valid topological ordering for this graph. So what we will do will return true. If the topological ordering is not possible that means the graph contains a cycle so it will return true.

14
00:03:48,150 --> 00:03:59,940
Though let's see how to solve despoil him. In the next video we'll see how to find a topological ordering using dfs and b of his algorithm. In the next two videos.

15
00:04:00,300 --> 00:04:11,680
We'll talk about how to find out the topological ordering of a graph. Now let's see how to it cycle in a directed graph let's assume we're giving this graph.

16
00:04:11,730 --> 00:04:24,040
This graph is resented using this address hence the list we're going to use this. Guidance. Algorithm. In gowns algorithm first thing what we'll do we'll create.

17
00:04:24,360 --> 00:04:40,530
An airy. The name of this era is in degree. In degree. We have here. Total we have your total nine note so let's create an array of size nine. This is our in degree erie.

18
00:04:41,010 --> 00:04:56,460
Of sight. Nine. Note let's find out the number of aegis coming to node zero. We see there is no ages that is coming to this node zero so in degree is zero for this node zero.

19
00:04:56,970 --> 00:05:24,474
An offer on we see that. Too is is are coming to this not so in degree is two for one then for two. We see that. Our one ages is coming to two so in degrees one for three on ages is coming two three four four two eight is coming to a degree too then for five when he does come being four six we see one ages coming and four seven one is is.

20
00:05:24,930 --> 00:05:40,093
At one is coming to. A dis seven one is coming to seventeen degrees wanting for eight here we see again. One is coming to eight so in degree. Or so we find out this in degree and airy.

21
00:05:40,440 --> 00:06:00,510
Now let's great here a. At a structure and all have a count. Count available. Here our goal is to find out the number of note number of nodes we can have in our topological ordering if we saw the number of nodes we we have in our top sort is he called for the.

22
00:06:00,930 --> 00:06:16,270
Eagles to the number of nodes we have in the given graph that means the topological sort the topological sorting is valid. Let's check that we don't need to wouldn't need to compute the topological sorting all just compute the count.

23
00:06:16,860 --> 00:06:31,860
If we saw county's goals too given that we can return. False because. If we have a valid topological ordering here canticles to. In this. In this graph we have nine nodes and if we find that canticles to nine.

24
00:06:32,430 --> 00:06:45,790
That means. Our count is equal to. The if this condition is to eBay count as a calls to the number of notes we have. That means invalid topological ordering so we have to return false.

25
00:06:46,800 --> 00:06:59,770
Initially we have county gods to zero now let's iterate over this area let's find out the noise higher in degree is zero we have only one note that zero had in degree Israel it's added to the queue.

26
00:07:00,090 --> 00:07:11,940
Now what are going to do. We're going to remove the front one will remove the front that means we find it on note we can add this note one in topological ordering so let's assume this is our top sort.

27
00:07:12,480 --> 00:07:25,110
This is our drop. Sort list. This is going to be a top thirty list. So first removed zero let's add in our top sort. We just need discount would only disturb or just for the sake of understanding unjust.

28
00:07:25,440 --> 00:07:38,670
Adding here to stop cert. The hair canticles don't want we just removed. The nord on. That mint we have on notice in our topological sorting. Now let's find the ad descent of zero the adjustment of zero.

29
00:07:39,090 --> 00:08:01,240
Is one we see that. We have in degree of one. Is to the in degree of honesty to is this coming to this. Nerd one. So this is one pill widgets we already solved this he already added in our top sort so let's just discard it we have just only.

30
00:08:01,470 --> 00:08:13,830
One it is it is coming to one so it will just. Decrease here we just discovered this h because we have already solved that. No we see that the valley's one this is not.

31
00:08:14,160 --> 00:08:34,090
Zero and we see except. This inuit zero. There is no in degree. There is no in degree which is zero. It clearly tells us that that. For this given graph we don't have a valid topological sorting.

32
00:08:34,200 --> 00:08:46,284
At this point we can say. We don't have invalid topological sorting. You betrayed was started this one we cannot because forestry up to. Four step to.

33
00:08:46,740 --> 00:09:00,340
Solve this is the first step to solve this. Epic wanted your course every single note as course in order to take this hypnotic six. In order take six hundred x eight in orthotics Ada predict Sarah erotic sooner protect six.

34
00:09:00,510 --> 00:09:16,810
So this is not possible. We cannot start at any note in here we see that we cannot start at any node. We just solved this. At this lord this is a pretty good instead of one.

35
00:09:17,310 --> 00:09:28,500
So we can say clearly that for this given graph we don't. Have a valid topological ordering we have county goals to one but we should have county goals to v.

36
00:09:28,830 --> 00:09:38,580
O wishes nine be the number of nodes. Let's assume we're given this graph something like this. Let's assume we're given this graph and indeed regards to.

37
00:09:38,940 --> 00:09:49,380
This Eric. Let's grid here q and let's iterate our in degree and let's add all the nod which is having integrity we have only one node that is one. It's great here.

38
00:09:49,923 --> 00:10:02,220
Our top sort list. Will not credit officer just versa Gabon has done i'm just adding here will have to stick count variable in the count widow withstood the number of nord we having the double optical sorting.

39
00:10:02,610 --> 00:10:12,570
Let's remove here one. Because there is no peerages of one we can enroll discourse that is no begrudge it. So let's add it in your top sort outlet count our.

40
00:10:12,900 --> 00:10:31,518
Let's increase our count from zero to one. Expert i just send off one that is too. Into Europe to is indeed up to his. Two. We've already salt these pretty good it's so against it out we have one bidder gadgets up to because disputed widget has been stopped.

41
00:10:32,028 --> 00:10:47,368
Now we see that. Accept this juror there is no zero. There is no you're in degree judo. Old in degree having one so he cannot start at any note. We seek articles drawn but rib number of node five.

42
00:10:47,808 --> 00:11:05,298
Let's assume we're given this graph and dinner in degree area let's. Compute are in degree. Zero. It has no incoming h c so in degree zero for one we have only one incoming it for two we have to incoming it then for three we have an incoming h.

43
00:11:05,658 --> 00:11:18,842
No let's great here our recutita structure in the queue let store all the north having individual so we have only one node zero and illustrated over top sort and we have a comment count article as to initially.

44
00:11:19,368 --> 00:11:33,528
Digital. Remove this so let's add it to drop sort and county goldstone on one. There is no pedigree digits of zero so we can started simply. No let's exploit the adjutant one and three for one.

45
00:11:33,858 --> 00:11:45,058
Let's. Decrease in degree from. One to zero. No. There is no begrudges to have already added in hour. A job search so there is no pettigrew jetzt of one.

46
00:11:45,108 --> 00:12:05,478
Now for three. We see that. We have one let's decrease it to. Zero. We just substructure one to get here to reach Europe seem to get first this wonderful added in our queue then irrigate sudo will add it in our queue so lead a edit here the note itself so here we see that for.

47
00:12:05,898 --> 00:12:16,768
Retreated is no begrudge it's because we have already added to begrudge it's in our list. Note we can see point disappointed is nobody who didst of one other be reduced is already solved only result.

48
00:12:17,328 --> 00:12:28,068
For three years oil. Know little different from orc you would get one let's add running an upset saw canticles to two. No let's explode the ad to send a descent of.

49
00:12:28,488 --> 00:12:50,158
Our one is two so let's decrease. We get one now for no till we have only one. Peerage it so we can just. Discard it. So we just removed is because we have already solved we have already sought what we have generous in degree to one and now it means that we have one will be crickets.

50
00:12:50,628 --> 00:13:01,818
So i think to do let's hope the next. That is three. There isn't privileges of three. We have the note three let's dream of it let's added our. Top sort and let's increased account.

51
00:13:02,358 --> 00:13:18,198
Let's. Find out the adjutant that is too. This note. Is Bucharest of does not do. So we saw we have already added in our top search so old discarded so no our beluga distort two is zero so let's add two here.

52
00:13:18,768 --> 00:13:30,108
We'll add the nord in our queue only and only if the node. Has been widgets zero. Our. Begins to the in degree judo. So we are done that is nowhere at dissent.

53
00:13:30,528 --> 00:13:43,948
Now let's remove to. A stream of toilet added here. That is our current county goats before. We get this drop sort beget disrupts art and we get candy-coated for now we see there is numerous descent opto.

54
00:13:44,508 --> 00:13:55,068
So what are going to do we're going to chick does canticles to the number of note was accountable to the number of note. V chronicles two four and number of rewards to force a troll.

55
00:13:55,518 --> 00:14:06,198
It means that. We are invalid or political sort that means we have no cycle solely written foot. This is our core algorithm i hope you have understood this way too extreme edition.

56
00:14:06,738 --> 00:14:17,128
This is called god's algorithm. Now let's implement this algorithm. Discussion does not exist on liquid you can practice discussion on geeks for geeks.

57
00:14:17,238 --> 00:14:33,828
Now let's implement our algorithm. First i'm going to create in degree erie. So int. In degree. In degree equates to new int the sight of this erie is the number of notes we have so v.

58
00:14:34,188 --> 00:14:56,968
Vs the number of notes. No let's compute our in degree erie. So far let's iterate over our ad decency list. And to copy this. And here. List. Are we can see this is in a list of this adjutant George's treating that so e d j.

59
00:14:57,438 --> 00:15:18,238
Now let's look for int. Dot note. And nord enlist. Let's compute our. In degree. So in. In degree. Note plus but this is a symbol. This is a simple look to construct our industry.

60
00:15:18,288 --> 00:15:38,658
As something like this if we have. Zero one two. Then one. Three. Two or. Two three. So for this nerd one we see. The. Incoming is to this one only one nodes for this nor do is that we have here.

61
00:15:39,138 --> 00:15:51,978
Two and here we have two so the indicator incoming is two two is two and so on something like this. So we computed our in degree erie. No let's great qt destructor the cute little store in deja.

62
00:15:52,368 --> 00:16:06,798
Q integer. I q. E calls to new link list. Now let's find out. The indignity zero. Let's iterate our in degrees so far and i caught the zero i less than.

63
00:16:07,158 --> 00:16:25,798
In degree i plus blatche. When iterated let's call it v. V for note. Oregon also see this not. Even in retort every one solid justice to not. Offer a bitter naming convention.

64
00:16:26,508 --> 00:16:40,188
Know and we'll find out if. The current node ha he has integrity that will add that to the queue. So. In degree for a current node. If. If in duties it goes through to one at that not.

65
00:16:40,488 --> 00:16:56,448
In our queue so qdoba add node. This is our. Love. To find it all the node with integral zero. If we have a node with indeed digital that means there is no pedigree just wanted not against start at that node.

66
00:16:56,778 --> 00:17:11,428
Now let's earn our way out of your oil queue is not empty while queue is not empty. Let's run this loaf. Let's find out would. Outlets find out the front.

67
00:17:11,658 --> 00:17:25,288
The front so let's. Call it temp temp he called to queue dot pull. August rim of the tenth are the snood let's call it current for a better naming convention.

68
00:17:26,448 --> 00:17:42,738
Now hear. What i'm going to do. I'm going to eater it and when either it or the ad descent of current. The ad descent of kind let's iterate so far. In teacher adjusts and let's call it neighbor n b our.

69
00:17:43,368 --> 00:18:04,518
Neighbor saw a d g dot get a digi dot get current. Or just iterating. Our ad does it or just. Iterating the ad to sit. And hear. If we. If we saw. Fasting hear it here first thing we have to.

70
00:18:05,058 --> 00:18:17,898
We have to. Decrease the in degree. May have to decrease the industry because. We are. Finding out we are finding out the neighbors the neighbors of our current nord.

71
00:18:18,528 --> 00:18:30,598
The current node is already resolved there is. No political just one of the current node. So the. Adopt. One produced one begrudges has been solved. That's what we have to decrease.

72
00:18:31,038 --> 00:18:46,248
So so. Here's what i'm gonna do i'm going to see in degree. In b r. Minus minus. Or just subtracting one. No i'm going to shake. If we saw in degree in beer.

73
00:18:46,548 --> 00:19:23,878
He calls to jiro only did he add that in our q q don't add. In b or. Will just add that to our cue. Quinoa done with this love what will you do do. We will here just increase our account and who need a counter variable your county calls due to the number of nodes we have in the topple as a gold sorting list we're not creating the list or just give tracking the number of new rehab even removed the front will add that to the our to do list but he will keep dragging the count.

74
00:19:24,048 --> 00:19:42,388
It means that if you find it ignored that means we have sold that node we can add that nord simply in your top sort or just increasing here count. When constructing our topological sort list or at the end what i'm gonna do i'm going to check if count is equal to the number of nodes we have.

75
00:19:43,008 --> 00:19:52,728
We have here the number of node v. Mr count is equal to v that into her valid topological asserting that means there is no cycle script written false.

76
00:19:53,148 --> 00:20:07,248
Arteries would have to do will return true that means there is a cycle. In our. In our graph misses our algorithm this is called cancel algorithm. The game hens guidance algorithm i didn't.

77
00:20:07,638 --> 00:20:19,828
Ignore or is the perfect pronunciation of this a cat hence our gowns i dunno. Don't let's compile. Our code. If we found something wrong we'll fix that.

78
00:20:20,796 --> 00:20:49,336
Here we see in degree am so sorry this is Eric Sawyer should have lint. Now let's run it. Compilation completed. Now let's admit it. Alright accepted all dod test cases passed.

79
00:20:50,406 --> 00:21:00,226
Who have you understood how to solve this problem if you guys have any questions post your question on the cuny forum. Thanks for watching this video also in the next video.


@@@
1
00:00:00,960 --> 00:00:14,190
Welcome back to this video in this video we're going to solve this coding interview question detect cycle in a directed graph. In this problem we're given a directed graph.

2
00:00:14,700 --> 00:00:27,900
The graph can be disconnected. For examples effort given this graph we have to check whether graph contains a cycle or not if the graph contains cycle we have to return true.

3
00:00:28,230 --> 00:00:38,710
If the graph does not contain cycle after return false for this given graph we see that here we have a cycle so we have to return true for this given graph.

4
00:00:39,180 --> 00:00:53,890
In this video we're going to solve this problem using dfs algorithm. We already solved a problem how to detect cycle in and and directed graph but this time the graph is a directed graph.

5
00:00:54,090 --> 00:01:05,890
The algorithm we used for cycle detection in our directed graph is is not similar to this if we apply that concept here. Will get a wrong answer. Let me show you why.

6
00:01:06,720 --> 00:01:20,950
Even start from the nord zero. First we ignored zero then one. Then two. Then three. Then four wishing for his visitors oil back to two then we'll up to five.

7
00:01:21,630 --> 00:01:39,580
Oh let's add here for leads back to two and let's add five. From five if he tried him up to four ratio for his already visited and wishing for his already visited and in another pet in this path and here we see in this bed we again encountered four.

8
00:01:39,630 --> 00:01:57,540
Des this mix is cycle. Does this brochure describes poor ms cycle know so we cannot region through here so we cannot apply the algorithm we used the dfs algorithm we used in cycle deduction for and directed graph.

9
00:01:58,020 --> 00:02:13,420
Now let's see how to solve the stolen using dfs algorithm. In this way you are going to talk about a heart rate cycle in a directed graph using. D f s algorithm in the next video we'll talk about how Riddick cycle using b of his algorithm.

10
00:02:13,800 --> 00:02:28,620
To solve this tall im using dfs algorithm we're going to use to bullion erie. One erie to keep track at the visit added note. To keep trunk the visited node will use visited or him and also we you.

11
00:02:29,160 --> 00:02:46,990
We will use Davis visited and it will use this to boolean array let's greatest to erie here we have to nine nodes. We have these two bullion arab visited and df is visited by default these two array are filled with false.

12
00:02:47,640 --> 00:02:56,880
Now organise start from node zero because our group can be disconnected first organ chick does juries visit know so let's call our differs function with zero.

13
00:02:57,240 --> 00:03:09,960
So you'd be called out different function with this node zero. We have here there's no journal let's Mark this node. As visited inner visited erie and in our Dev has visited erie.

14
00:03:10,290 --> 00:03:29,520
We marked this as true. Now let's expert adjutant of zero let's explore the adjutant of this node zero. We have only one adjutant of this node zero. So let's choose your one does one is visited know will chick does on his visited inner visited area are not.

15
00:03:30,120 --> 00:03:40,470
We one is not visited so let's Mark that as visited. This Mark here and let's collaborative his function. So it'd be color difference function let expert at the center of one that is to.

16
00:03:40,800 --> 00:03:53,370
Let glover. F let's add air to wizardry has not visited all taken is visited erie so let's market as two and here as well let's market as true. Now let's call.

17
00:03:53,940 --> 00:04:06,030
With this. Note since it's not is not visited. At this point is notice visited but when the cold. With the neighbors of one we see the note was not visited now let's call.

18
00:04:06,600 --> 00:04:17,184
A function with the snort so let's expert at descent of this not. True that dissent is three and five. So first three ministries visited no let's market as visited.

19
00:04:17,340 --> 00:04:29,980
Let's market as visitor to it at this point juror's visited one is visited two is visited threes visited. Let's market here as well. Now let's call our defense function with the ad descent of.

20
00:04:30,510 --> 00:04:47,670
With this load we get to descent for let's explore the Addison for. So we get four does what is visited note let's Mark here as true here as true. Is there any Edison of four note there is no i just sent off for know what we're going to do we're going to Mark.

21
00:04:48,030 --> 00:05:01,830
In our d of his visited erie. That. Status of four. Is unvisited. The status of four is now unvisited in his dia of his visited array now Israel is no fault.

22
00:05:02,220 --> 00:05:16,510
This is not visited now. We moved. In this direction in this direction we see that. We vis is it all the norte using or too airy visited and Davis visited.

23
00:05:16,710 --> 00:05:26,640
Now when he process this. Up when he process this will just. Since there is no added scent of four will back will back to the snow tree and will make this.

24
00:05:27,150 --> 00:05:39,040
Note four as unvisited. We see from zero visited for that is not cycled let's back to three is Darren at this end up three no so let's market as fault as well.

25
00:05:39,210 --> 00:05:51,280
Then leads back to two is there any adjutant he has five so let's move to five. That's why we visited know lets marketers visited and here as well let's market as visit fyp.

26
00:05:51,450 --> 00:06:03,750
Is there any adjusting to five years which is four. Does what is visited. In here receive four is visited four is already visited. No order going to do ergonomic does.

27
00:06:04,140 --> 00:06:18,990
Since this fort is visited in this airy and here in this era four is not visited worked does this means. It means that we already encountered four in our Davis erie we already encountered four.

28
00:06:19,440 --> 00:06:30,600
Will do nothing year since this is. Since this note four is not visited enormity of his visited erie. It means that we have already visited four when we visited for.

29
00:06:31,080 --> 00:06:41,100
By visiting for there is no solution. That means we haven't found any cycle my visited. By visiting this not for so will do nothing just escape just escape it.

30
00:06:41,610 --> 00:06:50,400
Leads back to five analytics but Addison it is no address and. So leads back to two is there any i just didn't know let's back to one is that anyone i just didn't know.

31
00:06:50,940 --> 00:07:05,010
So when you back oh since you're done visiting five there is no cycle will market as fault. Great. Do not found any cycle by visiting this note. Five right is Margaret asphalt.

32
00:07:05,400 --> 00:07:20,490
It's better to. Let the market as false. Leads back to one let's market as false. Leads back but you don't let the market asphalt. What does this means it means that he ripped through and hilaria fault what does this mean it means that.

33
00:07:20,910 --> 00:07:34,570
A by a bee sting old adjutant of zero by calling our defense function with zero there is no cycle since you have your fault. By calling our def as we do and there is no cycle and so on up to five.

34
00:07:35,490 --> 00:07:44,400
So we are done with her first function call so ardent we are done with the first Davis function call now or grub when we disconnected so what i'm going to do now.

35
00:07:44,790 --> 00:07:54,870
I'm going to call with one but only one is visited then let's try to call our differs functionally to do is alter visited let's try to call the three three is also visited in our visited area.

36
00:07:55,530 --> 00:08:08,890
For his ultra visited five is ultra visited. No six six is not visited so let's call a dysfunction with six. Let's Mark six has visited in here and right here as well.

37
00:08:09,180 --> 00:08:21,720
Let's extra the adjutant up seeks to address end up sixes on end. Eat. If we try to choose your one and in here we see one is visited but at the corresponding position fault it means that we have all the rituals to one.

38
00:08:22,260 --> 00:08:35,260
By choosing one by moving through this node one there is no cycle there is no cycle. So just escape it. Let's move to the next adjutant of six the next adolescent is eight.

39
00:08:35,377 --> 00:08:47,770
It's one of the next adjutant ease. At eight. Does eight is visited. Now lets marketers visited this market as visited. Now let's explore the just of a which is seven.

40
00:08:47,820 --> 00:09:03,280
The seventies visited no less Margaret. Visited here as well. Now let's explore the ad descent of Simon that descent of seventy six with it we started at six we started at six and we encountered six.

41
00:09:03,390 --> 00:09:29,095
In our dfs call. In a certainty of asthma in our Davis call we started at six. We encountered six. So what does this means it means that we have a cycle for sure that secured the velo in our visited we see six as visited so let's shake in our Davis this is also visited what does this mean it means that we have a cycle for sure since we have your true.

42
00:09:29,220 --> 00:09:44,670
And regularly saw that we have here is cycle so what he will do will immediately return true. Discussion does not exist on liquid. You can practice discussion on geeks for geeks now let's implement our algorithm first onward grid to boolean array.

43
00:09:45,240 --> 00:10:10,798
Visited. Equals to new bullion. V vs the number of notes. Then bullion d f is. Visited. New. Boolean. V. Can be disconnected so let's. Eat rid. Of all the north end i called the euro i less than v i plus blech.

44
00:10:11,268 --> 00:10:31,338
Episode or recurrent ignored or current node is. Is unvisited one cannot give his function with that node. So visited i. He called to false. Ebro current node is not visited when quantum differs function sir Davis and give his wanting first let's provide at distance list a digit then.

45
00:10:31,668 --> 00:10:45,088
Visited erie then dfs visited erie then our current node. Dysfunction written true at any time. Will return immediately true. That means the grub contents a cycle.

46
00:10:45,318 --> 00:10:58,578
Of dysfunction never return true. Will. Are written at the end. Fault. Let's implement this function right here. Public boolean. Let's skim over this publicly we don't need this.

47
00:10:58,998 --> 00:11:12,568
You didn't i volume then dfs. First hour add to this list let's copy this. And and when to best adhere. The number second parameter is visited so bullion.

48
00:11:12,948 --> 00:11:26,818
Visited than bullion. Idea of his visited and in our current note. This is your current node we'll call this function only if our current node is unvisited.

49
00:11:28,968 --> 00:11:49,968
Not here and when i'm Mark or current not as visited to visited. Nord he caused a troll and dfs. Visited. Nord he called to. True. In this visited area where you trained the visited nor an inner divas visited area ukip tracking da and the nerd that is visited that is.

50
00:11:50,388 --> 00:12:02,988
In our current path in her decision tree in our decision tree in the current path. Now let's run our love. Over the neighbors of our given note. So let's iterate.

51
00:12:03,318 --> 00:12:20,658
For. In teacher neighbor in be our neighbor or our current node node the parameter here we have ignored. So a d j dot gate. Node. The. Adjutant or the neighbors of our current note.

52
00:12:21,048 --> 00:12:36,118
Let's iterate over that. Is to our current neighbor is not visited so if visited in b r. E calls to false if our. Current neighbor is not visited. What will it do.

53
00:12:36,348 --> 00:12:50,938
We we will call our defense function dfs first adjacency list then our visited erie the number df is visited already in our current node then nbr disorder where current note we have to call with this note.

54
00:12:51,498 --> 00:13:04,248
If dysfunction. Reading ever if dysfunction ridden true ever will return to immediately so. If dysfunction return true will return true immediately. That means Don grub contents a cycle.

55
00:13:04,638 --> 00:13:24,828
Ales Eve. Eve our current. Actually not here. If we saw our current node is. Visited. And if the current node. In our. In our d of his visited path so the logic here if d f s.

56
00:13:25,188 --> 00:13:41,778
Visited. Note not actually note here to protect the neighbor. In beer. If we saw a recurrent neighbor. That is that is that he alright encountered in our path in our current path up our decision tree.

57
00:13:42,168 --> 00:13:59,128
In our current path. So. We'll get her true. If we get true. That means Eve the neighbor is already visited in our current battery encountered again that means we have a cycle so we'll return here true immediately.

58
00:13:59,718 --> 00:14:10,378
If our current neighbor is not already encountered in our current path of decision tree. That means. We'd have drew out we have to try it with other directions.

59
00:14:10,848 --> 00:14:21,558
The current neighbor can be a part of a loaf we don't know we have to i tried it in another direction. If we saw in our current path a poor decision tree.

60
00:14:21,978 --> 00:14:32,418
We never encountered the same note twice. If we never encountered this note before in our current path of. Recursion call tree or enter a decision tree.

61
00:14:32,748 --> 00:14:50,928
That means. We have to try that with the other direction. So first let's Mark our current node as visited century are. Done with all the neighbors when you're done all the neighbors and no cycle so we have to Mark our current note as unvisited so dfs visited a call to.

62
00:14:51,288 --> 00:15:05,488
Our nord. Davis visited naughty calls to false and only return false at the end. If this is the maneuverability true. If do return false at the end. This is our core algorithm.

63
00:15:05,568 --> 00:15:18,538
I hope you've understood his real explanation discussion exist on geeks for geeks discussion does not exist on liquid. Let's compile our record. Compilation completed let's admit it.

64
00:15:19,368 --> 00:15:39,808
Let's see if it passed all the test cases. Alright we see it passed all the test cases successfully. Be absolved this column. If you guys have any questions post your question on the q and a forum thanks for watching this video.


@@@
1
00:00:00,510 --> 00:00:15,840
Welcome to this video in this video or go into a sole discouraging into recursion to political sorting. Using. D f s algorithm. In the previous video we solved this problem using current algorithm.

2
00:00:16,170 --> 00:00:34,180
In this. Video let's see how to solve the astronomer using dfs al agreed on. In this problem we're given directed a cyclic graph you have to find out that topological sorting we know that topological sorting only work for.

3
00:00:34,950 --> 00:00:51,580
Directed acyclic graph. Let's se will even this graph if we're given this graph what is the. Topological sorting of this graph. There can be many different topological sorting of a given graph.

4
00:00:52,200 --> 00:01:11,230
Let's find out. The topological sorting of this given graph. Of. Sort. If we consider every single node as course for this nord five. And for this not for what we see there is no pyrrhic rejects there is no Peter greeted.

5
00:01:12,150 --> 00:01:26,320
For judo we see that we have to be rigid four and five. Which there is no pretty widget for four so let's. Enroll for. Then we can Andrew five there is no period of five.

6
00:01:27,390 --> 00:01:40,870
Then here we have to. In order to enrol to we have to first enroll five. We already enrolled five so now we can enrol to know we can enroll three. Though he can enrol one.

7
00:01:41,550 --> 00:01:51,540
Then we can enroll zero there can be many different topological ordering epicurean craft. There can be many different. Topple article ordering up a given graph.

8
00:01:52,050 --> 00:02:03,940
That's different on the implementation of the algorithm. We have to written. One of the valid topological ordering. So what does given graph this is a valid topological ordering.

9
00:02:04,410 --> 00:02:17,820
Now for this graph let's find out that topological ordering. Or. Topological sorting. Sort top sort for this graph again started zero there is no period of durham.

10
00:02:18,390 --> 00:02:39,000
Then we see one we have one period of. One that is zero. Net he already enrolled. Now let's. Andrew one then again Andrew to. Drink and Andrew three. We have to be regretted of three two and zero we have your zero and we have to on the limit of three so he can handle three here.

11
00:02:39,450 --> 00:02:50,080
So for this given graffiti written these droplets Michael. Sorting. I hope you've understood or instability gold sorting now let's see how to solve this problem.

12
00:02:50,700 --> 00:03:03,190
Let's assume we're given these a directed a slightly gruff this grub is represented using this address list. In order to keep track the visited nor do we have to use visited a boolean array.

13
00:03:03,420 --> 00:03:14,230
This is where drops of oil store. The topological sorting of the given graph. This drop can be disconnected so first let's color different function for geno.

14
00:03:14,670 --> 00:03:35,620
Now let's. Mark. Zero as a visited. This nord. Doodle. This note during the pedigree did opt to course but this note has no p greeted. This nord zero is pedigreed off to coarse.

15
00:03:36,120 --> 00:03:52,920
Or to not defend Ontario. After de in this course zero we can take two course that is one and three. For this not one. This note is puget off one node that is does not this notice period of one node.

16
00:03:53,490 --> 00:04:06,580
Does not his period of zero not. Going to institute judo years we can insert here because there is no pilger diet of zero. Can insert your doodle know because.

17
00:04:06,930 --> 00:04:16,350
After taking this course we can take the course one and three. So we cannot insert zero at the end. Can insert your one no he cannot in such you're one because.

18
00:04:16,740 --> 00:04:30,390
After taking one. After taking one. We he can take the course too. Can he have yet to know we cannot have two at the end because. After taking this course taught we have to take the course.

19
00:04:30,900 --> 00:04:49,570
At three because three is a Pinot grigio of a tree. Henry. Instead he had three years we can because. There is no note. That is depend on three. That means this node three is not puget of of any other note.

20
00:04:50,010 --> 00:05:00,120
So here again into three. Ordered insert in our top sort list. In reverse order now let's call a different function for digital so we call for you don't we remark as two.

21
00:05:00,720 --> 00:05:19,390
Will add. A particular. Course to word top sort list. If we saw. The course is not the degree did of. Any other course. Let's call here are function differs function recursively one let's Mark on as.

22
00:05:19,808 --> 00:05:35,320
Visited. One course different on one. That means discourse is predicated of one course so he cannot add one. Then the ad does end up on is to. Let Mark to as visited.

23
00:05:35,910 --> 00:05:47,620
Discourse is prerequisite of one course so we cannot add discourse. In our top sort. Notes three. Let's Mark three as visited. Note we see that. Three.

24
00:05:47,850 --> 00:06:01,180
Of this note three three is not pedagogy of any other course so we can print three at the end. Since this is not a peak rigid of any other course so we can add here.

25
00:06:01,530 --> 00:06:15,400
We enrolled discourse we enrolled discourse so we can discard disease and we can discard this is now. Since we have added three at the end. If we adhere to that's okay.

26
00:06:15,480 --> 00:06:27,550
That's because. Two is a period of a three against him. Since we have added he had three we can apply this with zero we can i did this with a one. Why is that.

27
00:06:28,530 --> 00:06:44,768
This is because. We enrolled discourse tree. Now we can see discourse is not pedagogy of any other course since we have enroll discourse. Discourse is not pedagogy of any other course so we can enroll discourse.

28
00:06:45,450 --> 00:06:58,480
Here let's try to explore more there is no more Addison up to. So we can add to right here. Seen to this note is not. Bigoted of any other note we added to.

29
00:06:58,620 --> 00:07:14,410
Scenery added to in our top sort list. Does not is. Not predicated of any other note. We saw that this new that was. The period of one course. We enrolled that course so.

30
00:07:14,790 --> 00:07:29,760
No there is. No. Course that is different on this course so what we have here zero. There is no more address and we can add here one. Since we have add wanting to adopt sort so we can discard this h so.

31
00:07:30,300 --> 00:07:46,630
This vela become zero. There is no more edges and actually. Sent with find out. The Isabella doodle that means. Discourse is not puget of any other course so let's add a zero in our top sort.

32
00:07:47,430 --> 00:07:59,140
To find it our. Topological sorting list this is our valley topological sorting of this graph. There might be some portion are some note that is unvisited.

33
00:07:59,640 --> 00:08:07,440
For that we have the quality of his function we called for jury then for one one is visited we can't call then four two two is also visited three is also visited.

34
00:08:08,040 --> 00:08:18,730
So at the end oldest written desktop cyclist forbidden understanding let's take another example. Let's assume we're given this. Directed a cyclic graph.

35
00:08:19,080 --> 00:08:35,590
First let's find the defendant not. Two hundred different on five. Is your end at two. Zero no depend on zero to not depend on forgery and one. That will not depend on one or not depend on three or depend on to.

36
00:08:35,880 --> 00:08:47,880
To give trump the visited nord. We're going to use this. Bullion visited airy and old stood out to political. Asserting right here. Can insert your jira at the first position know.

37
00:08:48,480 --> 00:09:02,590
Are going to feel this topological sort from the right. If we insert here. Of this note should. I have no period it's it is not has been gritted or Kennedy said it right here.

38
00:09:03,270 --> 00:09:14,950
He put insert the nord. A right here in such a note right here at the end. If this note is not big is it of any other node that means if. There is none or depend on this node.

39
00:09:15,210 --> 00:09:26,590
That we're inserting here. If there is no node that is depending on this note we can insert here. Now let's color differs function. The giving up can be disconnected.

40
00:09:27,420 --> 00:09:42,273
So let's call it a zero. Let's Mark. This astral. There is no adjutant of a zero. It means that. There is no not different on zero so we can insert at the end without any issue.

41
00:09:42,810 --> 00:09:55,500
Since you have inserted at the end. We can decrease this by one and we can decrease this by one. Note we can same. One would depend. On this note five that is two.

42
00:09:55,890 --> 00:10:08,382
One are different on this note for the disk one because we have already solved this. We have to put four and five on the laptop zero. If. Insulted you at the end.

43
00:10:08,942 --> 00:10:26,892
Four and five will be inserted on the lips for sure. So we don't have to worry about that. Now let's cannot function with a one. Let's Mark. As true. This not as a visited there is no ad descent up one.

44
00:10:27,392 --> 00:10:40,742
That means. There is no dead depend on this not once we can insert it right here without an issue. So you can discard this weekend discourteous though against him due to no depend on for and do not depend on.

45
00:10:41,162 --> 00:10:56,620
A tree. Because we have. We have enrolled dettori have added this in our double article shortlist. Now let's. Call a function with the note to. This note two has a decent three.

46
00:10:57,722 --> 00:11:10,992
First let's Mark two as visited and then leads Mark three as visited. The lead expert the others indoctrinated is on when is already visited when he's already visited let's expert the next Edison there is no etiquette.

47
00:11:11,612 --> 00:11:25,812
That means. These nord three there is no no that's different on three. So we can. Add right here. The nord depend on node tree is destroyed. So no problem we have on the right.

48
00:11:26,162 --> 00:11:41,142
We're just solving this problem in reversed order. So we have added in our list. So the speak em no zero. That is discourteous. No it means that. There is no course that is different onto.

49
00:11:41,402 --> 00:11:53,372
There is no more course. That is depending. On to. Let's ignore the next i just interpreter there is no more i just didn't. Know for two. Singer process too old i just end up too.

50
00:11:53,912 --> 00:12:08,552
At this point. All the north we have. In our top sort. That can depend on does not Twitter know that can depend on to. All the nodes on the right. Are into jobs that depend on two.

51
00:12:09,002 --> 00:12:19,062
There can be at least any and it can be at least one course that depend on too hard it can be the recorded statement onto. The problem. Now he can insert your simply too.

52
00:12:19,232 --> 00:12:36,972
So we can discuss this. Lit. Reduce it to zero. We are done by calling unfortunately too. Now let's call a function. With a three three is visited. So we can add quarter function then four four is not visited let's call our function with four.

53
00:12:37,112 --> 00:12:49,692
We see. That the singer is visited adjacent on is visited that means. At this point. This node for. This node for. His new package it up any other course.

54
00:12:50,102 --> 00:13:02,282
So we can see now. Zero core is different on four so we can insert right here we are an issue let's Mark. Let's Mark for us visited. Not let's call our function with five five is not.

55
00:13:02,702 --> 00:13:15,282
Visited let's call with five. The identifiable tourists visited. I just sent it off i was too is visited. So he can say you don't depend on five solid inserted a d.

56
00:13:15,542 --> 00:13:29,612
At this position so we find a disc top sort this is our properly logical sorting this is a valid topological sorting. Of the region does drop sort. One more important step here.

57
00:13:30,092 --> 00:13:46,272
At top sort or inserting from the end we're inserting from the variant first. We inserted here. The note three dinner inserted to the. One didn't hear a jiro so we find out this topological.

58
00:13:46,382 --> 00:13:57,122
Order three. But inserting from the int we get this topological ordering we can insert from the right we can insert from the right using your list but that will dicks.

59
00:13:57,452 --> 00:14:08,712
Of all ages the insertion old dicks. Off into complexity institute iep recruiters tabular structure fast if we insert three. Then insert two then one then zero.

60
00:14:08,762 --> 00:14:25,692
Then we can just pop promoter stack and then get added to a list. Zero one two three. Again. We can just walk from a stack then add to the first version the second version that version fault of fourth position and so on.

61
00:14:26,222 --> 00:14:41,532
It will fix. Over removing it all decks. Of on time complexity for adding a duel decks of one. Time complexity. To this will be. Efficient. Instead using list are going to use a stack.

62
00:14:41,822 --> 00:14:52,832
So three if you find a three uber add in your stack then two then one then zero. Then you can construct our list from this stack. Pretty easily by just removing zero.

63
00:14:53,222 --> 00:15:08,172
Then one then two. Then three. Is it how we can find it or topological. Ordering. Of. A given graph will he was a stack institute. That list now let's implement this algorithm.

64
00:15:09,332 --> 00:15:20,052
Now let's implement our algorithm first i'm going to create a boolean array visited he calls to new bullion the site is the number of nodes vs the number of notes.

65
00:15:21,422 --> 00:15:38,322
The grip can be disconnected. So let's run look for int i calls to. Zero i less than v i plus blatche. All tube the grid is tagged with a structural it's great here a stack in the stack will store in teacher.

66
00:15:38,462 --> 00:15:59,832
St as he can stag new. Stack. Instead using list we can use his stack to. A mic our pro. A pogrom efficient. No i'm going to check ybor current node i is not visited if our current node i is not visited we'll call our Davis function.

67
00:16:00,012 --> 00:16:15,402
I'm going to provide here or at distance at least. Then i'm going to provide our visited erie then stack in our current node. Queen regent we do with our graph will crit here top sort erie.

68
00:16:15,692 --> 00:16:28,722
On crit here top story lets the greatest absurd era here. Top sort here ooh store that topological sorting. New int aside v we have v notes. Know what i'm gonna do.

69
00:16:28,922 --> 00:16:45,122
I am good or do. I run a loaf. In icons to zero i list then. A v i plus pledge. Right inside here or i'm going to do. I'm going to insert into top sort by removing from the top of our stack that we.

70
00:16:45,452 --> 00:17:03,242
Assured you in that screen. Toward top sort i equals to. A stag dot a pop. And. In the next iteration the i will be increased. Mightiest loaf. When we're done we just love we will have all the element.

71
00:17:03,602 --> 00:17:21,822
Of our stag to this adopt sort. So he obtained all written our dove. A sword. Erie. That's already written but let's implement our Davis function. So urgent I've ease of white d of his.

72
00:17:21,932 --> 00:17:37,862
First hour add to cincy. List let's copied. Our add to censor list. Then our. Visited bullion airasia bullion. Bullion visited. Din able to provide our stay stag.

73
00:17:38,222 --> 00:18:02,682
Stag in danger. Indeed your stack in our current node node. No right inside here who are going to do organ to Mark our current note as visited so visited node he called to troll will call this function Davis only and I'll leave our current node is not visited.

74
00:18:03,182 --> 00:18:19,332
Now let's iterate over the add descent or the neighbor of our current node so integer in beer for neighbour. Ah e d g dot. Get note. This loop will iterate over the adjutant of our current node.

75
00:18:19,472 --> 00:18:37,022
Now let's check that. If our current node. N b r. Is not a v visited. Is not visited. On call on the function. Recursively will call and function recursively first add distance list then visited.

76
00:18:37,322 --> 00:18:52,502
Then our stack then. Our entered the current node is in beer. A recurring note. If we find out we have no more at dissent or if we are explored if we have expert all the ad dissent.

77
00:18:53,042 --> 00:19:12,122
That means for our current node for our current node. Just juvenile depend on recording shot. So whenever his dislike when he he'd dislike to year or or going to do organ to add the node and add the node in our stack so standard push.

78
00:19:12,632 --> 00:19:30,182
Our note. This is our core algorithm. I hope you understood this video explanation. This algorithm will takes time complexity off v plus Eve is the number of vortices the number of iss and space complexity is o of.

79
00:19:30,602 --> 00:19:42,672
A v or visa number of vertices. This problem does not exist only good you can practice this problem on gigs where gigs ks. Now let's compile our code.

80
00:19:45,692 --> 00:20:19,636
We have to add here static let add here static. Now let's run a record. We see compilation completed now let's submit it. All that is cases. Quoth you've understood this video explanation you have any question guys post your question on the cuny forum thanks for watching this video out you in the next.


@@@
1
00:00:00,600 --> 00:00:09,960
All come back to this video in this video or going to solve discouraging interview question topple as a gold searching. This is a very very important coding interview question.

2
00:00:10,440 --> 00:00:25,000
In this problem we are given directed a cyclic graph we have to find out the top illogical sorting of the given graph. We know that. Top political sorting org only for directed a cyclic graph.

3
00:00:25,350 --> 00:00:36,580
We're given to record a cyclic graph we have written the topological sorting of the graph. Were. Given directed exactly graphs that we don't have to worry about that cycle.

4
00:00:37,440 --> 00:00:48,670
No let's find out the topological sorting of this graph this is a directed a cyclic graph there is no cycle in this graph. Let's find out that topological sorting.

5
00:00:48,810 --> 00:01:03,810
Our top sort. Let's assume every single node of this graph is a course. We have your five inert Andrew discourse five there is no peerage it's. Hurry up dude what we did to incoming ages it means that.

6
00:01:04,200 --> 00:01:17,770
In order to enroll discourse do what we have in rule. Five and four. For discourse for which there is no peerage it's so again Andrew discourse without any bigots.

7
00:01:18,870 --> 00:01:28,260
In order to enrol one we have to first enrol for. Our ultimate enrolled three hundred enrolled three up to enrol to enter Andrew to have to Andrew first of five.

8
00:01:28,690 --> 00:01:41,920
Let's find out the topological sorting. So we can start with four. We can start with five then for. A first and we'll pick the smaller developed for. Four then five.

9
00:01:42,540 --> 00:01:55,720
Can i enrol no zero years we can enrol. Let's Andrew now zero. Because. We see that the bigger just observed four and five we have on the lip of zero so.

10
00:01:55,770 --> 00:02:06,720
In order to take zero we have different stick four. Or five then we can take zero. Then kennard Andrew two years we can because the pedagogy we have on the lipped so let's Andrew too.

11
00:02:07,110 --> 00:02:19,300
Can Andrew no three. Years you can have. The biggest up three school. Can and Andrew no one. Let's enroll here one. The beer gadgets up on his three so.

12
00:02:19,740 --> 00:02:33,000
We see that we entered all the courses this is. This is the valid topological. Sorting of this given graph. We may have many different double as a gold sorting up a given graph.

13
00:02:33,390 --> 00:02:50,962
We have to return any one of them. For this graph api assume all the notes. Are course. Then we can start with zero there is no pettigrew jetzt of a zero so the top sort for this given graph first jura.

14
00:02:51,420 --> 00:03:05,350
Then one three. And in order to Andrew two week we have general one and three we have on the left so this is a valid topological sorting. I hope you have understood or to stop allows the gold searching.

15
00:03:05,550 --> 00:03:26,400
Now let's see how to solve this problem. Using b f s algorithm. In the next video we'll see how to find out topological sorting of a given graph using dfs algorithm in this video organise solve this problem using b of his l rhythm in order to solve this problem using bfs algorithm we have to use.

16
00:03:26,730 --> 00:03:39,540
Guidance algorithm. Let's see how to solve this problem using cohens algorithm. Let's assume we're given these grab the destructor this graph is represented using this address in the list.

17
00:03:39,960 --> 00:03:54,340
We have to first find out that in degree erie. In in degree. Let's create our integral erie here we have two model six not so let's create. Our in degree erie of length six.

18
00:03:55,080 --> 00:04:13,060
Let's construct this in degree erie. First we have zero we have two incoming ages to zero so here we'll have a two. Then one. A four one we see two incoming edges so in degree two four two we have on incoming ages.

19
00:04:13,260 --> 00:04:30,270
When incoming eight so in degree one four three one incoming age. So in degree one. Then four four. There is no. Incoming ages. So. Integral euro and four five there is no incoming ages so in degree zero.

20
00:04:30,750 --> 00:04:44,470
No let's create a cute at a structure in our qt the structure wheels door. Then note the note that has in degree zero here have. Four and five which is having individual.

21
00:04:45,390 --> 00:04:55,890
After constructing this in degree erie will scan this area to find him the nod which is happy individual. Is too narrow to have a individual so let's.

22
00:04:56,280 --> 00:05:13,980
Add four and five in our queue. And we have to grit our. Topless gold sort our top sword erie. We have to create our drop sort array of size is six lit street here our top assert array.

23
00:05:14,550 --> 00:05:33,832
Of size six. Zero one. Two three four. Five. The sitch our. Top. Sort. Of array. Now first thing what are going to do or going to remove the front. The front is a four.

24
00:05:34,410 --> 00:05:48,430
When we removed front from q will add that in our tops out at the first position. Now let's find the ad descent of four at the center for a zero and one.

25
00:05:48,990 --> 00:06:03,420
At the centre for is zero and one. Now what are you going to do first jiro we're going to just. Have just decreased one. For the nodes zero it would decrease on what will get here.

26
00:06:03,810 --> 00:06:18,760
Will get here of one. So at this point we can assume that we have resolved eat the previous or the periods of zero has sobbed again say then we have only one pure good just one period just of zero.

27
00:06:19,170 --> 00:06:33,000
Since we have added inner drops at four. Now. Let's move to the next ad descent with his one. Now for one we see in degree to what i'm gonna do and going to decrease by one.

28
00:06:33,390 --> 00:06:49,120
Now we can see. The in degree of one reduces to one we solve this we have solved this we have here for. So at the spread we can see it in degree of one his record at this point one.

29
00:06:49,320 --> 00:07:12,820
The. Bdp rigid scores up on. Is only one now we have one course already we enrolled discourse for. So our Peter could just up the road and one. Reduces to one the bugle just of zero at this point one discourse one and for one the bugle just is and is not three.

30
00:07:14,070 --> 00:07:35,670
So we are done for for now let him have five. Removed five let's add five. Right here. Now let's expert at the center of five first judo the integral is one so let's reduce you get through the horny kid douro in degree will add that toric you so let's add a right here.

31
00:07:36,000 --> 00:07:50,250
The in degree of zero is zero. When we saw the in degree reduces to judo i will add that to our queue. So we added here as you'll. Know at this point Oregon c we can see.

32
00:07:50,580 --> 00:08:03,040
At this point we have only one. At this point we can say there is no bigger just of zero because. Two begrudges has been enrolled two-course enrolled so no problem.

33
00:08:03,330 --> 00:08:16,320
Or we can Andrew zero. Let him have to know. It to the next adjutant. The in the integrated forward to is one let's reduce to zero. Since discourse is enrolled so.

34
00:08:16,680 --> 00:08:30,810
There is no more a beluga just of two because course five is already enrolled. Right here. In the integrity rica zeros all at no two in our queue. We are done there is no more.

35
00:08:31,170 --> 00:08:45,270
Adjutant of five let's remove the front. Front is a zero. We removed frontal it at that. Right here. In our top sort erie at the corresponding position we should insert at the.

36
00:08:45,600 --> 00:08:58,950
Index to. Now let's explore the ad doesn't appear there is no Addison top zero. So nothing to do here let's remove the next with his to. Let's explore the ad descent up to.

37
00:08:59,340 --> 00:09:13,270
Only three let's. Let's decrease the integrity of node three. It's become zero. So let's add this note in our queue. At this point Oregon see we can see there is no there is.

38
00:09:13,320 --> 00:09:24,450
No begrudge it's top three actually who knew removed his two we have to add two right here. Now we have to decrease the in degree of three from one to zero.

39
00:09:24,780 --> 00:09:34,840
We see there is no more indie record we added here. There is no more course required. To take discourse to there is no better good jetzt of discourse tree.

40
00:09:35,010 --> 00:09:46,000
Or against there is nobody widgets of discourse three. Know what i'm gonna do i'm gonna remove three let's add added right here. Let's explore the adjutant up to that is one.

41
00:09:46,320 --> 00:09:58,020
That in degree of one is one let's reduce or get zero. So at this point reconsider is no period widgets. Of one. The record breaker just off one is a zero.

42
00:09:58,350 --> 00:10:10,532
Of discourse let's add it in our queue since the. Since the integral is zero. One. Now what i'm gonna do i'm going to remove. We have just only one adjacent so let's remove.

43
00:10:11,012 --> 00:10:20,892
The front which is one. Little added here let's explore the descent of one we should it is no more. A descent of one that is no ad doesn't actually empty.

44
00:10:21,242 --> 00:10:39,852
There is no neighbor of one. So we are done Wi-Fi fire find out this toppled article sorting. Deceit. Our top sort. Harry will return this array this is the topological sorting or political uttering of our given a graph.

45
00:10:40,292 --> 00:11:01,082
I hope you've understood the sweeter explanation on a very high level. The time comes city of this algorithm is. Off v plus e. Where v is the. Number of vertices exist in the graph and the number of ages is the number of ages and the expense complexity is o a v or v is the.

46
00:11:01,472 --> 00:11:16,362
Number of nodes we have in the given. Graph. This problem does not exist an elite card you can practice this question on geeks for geeks. Now let's implement our.

47
00:11:16,592 --> 00:11:32,132
Get hints. Algorithm. First thing quart or going to do or guarantee crit hour in degree erie slits great hour in degree. Erie the sage of this area is the number of nodes we.

48
00:11:32,552 --> 00:11:48,792
Have in our given graph here. Vs the number of notes we have in a given graph. Then i'm going to create. Our. Top sort erie in this area will store dot topological sorting up our graph.

49
00:11:49,082 --> 00:12:05,612
So the sige upto blows ago sort would be the number of nodes we have in the given graph so new in vv is the number of nodes no let's call striped hour in degree eri let's construct our in degree erie let's eater it.

50
00:12:05,942 --> 00:12:28,422
On our graph so for. Area list. Error list. Integer list. List in a gym. In your address and list. Let's eater it over our current list. So. Integer. Or integer node in a list.

51
00:12:29,402 --> 00:12:47,732
Now what i'm going to do i'm going to see in degree. Integer in degree not. Here let's use. Just. Also this is a recurrent nord lead just increased effort to give any grab something like this one is connected to two and three.

52
00:12:48,212 --> 00:12:59,222
Then two is connected to. A tree and for here what is the in degree up to for this kind of graph he produced these graph this is the adjacency list what is the.

53
00:12:59,582 --> 00:13:15,782
In degree we see that the in degree the ages are coming to this note two is one for three we see two from one to three and from two to three we have to exist in two income either squat three so it would just eat read this and this.

54
00:13:16,202 --> 00:13:31,232
We can see the interview of two three and four easily. Bst iterating this graph. And that's what we're doing here. Now let's. Create our cue to. Her q in the cute little store in teacher.

55
00:13:31,592 --> 00:13:44,252
Let's call it q he called to new. Linked list. New link list in the queue we're going to add. Let's iterate over our in decree with finding the in degree zero four is.

56
00:13:44,672 --> 00:14:03,462
Are of a certain note that old added nor do the q. So eine i e called to jiro i less than v Oregon see in degree dirt. Lint. In degree dirt. Lint. I plus pledge.

57
00:14:04,442 --> 00:14:20,832
Now. Inside here i'm going to shake. This i meant our current annoyed. If we saw that in degree of our current node is equal to zero will add that no torque you secured at i.

58
00:14:21,152 --> 00:14:33,432
The siege. Our. Love or just eat the reading of her hour in degree erie if you find out. If you find an integral zero be certain not will add that note.

59
00:14:33,572 --> 00:14:55,549
To our queue. Know what i'm gonna do i'm gonna do. I'm going to. Implement. Our lwf why lwf. That are used in bfs algorithm while our queue is not empty well are accused not empty let's remove the front so ain't currently called to queue door to pool.

60
00:14:56,492 --> 00:15:14,832
So it'll remove the front of queue. It will just remove the front nod. Of a queue. Now what i'm going to do i'm going to eat or it over the neighbor about our current a note that we just removed from the front of the queue so far.

61
00:15:15,002 --> 00:15:32,802
Are in teacher for integer and neighbor. N b our neighbor of the current so a decent civilised e d rigid dot gate current. This one eater it over the soul eater it over.

62
00:15:32,942 --> 00:15:45,732
Our. Add descent or neighbors of our current node. Know first thing we're going to do organise. A decrease one we're going to decrease one so in degree.

63
00:15:45,812 --> 00:16:03,362
In degree. In b our neighbor just decrease that if we find out in degree of our current neighbor. If find it. In degree up current neighbor is zero only then will add our neighbor to our recutita structure so.

64
00:16:03,692 --> 00:16:27,362
Q don't add n b r. Okay since you removed. The front from q when he added he noted acute that means the ending of that node becomes a zero. Of the in degree or zero means we have already enrolled the prerequisites of that course or the course have no big widgets at all.

65
00:16:27,962 --> 00:16:42,062
So here we have to add our current that we removed to our top sort. This is all bear this all your answer a couple articles thirteen so let's add that top sort initial index should be a demand in the index the.

66
00:16:42,602 --> 00:16:55,392
Initial index is zero. So let's insert. At the corresponding index zero. Index. He called to the removed node then let's remove let's move the index to the next.

67
00:16:55,622 --> 00:17:10,682
Decision. Our. Top sort algorithm is is that Callahan's algorithm. At the end all return just the dove soared erie. Deceit our core algorithm this is called ganz algorithm.

68
00:17:11,072 --> 00:17:33,642
That uses pfs algorithm. Now let's compile our code. Compilation completed now let's submit it if we find out something wrong we'll fix that. Alright it passed all the test get a success bully i hope you've understood this video explanation.

69
00:17:34,082 --> 00:17:45,252
If you have any question guys post your question on the q and a forum thanks for watching this video in the next video we'll solve this volume using dfs algorithm sue in the neck best video.


@@@
1
00:00:00,300 --> 00:00:15,970
Welcome back to this video. In this video we're going to solve this coding interview question. B f s. B f s on a graph. So in this video Oregon to solve this problem beavis on craft.

2
00:00:16,200 --> 00:00:34,860
In this volume were given a graph. Let's assume we're given this graph five. Douro one two. Three four five. Six seven eight. Let's connect to them. Let's assume we're given.

3
00:00:35,250 --> 00:00:54,180
These graph. Let's assume argument is graph this graph. A quarantines total nine notes total nine notes we have to perform b if it's towers fell on this graph we have two powerful b b of his diversity on this graph we can start from any note.

4
00:00:54,510 --> 00:01:07,630
I know i'm going to start from zero epic start from zero against at pomona against from two. As we want but i want to start from zero he can start from any note you want.

5
00:01:08,100 --> 00:01:20,340
It would start from zero okay let's ride out or b pissed our cell. So b f s. Epistar from jiro. O first we will print zero data at the central bureau.

6
00:01:20,730 --> 00:01:38,140
One and three. Let's ride to the add to send of. Zero. Now add descent upper one and descend up on zero two four years visitors who two and four. Let's brand it to four we can pick it in this order at first four then two.

7
00:01:38,310 --> 00:01:53,250
We can pick that but it's depend on the implementation of or add just since it list. We're going to perform bfs on ad just in c add distance at least actually add decency read list regent this a graph data structure.

8
00:01:53,580 --> 00:02:09,930
Will see that. No here we added two and four. Or get we added two and four. Now let's explore the add descent of three add descent of three is. Zero and six years already visited so now let's visit.

9
00:02:10,350 --> 00:02:28,870
At six let's add you're six. Now let's move to do the ad sent up to only five is unvisited let's add your five the ad doesn't have four at the center for ease and seventy seven is only unvisited one is ultra at descent but this is visited so let's add seven.

10
00:02:29,190 --> 00:02:47,880
The ad descent of six. Doesn't have six of three and seven hundred are visited. That add descent of five. At descent of five is. Ah eight. Or two. Two is visited eight is unvisited let's visit eight at the end of seven all are visited at the end of eight honor visited.

11
00:02:48,360 --> 00:03:06,060
So this is our beerfest hour so this is our valid. His our so. Sort we find that invalid beerfest ourselves we've defined it to beerfest our soul of this graph how this graph is represented this graph is represented using add to see list.

12
00:03:06,420 --> 00:03:19,710
So zero is connected to one and three. Then one one is connected to this is an under erected crap welcome when is connected to judo and. Judo two and four.

13
00:03:20,100 --> 00:03:33,600
Joakim then to. Druze candidate to one and five. Three is connected to doodle and six. Four is connected to one and seven. Five is connected to Tor and eight.

14
00:03:34,260 --> 00:03:58,720
Den six is connected to three and seven. Seven is connected to. A four six eight. A discounting to two five and seven will given these add desensitized this at distance the list represent this gravity destruction is it just a logical representation of these ad doesn't see list.

15
00:03:59,460 --> 00:04:14,561
Now let's see how to find out beerfest our title of this graph data structure. We know that beerfest our soul traverse dot graph in. Level order to ourselves.

16
00:04:15,210 --> 00:04:26,430
When would that be if his dorsal drivers in liberal order to ourselves. I'll be pissed over the legal level or at our sal its diverse level available first this level then this level then this level.

17
00:04:26,850 --> 00:04:47,970
No let's see how to traverse our graph in beerfest hour so. Let's assume we're given these graph data structure. No. We will start from dot node zero Joakim epistar from nord zero let's explore the ad dissent.

18
00:04:48,360 --> 00:05:00,160
Dot valid add scent. Of a zero the ad doesn't obscure that is not visited let's find out the ad dissent on and three. So the ad doesn't have juries on and three.

19
00:05:01,440 --> 00:05:18,450
I saw zero one three okay. So first we'll complete this level we started at zero so all complete this level so we'll print. A zero so let's add here or b of his style Russell b f s first zero.

20
00:05:18,840 --> 00:05:33,060
He completed then we explored the add descent one and three one and three visited let's Mark the visited node how we can Mark this we can use a bullion arab market that here habitable nine notes so i'm going to crit here.

21
00:05:33,480 --> 00:05:51,360
A bullion area of land nine let's create here to Mark the visited and noted. So let market here jiro one two. Three four five six seven eight. Let's Mark our.

22
00:05:51,750 --> 00:06:10,200
Visited order is visited cetera or explode at descent one and three so at one. And three so these are marked as true. Now. We will peak this one also we will use a queue data structure we will use a queue data structure ok.

23
00:06:10,710 --> 00:06:23,790
Let's start from the beginning okay so this is our beef as a hit all right or be a physicist and deceit our. Bullion array to keep track of visited vertices and will have cute at a structure.

24
00:06:24,126 --> 00:06:35,310
Will have a cue to distract her q is initially empty will start from any node. We can pick any node. I'm going to procured zero. If we peek here zero this node.

25
00:06:35,910 --> 00:06:53,050
So we have inserted this node. To the cuda structure initially and i'm going to. A merc the singer have inserted on cue point we insert certain note on q will Mark that as visited so this is selected let's market zero as visited.

26
00:06:53,700 --> 00:07:05,880
So now what i'm gonna do i'm going to remove the front from q. Ok i'm going to remove front of the front from cute wounded remove only then we will add to our bfs list so let's add here.

27
00:07:06,390 --> 00:07:19,440
The removed form from our queue now our notice zero now let's explore old add descent of zero. That doesn't observe heresy one and three. So one and three.

28
00:07:19,770 --> 00:07:34,800
We can peak three one but it's different on the implementation of this graph data structure. Will. A peak dot minimum below first will peak fellow in ascending order first one then three okay.

29
00:07:35,310 --> 00:07:54,790
So here we peak one and three. We added straw list we picked one we have to Mark this as to let into twenty one of. A select it we have to add that no taller que than three also to add to this our two hour queue and we have to market as selected.

30
00:07:54,990 --> 00:08:09,630
Okay one entry is selected. Now we're not all peak since you picked one first so we'll. We'll remove one. Will remove one and let added torpy of his list now let expert old ad to send off an.

31
00:08:10,143 --> 00:08:24,600
Ad percent of what we see to four and zero zero already visited so we can peak year two and four. Begin peak two and four. So. Two for let's add two forward toward q.

32
00:08:25,080 --> 00:08:37,590
Two four. Joakim. Then let's market to as selected for as selected or as visited. So we have added this to now what is the phone number q three right.

33
00:08:37,980 --> 00:08:57,490
Front por que is three so let them have two three let's you front unlit at the top of his list. No here we have to check the adjutant. We have. Selected to end for now we have to find that adolescent of three and zero three is zero and six.

34
00:08:57,660 --> 00:09:08,650
Jurists visited so we have only one a doesn't he want invalidate doesn't that is six against the lecture six. So let's add six two hour. Queue and let's market as visited.

35
00:09:08,970 --> 00:09:21,330
So this level is completed first we. Complete this level then this level is Donna leads move to the next level and we can exit the next level in here again see clearly we have two four six.

36
00:09:21,870 --> 00:09:33,210
That'd be right out here. Two four six weeks have these three notes the letting him have two from our front of the queue so let's add it to our beavers and let expert at distant opt to.

37
00:09:33,960 --> 00:09:50,490
Add descent up to. His one and five is unvisited but one is visited so let's be clear. Five. Okay. So. Let's. Select it and lets marketers visited. And let's add five to our queue.

38
00:09:50,820 --> 00:10:03,130
Now what is different for. Us we have to compete this level for for the ad the center for is one in seven. Seven is visited seven is unvisited. So seven let's add yours.

39
00:10:03,180 --> 00:10:19,830
And. Let's add here. Let's add here. Are actually leads back trickier when we are moving to this not for. Or get we are removing this front. This it was our front when he removed his weird attitude.

40
00:10:20,160 --> 00:10:31,230
His list let's add here no explore the ad the center for at centre for is one in seven one is visited. So on it is not valid and isn't here now because he cannot move to a one because one is visited.

41
00:10:31,560 --> 00:10:46,360
No seven. So let's add seven to our queue so we added here. Joakim. Now. We have to market. Seven astral. Terminus visited. Now let's move to our next.

42
00:10:46,620 --> 00:10:58,830
Next in this level that is six letters from the front and added tour b of is a right here and ad doesn't have six all are visited there is no valid add cent of six okay we're done.

43
00:10:59,160 --> 00:11:12,730
Now let's mop to five. Let's move to. Five that doesn't have five years. Two and eight eight is unvisited. It's at year eight. Before that we have to add these.

44
00:11:12,960 --> 00:11:29,310
We have to add da five singer removed from the front of the editor or. Beavis list let's right here five. No we have two extra the adcenter five it isn't a famous two and eight two is visited and eighties unvisited so he can visit eight.

45
00:11:29,670 --> 00:11:46,050
Let's add eight here let's market astral. Now let's move to the next level. This is a have. Process just not now leads one to the next. Next in this level that is seven let's remove it from the front and let's add it to our bfs list let's add it here and.

46
00:11:46,470 --> 00:11:56,550
Let's. Let's explore the ad descent all that isn't observant or visited nothing to do here. No let's move to the next level this is our next level. Now let's rope.

47
00:11:56,940 --> 00:12:09,640
Remove eight and let's remove here eight and let's explore old at descent i mean what that let's add a tour. Of the previous list here. Okay. Now here's what we do.

48
00:12:09,750 --> 00:12:25,560
We'll add dried to x world at the center and at descent of eight five and seven that is already visited so there is no valid accent nor queue is empty when he saw our queue is empty we are done we get our valid beer festival so visit our valid beerfest our soul.

49
00:12:26,010 --> 00:12:39,970
Of our. Grabbed a structure. That this algorithm will takes for the ors kit. Offered the or sketch or off via flaws equal vs the number of vertices and ease the number of aegis.

50
00:12:40,470 --> 00:12:57,490
And we need a space corps city or off. Vvs ever Jesus and to create the erie the bullion area to keep track of visited vertex. If we're given a disconnected graph something like this he predict when the graph disconnected it as we have here nine.

51
00:12:57,780 --> 00:13:12,250
But at nine is disconnected then how we can traverse this graph. How we can traverse this graph if you're given. This graph nine is disconnected. In that case first we'll choose zero.

52
00:13:12,480 --> 00:13:25,900
We have your vertex from zero to. Nine okay we have partings from zero to nine we'll we'll start from zero and we'll have v visit all the connected. Node.

53
00:13:25,980 --> 00:13:37,860
That is going to get to zero or get older connected nodes. And then all the move to one he recent one is visited oldest escape it and then two three four five six seven and will.

54
00:13:38,190 --> 00:13:46,870
A check off every single note if you find it in node is unvisited then we will start from that node if we have here something like this nine is connected to ten.

55
00:13:47,040 --> 00:13:57,180
Denton is connected to. Eleven nine is going to ill in. An alternate disconnected graph that all start from. I will start visiting this part one week.

56
00:13:57,596 --> 00:14:20,640
Rest and nine or Kim. Then we will visit all of the all the vertex year and will. Will market as visited. Will Mark them as visited okay. And all started a tin and that'll be that if we'd started here we if we expert older node that is connected to this.

57
00:14:20,970 --> 00:14:34,480
Been. Disdain all taught in eleven all be visited. Okay. This is your weekend all drivers. Were disconnected graph. I have Eve understood how to solve this problem.

58
00:14:34,890 --> 00:14:46,080
Now let's implement this algorithm here we have a graph. And we have here at this graph data structure Oregon. Zoo is connected to one when is going to get to two is.

59
00:14:46,410 --> 00:14:58,830
Connected to four and so on this is our graph we have your total nine notes. Dysgraphia connected graph first let's see the algorithm for connected graph the oil to the algorithm for disconnected graph.

60
00:14:59,400 --> 00:15:21,000
Of first let's create our a bullion erie our bullion area to keep track the visited vertex. So bullion. Let's call it visited he called to new. Our bullion and the sige of this era is the number of vertex we have in the graph we have to do eight vert and nine verdicts Joakim.

61
00:15:21,450 --> 00:15:38,790
So here again see graph door to site it was written nine so. For this given graph we will have at the site of this visited an array is nine. Now here let's create a list let's create a list.

62
00:15:39,210 --> 00:15:59,280
In this list old store de a beerfest our cell so the terrorists will result in teacher list he calls to. New. Aerialist. New analyst. Joakim. Now here i'm going to call now i'm going to call i will be of his function b of his i'm going to provide our graph.

63
00:15:59,730 --> 00:16:19,570
Our graph then visited erie then our list. Then our starting vertex all start from vertex a zero. Joakim. And it all a construct this list. This. Dysfunction will add all the nodes value to this list.

64
00:16:19,710 --> 00:16:40,600
In bfs order. And i'm going to pin it right here so for int. I. Integer i. Integer i in list. Let's spend it here. Let's print here. On the system out and don't print l n i.

65
00:16:41,010 --> 00:16:56,160
Am going to just up and hear. Industry. Okay. Now let's implement this function b f s. This is for a connected graph okay this is a knotwork disconnected graph now let's implement this algorithm for connected graph.

66
00:16:56,610 --> 00:17:11,140
Public static return type is void the function name is b f s function name is b f as. This function takes four parameters graph visited area then list then starting vertex.

67
00:17:11,280 --> 00:17:29,470
So our graph let's copy this and we'll just copy this from here and let's best it. Graph then we have our visited. Erie okay so. Bullion. Visited. Then our list.

68
00:17:30,660 --> 00:17:48,330
In teacher. Okay list and our starting vertex into vb for vertex. Now here inside or i'm going to do i'm going to create a queue at a structure. Q and in the qt to structure what will store will.

69
00:17:48,660 --> 00:18:10,090
Store an integer okay. So q integer i q e called to new link list. Alright. Now here in the queue i'm going to add our current verdicts initially secured at our current verdicts and let's Mark our current verdicts as visited so visited.

70
00:18:10,800 --> 00:18:25,920
V he calls to true. It means our current vertex is visited. No here. Are right inside here i'm going to run a while loop. While our queue is not empty.

71
00:18:26,250 --> 00:18:40,930
While our queue is. Not empty. Owner queue is not empty i'm going to remove the front so infront he called to queue dot pull. It'll removed up front and it'll return front.

72
00:18:41,160 --> 00:18:50,940
Okay. Now what i'm gonna do i'm going to get to the Addison's list i'm going to get the ad distance list at the front. That is connected to the front note.

73
00:18:51,360 --> 00:19:11,130
So let's wind up the ad decentralized. List. Integer. E d j he calls to. Graph dot get a d. Grabbed get a front. Joakim. Now hear what i'm gonna do. I'm good either it does add to censor list so far for.

74
00:19:11,490 --> 00:19:30,880
All integer. N for integer i in a d j. Ok. Now i'm going to eater it our ad decency. List and i'm going to check. If our current node. If our current node that means in if the node is an inner add the list is already visited.

75
00:19:31,110 --> 00:19:48,850
We will just. All just. Skip that note. So let's check bed. Eve. If we saw visited. I if it's a call to troll. It means that that node. The node i is already visited so we'll just continue in this case.

76
00:19:49,500 --> 00:20:00,840
Otherwise what we'll do we'll add this note to our queue will add listener to the queue and he only remove the front when he removed if to add that to our list tour list.

77
00:20:01,230 --> 00:20:17,652
List dot add to our defenseless list or add front. Of him and here. If. If we saw that. Node is not visited let's add that door q so cute add i and let's Mark our.

78
00:20:17,732 --> 00:20:31,652
Let's Mark the note as visited visited i called structural. Disagree with coral gory them okay this is our core algorithm. Since the type of this. Visited areas through we didn't have to need.

79
00:20:32,012 --> 00:20:46,052
We don't need these actually. Joakim. It'll be it'll return to our fault. So visit. Our core algorithm. Now let's run this code let's see if it works if.

80
00:20:46,532 --> 00:21:01,632
We saw something goes wrong we'll fix that let's run it. We saw zero one three two four six five seven it it it is working just fine now here we saw this graph is connected.

81
00:21:02,492 --> 00:21:21,852
If this grip is disconnected let's grid a disconnected graph let's add one more each here one more lord here so new era list. New array list. Okay this is mtr list it means that we have a we we have added in node nine.

82
00:21:22,172 --> 00:21:37,922
That is connected to nothing so this note nine is disconnected so we'll have here in noord nine. Would have here in node night but that is not connected to this graph so now the this graph is discounting it how to handle disconnected graph.

83
00:21:38,432 --> 00:21:57,392
Joakim. In order to handle disconnected graph what we'll do we'll create another function right here. Dfc helper. Of bfs helper. Let's grittier bf is a helper of b if his helper function in that function will just st this graph so let's great.

84
00:21:57,752 --> 00:22:09,882
Let's call the bfs helper function here bfs helper with a given graph. Okay. We just call the function with the with a given graph. Alright. Now here.

85
00:22:10,112 --> 00:22:30,002
We don't need this anyway. We'll just. We'll just review from here. Now. Let's move to. Let us call here and let's great rb of his helper function. So a public as static return type is void let's call it and dive list will.

86
00:22:30,392 --> 00:22:44,292
Are written that our domicile so integer. Let's call it bfs a helper this function takes only one parameter our list on our graph. Okay let's call it graph.

87
00:22:45,182 --> 00:22:59,472
Now here let's grid a boolean error to keep track the visited vertex so visited he call to. A new. Bullion. And decide you decide you're forgiven graphs a graph dot sight.

88
00:23:00,182 --> 00:23:10,822
Alright. And also we have to creep through we have to create a list in the list old story our our solar oh my our traversal to list integer listicles to new realist.

89
00:23:11,372 --> 00:23:30,122
New analyst. Joakim. Know right inside here. I'm gonna do it only look for int i called to i'm going to iterate all the notes from zero to nine. So let's eater at that so i go to zero i less then grabbed dot.

90
00:23:30,512 --> 00:23:55,982
Sight. I plus pledge. Right inside here epistle or current nor is visited. Ybor current node is visited will just escape that. Route the skiff. Ybor current node is not visited only then we'll call this via his function only that we'll call these bfs function and this bear fish function would provide our graph first our graph.

91
00:23:56,342 --> 00:24:10,902
Then our. The second parameter is the visited erie visited erie then list. Then or starting vertex starting what next year. Is i okay we would start from every single vertex.

92
00:24:11,582 --> 00:24:23,282
Let's assume we'd started from zero we started from zero and then we will visit all the nodes all the nodes are India's connected portion in this a setup of vertex Joakim.

93
00:24:23,912 --> 00:24:35,642
When we are done or we will move to the next one and we saw that. Everything. On this set is visited so for one oot sky foretold skiff when you raise to nine.

94
00:24:35,972 --> 00:24:45,452
We will call the function b of his function again and that will and written the nine that will add nine to our list. So here or i will provide I'll provide.

95
00:24:45,812 --> 00:25:05,232
I here. Usage our core algorithm and at the end here or it will do will return our list our this list. Now a reprint here. Let's. Dysfunctional journalist so again i can use i can run aloof here for integer.

96
00:25:05,565 --> 00:25:25,322
I. In. B if as a helper. In beavis helper so let's. Carried and lead bested right inside here. Now i'm going to print here i. Alright this is our algorithm for this is what disconnected graph.

97
00:25:25,742 --> 00:25:39,072
I hope you've understood that let's run this good. And that if it prints all the verdicts. We have here from on to from zero to nine. Let's use your print.

98
00:25:39,782 --> 00:25:56,892
Not print Ellen and lead just and your empty string. Ledge around is good. Alright we have from zero to nine we have a we have visited all the verdicts again this is how we can handle disconnected graph using bfs algorithms.

99
00:25:57,002 --> 00:26:06,482
We can traverse. A disconnected graph using b of his algorithm i hope you've understood this video explanation. Still if you have any question posted a question on the cuny forum.

100
00:26:06,782 --> 00:26:21,942
Out at his discord and his bitter please check it out. Make sure he understand this video explanations and this problem very will out. Only been. Moved to that next a video of the section thanks for watching this video.


@@@
1
00:00:00,120 --> 00:00:16,560
Welcome back to this video in this video we're going to solve this coding interview question. D f s. On metrics. In this problem. We're given a metrics we have to traverse dot matrix using dfs tower so.

2
00:00:17,040 --> 00:00:33,420
Let's assume we're given. The matrix one two three. Four five six seven eight nine. Let's assume we're given these may metrics we have to traverse these metrics.

3
00:00:33,750 --> 00:00:49,920
Using dfs algorithm. Nolte how to traverse this matrix using Davis algorithm. He recovers. This matrix using d f is algorithm what we will get. We'll get first let's write the order here.

4
00:00:50,310 --> 00:01:10,290
We. Will have. Our our order our custom order. First all go down. Then we'll go. Up. Down up then. A right. Lipped. Let's see the deepest hours of using this order.

5
00:01:10,650 --> 00:01:28,830
Okay oot apply ladies order to every single note. No let's see how to find out our deepest ourselves of this metrics. Note let's find out the devas diversity of this matrix we can start on any element on any cell.

6
00:01:29,160 --> 00:01:41,590
I'm going to start from one. Okcupid start from one i will add one toward list. Then. We'll follow this pattern now let's go to down this era down let.

7
00:01:41,880 --> 00:01:58,030
Add for the let's go down let's add seven. Then let's go to off app is already visited now let's go to right from here again at guru. A down we cannot go to ob because app is visited from here we can go to right so let's good ride.

8
00:01:58,410 --> 00:02:14,320
Eight. Know from eight. Outlets appetite as we cannot go down but we can go to app lets go to app here. So let's cut off we moved to five from here can go to don't know let's go to African soil more to draw.

9
00:02:14,760 --> 00:02:32,860
From to he cannot move to down we cannot go to af we can go right so let's go to right is it our right. Two three. Now from three Kenny go to Darwin yes we can let's go to down from six can you go down yes let's go down.

10
00:02:33,360 --> 00:02:48,330
Alright. Now can we go to off no obvious visited category to write no Kenny go to leapt. Can he go to NYPD know. From here we cannot move to any directions and we see that we have successfully.

11
00:02:49,080 --> 00:03:06,390
Successfully visited all da all the element. Of this matrix so we are done. Desert our valid dfs tower so. This is your valid you have his number so. We can have many dear friend valley dfs diversity Abi graph.

12
00:03:06,840 --> 00:03:31,090
If you follow different order. Then it'll. It'll. All work just fine. The dfs tower so will be different but the core principles are the same. We are moving in one direction as far as possible this is the tendency of dfs algorithm the dfs algorithm tries to try to move in one direction as far as possible.

13
00:03:31,830 --> 00:03:50,470
Know how to find out. Given star wars obi given matrix no let's see how to find a d of his diversity aba metrics. Let's as him are given these metrics and we have this order will follow this order to traverse this matrix in dfs order.

14
00:03:50,820 --> 00:04:05,740
All start off with this cell of index zero zero we can start of with any cil. We like. But in this video i'm going to say i'm going to peak this. Dsl of index zero zero.

15
00:04:06,090 --> 00:04:20,550
Will start from zero zero so zero zero. And here will write out out Davis dorsal. Joakim. Now from zero zero we have four direction. We can go to down.

16
00:04:20,880 --> 00:04:35,640
We can go to down we can go to of we can go to. Right and we can go to. Lipped we have here for direction from the cell. From diesel. So digital currency will just add.

17
00:04:36,000 --> 00:04:54,400
This to our dfs list and if the market as visited for that we can use. For that we can use. A boolean matrix to Mark. The visited cil. Will not revisit will not revisit the same cell twite.

18
00:04:54,660 --> 00:05:05,680
Let's assume this is were visited. Metrics. Using this magics will capture the visited. Assail so here let marketers to. Consider our initial position.

19
00:05:06,510 --> 00:05:18,550
So let's go to down he tried to go down we have to add one to ourselves so one zero. Four one zero we see it we can visit here so let's add for here. Lit market.

20
00:05:19,140 --> 00:05:33,520
As visited and from here again we have four choice. For tourists and down. Joakim fresh as Darwin then of din right then left. There here we have again for joint.

21
00:05:33,690 --> 00:05:49,780
So first let's get down. To zero. That is seven. Let the market as true endless printed and let the editor list here so seven. True. Know from here again we have four choice.

22
00:05:51,240 --> 00:06:05,850
A first down he cannot go down there is nothing on the down we can go to all because of his visited. Then can a good ride yes we can go to right so let's go to ride he betrayed a good ride will add one to the column get to one.

23
00:06:06,450 --> 00:06:20,850
So. We raised now. These eight. A to market is true and lead sprinted. Were trying to move in one direction as far as possible. Okay so here we have from here we can move to this.

24
00:06:21,390 --> 00:06:31,840
From eight he can we have four just going to go to down. No he cannot go down can you go to of years again so we have to just substitute one tomorrow we get here at one one.

25
00:06:32,550 --> 00:06:51,760
Again we heavier for choice we have Harrigan for choice. So let's market one one and let's add the fellow at one. That is five. Now from one one we have for choice can go to don't know can go to off yes that is good off so we get zero one.

26
00:06:52,324 --> 00:07:05,050
Get zero one so let market and let the market has visited let's add to our deficit our sale list. Now from zero one. Kenny good we have your again for joyous.

27
00:07:05,280 --> 00:07:20,680
Can go to. A down note down is visited can you go to off no can a good ride years we can go to right so zero two. Due to that history. So let print here three and let market.

28
00:07:21,450 --> 00:07:36,280
Astral. From three again we have four choice for three again we have four is going to go to downey yes. So here we will have a one. On one to. Joakim.

29
00:07:36,570 --> 00:07:51,102
This is zero two. Desert zero. Two. Joakim. So one two. This is valid toilets marketers to let printed. Six right here. Again we have your for choice.

30
00:07:51,450 --> 00:08:05,440
Can you go to down yes. So that is. Two two. Let and this is valid soulless market as true and let's add it to our. Dfs list that is nine. Can hero going to have for choice.

31
00:08:05,850 --> 00:08:16,170
Kenny good too don't know. Because not even the down can go to. App nor can you write know are going to go to lipped no to nothing to do here this already visited.

32
00:08:16,560 --> 00:08:31,320
Now let's back here from on onto. Now we moved to dsl. Or right here. Right here one two from here can you move to any other direction we already choose to down no there is no other direction leads.

33
00:08:31,740 --> 00:08:45,450
Back to let's try to go to off. We cannot and we cannot reconnect so let's go back to zero two. Zero two that is the primary state we moved to this so we we moved to this.

34
00:08:45,810 --> 00:09:00,750
This is this but is already visited Joakim. Despite his alter already visited. So here we see that we moved down we can he go to tough no. Kenny go to write nor can he go to lift no solids back.

35
00:09:01,260 --> 00:09:15,123
We moved to Judah one from here. From here we already choose to do we already choose from zero to. From zero. Or from judo one already choosed or right.

36
00:09:15,180 --> 00:09:25,470
Alternatives no let's go to the leapt lip is already visited we cannot go to left so let's back through our Judah one. This this estate so we cannot move to.

37
00:09:25,830 --> 00:09:37,470
A lipped. So leads back to one one. From here we move to this right and from here we see that can go to in any direction so. Down is. Invalid again and go to off.

38
00:09:37,950 --> 00:09:48,270
We cannot go off anyway because he already visited that we already chose that. Then we have right we cannot Walter right right is visited we cannot go to left that is visited again here.

39
00:09:48,690 --> 00:10:03,300
From two one. He cannot go to. We cannot go to ride we cannot go to left. Then here to zero. We cannot go to. I write again because we already chose that we cannot go to left again leads back to one zero.

40
00:10:03,630 --> 00:10:19,156
A right here. Any good do. Any good to off note that is visited. Can we go to our right no that is visited can go to. All. Let know there there's nothing on the left so leads back to your first function call that is zero zero.

41
00:10:19,486 --> 00:10:30,762
Joakim we moved down like any good afternoon at two hundred and nothing under a half okay the right. Ideas visited the lip nothing on the left so we are Oregon.

42
00:10:31,306 --> 00:10:42,416
So we find that this of tower still. Decision were. Defensed our list and this is just the results we get by traversing these metrics India of his order.

43
00:10:42,886 --> 00:10:57,566
This is how we can traverse a matrix using dia of his tower so. I hope you've understood the tweet explanation. This algorithm oil dicks off in. R all of em times in time complexity.

44
00:10:58,456 --> 00:11:19,076
And the Spears convicted ease off m times n for this auxiliary. Bullion metrics that we use to keep track of visited cil we can see. And this is time complexity that means a and b that's because we have drivers to every single cell once that's where it sticks m dams and dam complex.

45
00:11:19,156 --> 00:11:36,646
I hope you've understood this video explanation. Now let's implement this algorithm before that let's talk about our. Ah our algorithm here so first we'll call a recursive function with z Richard with the we'll have four function call for down off of right left.

46
00:11:37,006 --> 00:11:49,796
Joakim. When we moved down we have again for function call for each function call we see that we have four choice we have for choice. We can go to download again good African good writer again go to lipped.

47
00:11:50,446 --> 00:12:06,386
Joakim when it is the very end. By choosing ear down and here we have no more choice a rollback will move to this. Then this then this when ridden all back here and decision this algorithm works this is the recursive algorithms ok.

48
00:12:06,526 --> 00:12:22,186
And dfs algorithm dfs algorithm. All i just use as as dark and infrastructure okay we can sell the stolen using. Or using. Aloof. Using iterative approach using stack Oregon he was i recursion we can use.

49
00:12:22,546 --> 00:12:36,716
Recursion we knew that recursion internally uses the stack data structure. So for Davis traversal. We all ages use stag the destructor implicitly. Or explicitly.

50
00:12:37,486 --> 00:12:51,896
Sofa dfs algorithm we will use a stack. Will lose stag the destructor if you use recursion recursion will use a stack implicitly or db you as. Aloof then we have to he was stabbed at a structure eight explicitly.

51
00:12:52,276 --> 00:13:04,106
We're going to implement this algorithm using recursion. Now let's see the algorithm. Now let's implement our dfs algorithm. First let's create our matrix.

52
00:13:04,456 --> 00:13:25,076
I'm going to create our matrix. Let's call it matrix equals to. Our first one two three. Then. Four five six. Seven eight nine. Ok we will have these metrics this is our metrics.

53
00:13:25,726 --> 00:13:41,116
Now i'm going to create a boolean boolean matrix. With the same dimension obvious given metrics of this matrix so let's grid that. So bullion. This is altered to re array.

54
00:13:41,506 --> 00:13:55,466
Let's call it visited he called to new boolean and here the rule so mad king's daughter Linda number of wrote the number of column. So matrix douro. Dont lend.

55
00:13:56,446 --> 00:14:10,306
The given metrics can be the unit is can be. A square matrix alto it can be. Non square. Now. Here let's call our function dramatics can be of any water okay.

56
00:14:10,846 --> 00:14:27,436
Now here let's call the dfs function. I'm going to provide our metrics. Then i'm going to Twitter visited. Our this. Visited. Our metrics to keep track the visited node and our starting position that is zero zero all start from this one.

57
00:14:27,766 --> 00:14:42,446
Ok. Now. Let's. Let's implemented the function dfs are right here. Sir public static avoid dfs it sticks three parameter. In teacher does your matrix.

58
00:14:43,756 --> 00:15:02,576
This is integer. Then bullion metrics. Bullion this is visited. Din. Our. This is our bullion matrix. Din are starting so into our end c. Are starting to and starting column.

59
00:15:03,166 --> 00:15:19,216
Joakim. Now our recursive function is recursive functions are all happy basis let's write out our basis. Okay and let's. Let's find out first. At the beginning let's find out that.

60
00:15:19,576 --> 00:15:28,396
The height and weight a number of route a number of columns each recalled to my tricks dot. Land and call equal calls to the number of column he to my tricks.

61
00:15:28,756 --> 00:15:42,556
Zero dot lint. Joakim. And here i'm going to validate our current row and column eBay that is valid so let advantage of that if art is less than zero that is invalid if r is good then recall to.

62
00:15:42,856 --> 00:15:58,576
Da Joe the number of rows then this is also invalid. If. Column. A column is less than zero this is still invalid this will be invalid. Episode column is written record to call the number of column.

63
00:15:58,876 --> 00:16:12,076
Then the column is invalid or if we saw. Our or. Our current. Element or a currency lipper currency is already marked as true then we have to skipped.

64
00:16:12,436 --> 00:16:24,196
We just returned one exit from that function call. Ok we have to validate that this weekend so these are baseless. Now right inside here. What. I'm going to do.

65
00:16:24,706 --> 00:16:39,736
If we. If this condition is false that means r n c is valid. So in that case we're going to print it so let's print our current. Current ailment. We can use we can add that still list just yet i'm gonna just.

66
00:16:40,066 --> 00:16:58,526
I'm going to just a print that. So print. Let's sprint here. Are the first. Metrics r and c. And i'm going to just up and industry. Joakim. And we have to Mark that as true since we are printing that Joakim.

67
00:16:58,576 --> 00:17:15,556
So let's. Let Mark that here you're. So visited r and c he calls to. True. Now we will happier our recursive function call will have four function call for ies function call will have four function call roulette for choice against him.

68
00:17:16,036 --> 00:17:32,786
So a first will call will have down will move to down then talk then right then left. Now let's implement our function. Dfs metrics visited then we have to move to downs we have to add one to our rule.

69
00:17:33,586 --> 00:17:55,526
Then see. Joakim. If we moved with twelve. So dear for his metrics visited. Our minus one beyond tomorrow to the top dnc. Now right so dfs metrics visited din are and then we have to add one to the call allow him to see plus one.

70
00:17:56,326 --> 00:18:12,386
Then here df is a matrix visited. Our raw then c minus one if you want to move to the left. Joakim this r da for a function call. And this is your we're Davis algorithm.

71
00:18:13,126 --> 00:18:25,036
This is a reverse algorithm okay. And this algorithm will next time complexity off him times in her emmys the weed and is the height and space complexity is also.

72
00:18:25,366 --> 00:18:49,066
In times and. Now let's run this. Let's see if it work. A work or not. If we find out anything goes wrong we'll fix that. Ok we see one four. One four seven eight then five two three six nine find out this.

73
00:18:49,396 --> 00:19:06,386
Result discovers a result. Okay. This it our algorithm this algorithm working just fine. I hope you've understood this video explanation. Using this same approach will solve multiple problems.

74
00:19:06,796 --> 00:19:19,546
Using this same pattern will solve multiple grab problems and all add dot video in this section of discourse. If you have any questions please ask your question on the cuny forum.

75
00:19:20,086 --> 00:19:31,106
Before moving to the next be to please make sure you understand this video explanation. If you have any issue please post your question on the q and a forum or he can he was in his video.


@@@
1
00:00:00,960 --> 00:00:14,410
In this video we're going to solve this coding interview question. Dfs an ad to censor list. In this role and we'd given. Ad just insane list. We have to travelers the ad doesn't list using.

2
00:00:14,580 --> 00:00:31,170
Dfs algorithm. Let's assume we're given. Ad distance list. Zero is connect to one first let's draw here our graph zero. One. Two. Three. Let's assume.

3
00:00:31,500 --> 00:00:41,220
They sit our graph data structure. As you are guided to want when connected to two. Zero quantity two three and three connected to two. Soldiers connected to one and three.

4
00:00:41,820 --> 00:01:02,860
One is connected to. A zero and. Two. Two is connected to one end at three three is connected to. Drew and Joe. Now we have two now we have to. Traverse this graph using dfs algorithm.

5
00:01:03,420 --> 00:01:17,130
We can start from any note. Let's be cured zero. Let's find out dfs diversity by peaking zero. If a year is zero. I'll let sprint zero. Then we have add descent one entry.

6
00:01:17,580 --> 00:01:26,580
We can peak first three then one that are going to bake the first one then three but it's defend on the implementation. This is your address as the list.

7
00:01:26,940 --> 00:01:39,990
In the add distance list we see that the smaller number come first. This is sorted in ascending order if critic rough something like this if we insert three din one didn't get a first peek three then one.

8
00:01:40,440 --> 00:01:54,720
That's different on the implementation. But in my implementation. I use the sorted value i inserted. In that distance list in sorted order. So i'm going to peak in ascending order first i'm going to pick one.

9
00:01:55,290 --> 00:02:09,700
So let's peek here one. And so we beat one node add to send up one singer peaked one ad descent off on his tool and your dudes with it it does so to. Know the adjutant up to his one entry.

10
00:02:09,930 --> 00:02:24,310
On one is visited so it will be three. Then. Of three there is nowhere to go from three there is no where to go from three. One game. So old back here and there is nowhere to go from to do any other notes because this had already visited.

11
00:02:24,690 --> 00:02:35,250
Then we have one that is no where to go from here to any of the north solids back here. And from here we said there is no unvisited accent. So this is a valid def establish so.

12
00:02:35,850 --> 00:02:50,260
Let's assume we have here you're. Connected another node at that is a four here we have a another note four so two is connected to four one three four and four is connected to two.

13
00:02:50,640 --> 00:03:04,600
This is an undirected graph. Now let's see how to traverse this graph using. D of his algorithm will start from zero so let's print material than one the ad dissent is one and three so old peak year one.

14
00:03:04,890 --> 00:03:19,110
So we pick one. That will peak three letter. Or gatineau from one we have two and Andrew so too is unvisited we're moving in one direction in dfs algorithm we move in one direction against we peek to the ad that descend up to his.

15
00:03:19,440 --> 00:03:36,850
One three four. When his visitors will. Move the three. Since you moved with three. That tried to expert all that descended is new and visited at descent up three so leads back here and f here we see him when Adam visited Addison that is for so let's visit here for.

16
00:03:37,110 --> 00:03:50,340
And for four days no unvisited add descent leads back here. Leads back to i to that is no unvisited ad doesn't up to that is not admitted at dissent of one that is not unvisited at distant abdulla so we're done this is a valid deepest hour so.

17
00:03:50,700 --> 00:04:03,040
This is the day if as divers have described it as structure. And this is the representation of this is a representation of this grabbed a structure. Now how we can solve this problem.

18
00:04:03,750 --> 00:04:17,190
Let's huddle find her dearest our son of ad decency list. Let's assume we're given these grabbed at a structure desert our graph. And the disaster adds the censored list.

19
00:04:17,550 --> 00:04:31,896
Now let's see how to find it dfs diversity of this graph will reduce our deficit our self right here. Ukip. Will start from node zero we'll start from node to zero.

20
00:04:32,070 --> 00:04:47,980
So we peaked this node zero first. We have to keep it we have to keep track the visited vertex or if to keep the visited node. So let's great boolean added to keep track the visited.

21
00:04:48,270 --> 00:05:01,530
Node again. So we created boolean array of size five we have index number from zero to four rule math is not to. Is index. Here we have zero we have selected doodle.

22
00:05:01,950 --> 00:05:18,940
We. We celebrate today we can select any note we want. I selected here journal so i'm going to a print here i'm going to add to this list. Now here. We have selected zero so we have to market doodle a doodle as.

23
00:05:18,990 --> 00:05:31,740
As visited so. He ripped through it means that the nord zero or the vertex zero is visited. Now let's find out the ad descent we have the ad doesn't up zero one three we can see in this.

24
00:05:32,160 --> 00:05:45,310
In this. Ad this is the last year we have one three. So here we have. One and three. We have add descent. We can move in any one direction we removed with this direction first.

25
00:05:45,720 --> 00:06:03,300
I'm going to http pick the smaller vella first. Now from one we see the ad just sent off one. Is zero at descent of one is zero and two. We cannot move to Judah because jury's already visited so we cannot move to this direction.

26
00:06:03,660 --> 00:06:20,680
So we will move to this direction. Davis algorithm. Will not explore first three of these three so let's backtrack here we have selected zero now let's find out all the ad dissent we have add descent on entry.

27
00:06:20,850 --> 00:06:30,600
This is one then this history it first explore all the ad dissent on the left subtree in decision tree okay only then it'll move to the right sub tree.

28
00:06:31,140 --> 00:06:46,590
For a superb understanding let's ride or die. At all the ad doesn't here. So zero. Sorry here one. And here we have at three so it will move to this direction so we peak oil peak now one one.

29
00:06:47,120 --> 00:07:06,960
Will be visited so let's Mark one astral. Let's find out at the center point at this end up one is zero and. Drew and two. So. We can move to. In any one directions but he received that is erase already visited zur is already visited we cannot revisit the same.

30
00:07:07,350 --> 00:07:20,350
Vertex Dwight so he cannot move in this path so we have to move to this path. Before that singer selected here one we have to print it. And if don't market as two right here.

31
00:07:20,430 --> 00:07:32,610
So we market as visited. Now but let's let's chew it let's fired all the ad doesn't add descend upon his urine to the resolute visited we cannot move digital so here let's move to do.

32
00:07:32,970 --> 00:07:48,084
A sweep. Which was adhere to. Which used i'd do so let print here and let's Mark two as visited. Two as visited. Now from two let's find it all the to send up to the descent up to his one.

33
00:07:48,570 --> 00:08:12,090
At three and four. Joakim but when is already visited in his will never again see that so we cannot. Piggies. So here we can peak at three. Three is not visited so let's Juliet three let's add here that Mark three as visited so we moved to three.

34
00:08:12,750 --> 00:08:25,810
Now let's find out all the add descent of three that we we have to add descent up three zero am and two we see that zero is visited. Do is alter visited so we cannot exploit any more there is no adjacent.

35
00:08:26,070 --> 00:08:48,090
Vertex that is unvisited for three four two. We see the ad descent three be removed reticent through there is no unvisited vertex of three so a back to two again and we have two meteor next choice that we have two of them he arrived back to this and here lucic if we have any more unvisited vertex that is connected to do with e we have Ford that is.

36
00:08:48,540 --> 00:09:02,850
That is it can get to two so let's print here for and let Mark this poor as visited. Now let's try to explore. That stretch explore all the ad doesn't offer a descent of four is only two.

37
00:09:03,420 --> 00:09:16,050
Two is already visited we cannot choose here so we are done so offered to there is no more unvisited add dissent leads back to one there is no unvisited ad descent of one leads back to judo now.

38
00:09:16,470 --> 00:09:27,360
Is there an unvisited ad descent of zero. Europe three but with the trees already visited so we cannot visit this tree. So we have no more choice we raised.

39
00:09:27,720 --> 00:09:38,950
This route in your decision tree now we are done we find it this day of his jammer sell list this is your answer. Let strict here another exemple for a better understanding.

40
00:09:39,630 --> 00:09:52,450
Let's assume we're given this graph data structure. In this grabbed a structure we have node. Zero one two three four five six seven eight April eight we have total nine notes.

41
00:09:52,770 --> 00:10:10,390
We'll create. A boolean erie. Do. I do Mark the visited. Atr marked visited node. This is our bullion erie to Mark the visited node all start from zero let's ride out our deepest ourselves right here.

42
00:10:11,958 --> 00:10:26,418
Zero. Okay let's Mark. This is your as a troll. Now let's start from zero. So we picked the doodle let's. Explore all the ad descent of the we have to add descent have zero.

43
00:10:26,778 --> 00:10:41,118
Our first one. Then three. I will first be here one. So let's pick one let's print here. And let's Mark one as visited. Note let's explore all the ad descent of one.

44
00:10:41,508 --> 00:10:57,298
We seaford one the adolescent is two and four Julius add descent but there is visited so we have to add descent that is unvisited. Two and four. So it will move in the lead up to your first to the left subtree as far as possible.

45
00:10:57,498 --> 00:11:13,008
Now here we have two. We'll select two so let's print here. Too and let's Mark index to as visited. Now for two we see that. We have only one unvisited verdict that is five so let's peek here.

46
00:11:13,518 --> 00:11:33,028
Of five and right here. Now let's print your five boom up to five and let's market five that vertex five or not five as visited. Now. Let's. Find it older at the stuff five the ad doesn't have five is two and eight only eight is unvisited.

47
00:11:33,318 --> 00:11:47,028
So let's print here eat and let's Mark your aid as visited. Now and doesn't up eighty seven at the center of eighty seven we have only to add doesn't when is envy visited so let's pick here seven.

48
00:11:47,448 --> 00:12:02,057
So let's print here seven. Let's print here seven and let's Mark this servant as a true. Joakim for seven we sit we have to add doesn't four and six. Only when i dissent we see the two dissenters unvisited.

49
00:12:02,365 --> 00:12:16,488
We have four and seven. Were bigger. Smallest developed first. So for. Now let's be cared for lead sprint here for. It's Mark four as. I've visited. Now let's move to left.

50
00:12:16,878 --> 00:12:25,488
Is there any decent offer that is unvisited note there is no ad doesn't afford to lead back here that start to explore i descended is unvisited all of.

51
00:12:25,998 --> 00:12:41,398
Four seven actually here which would have four and six not seven. Now let's explore the advent of seven that is unvisited he received six is unvisited so let's select six let Mark success visited and let's paint your six.

52
00:12:41,478 --> 00:12:53,838
Now let's explore all the ad descent of six. We see that. The ad descent of six. Three and seven threes only unvisited so. Are trees only here unvisited will be get three.

53
00:12:54,558 --> 00:13:19,068
That market as visited and lesbian tier three. Know is there any addition of trees unvisited know. So laid back here there's no. No i just didn't see that is unrelated to lead by pursuing that is not and doesn't observing that is unvisited leads back to aid that is Noah doesn't that is unvisited leads back to five that is no ad doesn't that is unvisited for two there is no Addison that is unvisited then.

54
00:13:19,398 --> 00:13:40,438
We'll move to one then here we see. The address at the Edison of one. There is no address that is unvisited so leads back here in Virginia that isn't the Edison that is unvisited so he cannot move here because far from one we get to go to Ford because what is visited and here we can add one two three because treat already visited so we are done.

55
00:13:41,898 --> 00:13:56,938
We find out this dfs towel. This is. The deepest hours of this graph. If our graph is disconnected let's assume we have here. Are two more nodes. Nine and ten.

56
00:13:57,138 --> 00:14:08,608
They are not connected they are disconnected. So we can find out your tree is set up nodes here web this one said this is wanted it is three said and we see that.

57
00:14:09,018 --> 00:14:21,868
We see see that. This is a this is disconnected graph how we can solve the disconnected graph. If we're given disconnected graph Hopkins drivers disconnected graph using give his algorithm.

58
00:14:22,248 --> 00:14:39,328
Superior to mortal we will have your. Two morsel. So. Eight nine and ten. And here we will have verdicts from zero to ten. When you start from zero we'll visit this entire graph.

59
00:14:39,588 --> 00:15:07,008
This. Entire graph so everything will have visited the newly moved to the node one. It is also visited we'll just skip that. So any move to eat. From one by one we'll move to eight and then we see this is alter visited when he moved to nine this is unvisited why what you will do will call or Davis function again our defense function again the defense function will add this nine tour de of his list and then it'll market astral then it'll move to tin.

60
00:15:07,608 --> 00:15:19,938
And. Then it'll print and the tin. It will add gin to our day of his list and it will. Mark this as visited. Oregon then there is no more functional so we can handle.

61
00:15:20,418 --> 00:15:34,128
The disconnected graph something like this. Now let's. Analyze the time and space complexity. We have here total. Out here we have for this disconnect rough we have total.

62
00:15:34,548 --> 00:15:47,088
Din we have total ten vertices. And total actually we have total eleven vertices and we have total is one one two three four five six seven eight nine ten we have total.

63
00:15:47,448 --> 00:16:06,718
Tin. Edges so the time complexity of this algorithm is. Off v plus he bizarre verdict is is the number of ages. We visit every single vertex and we visit every single ages so.

64
00:16:06,798 --> 00:16:20,478
This. This or this algorithm will dicks off. The plus each time complexity it'll fix his peers complexity off v for this bullion. For this boolean array to keep truck da.

65
00:16:20,958 --> 00:16:33,768
The visited node. Or the visited verdicts i'm saying sometimes nor sometimes seeing a vertex. Node and a vertex at the same king. Now let's implement.

66
00:16:34,188 --> 00:16:44,898
Our algorithm. Here we have a graph this is an ad descent list graph this is the address into the list and is our graph this is disconnected graph let's add here.

67
00:16:45,348 --> 00:17:05,158
One more. One more vertex. One more vertex so here we'll have a. Tin. Then there is connected to nothing. So it will have your two hundred that is disconnected this we have three set of nord so you can see here we have.

68
00:17:05,598 --> 00:17:20,988
This graph is just going from nine nine is is going to do from ten again so we have this disconnected graph. Now let's see how to traverse our graph using dfs algorithm first let's vault for dispersion for this connected graph.

69
00:17:21,468 --> 00:17:41,508
First i'm going to create. A boolean array to keep correct the visited keep track of the visited vertex so here the land of the. Limited Linda the visit visited bullion areas the number of norte we have in the graph so we can see graph dot sight eluding the number of nodes.

70
00:17:41,869 --> 00:18:00,208
We have in the graph. Now we have to create a list. List. Integer ooh. This list will store the north India of his order or Kim. So. New aerialist. New area list.

71
00:18:01,188 --> 00:18:13,668
Now let's color differs function givers i'm going to provide our graph then visited. Boolean array bin list. Then our starting vertex or starting vertex is zero.

72
00:18:14,088 --> 00:18:33,808
Then here i'm going to just eater it this list. Let's erase this list for integer. I. List and here let's print. Let's. Print. I Joakim now let's implement the dysfunction d f s.

73
00:18:35,088 --> 00:18:51,808
And right here. Public static void b of student life is void first it stakes this graph let's copy. This and let's best it right here. Then we have. A boolean array visited.

74
00:18:52,308 --> 00:19:07,582
Visited then we have list. Integer. List didn't we have have our starting vertex v. Our starting vertex is zero. We called with zero. Joakim. It will start from the zero.

75
00:19:08,023 --> 00:19:21,298
And. It will iterate from zero or it will iterate this portion disconnected abortion. Then. After sobbing this a connected portion will implement for disconnected abortion.

76
00:19:21,738 --> 00:19:45,298
Now here. First what we're going to do. We're going to. We're going to add this vertex. Wound at the vertex to our list so list dot add vertex. We're going to add our verdicts to this list and let's Mark our current verdicts as visited so visited vehicles do true.

77
00:19:45,498 --> 00:20:00,318
Now let's find it the ad just sent the adjutant list if we're given zero then we will. Decide your ad doesn't list ok let's get this list here. So. We have integer in the list integer let's call it a d j he calls to.

78
00:20:00,768 --> 00:20:24,808
Our graph doughty get a Wii. Now let's eater it this adjutant. List this ad descent and orders for one will recursively call again this and i will have this list again and here if we find anything is visited we'll skip that and then here it will call it to dual motor dysfunction and what we're calling this India of his endeavors fashion.

79
00:20:25,008 --> 00:20:39,124
So let's iterate this. At dissent. So integer that is called current or recurrent new regency current and a d j in a d j. Now i'm going to check. If the current is visited.

80
00:20:39,604 --> 00:20:54,494
So if visited a current if current is visited then all just continue. If our current is visited will not. A call or will not call a recursive function with that nord.

81
00:20:55,204 --> 00:21:12,554
Will not revisit. Same note twice and right below here. Let's call a dfs function if this condition is false if i were visited. A current if our current node is visited it will continue if it is not visited we'll call it Davis function.

82
00:21:13,054 --> 00:21:29,054
So dfs a graph. Visited. The list. Then our vertex decider where this is not now current is our current vertex so current. This is our core algorithm this is a recursive algorithm.

83
00:21:29,704 --> 00:21:45,554
Very very straightforward. Now let's run this. Let's run this good. If we found anything goes wrong we'll fix that let's run it. Let's print here. Print.

84
00:21:46,654 --> 00:22:03,134
Then let's add here. Empty string now let's run it. Or go get. Zero one two let's see. This is a valid day of hysterical and not. So. Zero one two. Then five.

85
00:22:03,454 --> 00:22:18,454
Eight. Then seven four. Then back six. Three this is a valid Jarvis diversity. This is our dfs algorithm to the core algorithm. For every single note recalling wheat.

86
00:22:18,844 --> 00:22:32,014
For every single node we have we have choice we have the choice for one equality to do that we have two choice because you have to add dissent when you call with one we have three choice and for every single node we hub.

87
00:22:32,764 --> 00:22:54,074
We have a choice. For each choice we have again. Again. We have different choice. This era will coral greet them. No let's. Outlet handle this disconnected graph how they handled his disconnected graph to handle this i'm going to create a separate function.

88
00:22:54,634 --> 00:23:03,644
Df helper dfs. Helper in dysfunction i'm going to call i'm going to call this function with only the graph are going to send cinders drop to dysfunction.

89
00:23:03,934 --> 00:23:17,464
And here i'm going to remove everything. Now let's implement. The function dfs helper right here. Public static. It'll return our differs at diverse. Okay public static list.

90
00:23:17,884 --> 00:23:31,634
A d f as a helper this function takes only. That graph. Only this graph so let's copied and let at. Best it inside. Only one parameter for dysfunction.

91
00:23:31,834 --> 00:23:48,524
Or inside your i'm going to create. I'm going to create a boolean a boolean area for visited erie so visited. He called to new. New bullion. And the site is just number of notes or grabbed on site.

92
00:23:49,654 --> 00:24:08,224
Now here i'm going to create our list. To store the. Dorsal so list in danger. Listicles to new area list. Now. Right here. What i'm going to do i am going to eater it every single night for.

93
00:24:08,554 --> 00:24:23,404
A for ain't i called two zero i less then grabbed at. Sige. I plus blech. Here first all call with zero. First it'll visit or to traverse this a portion of this graph.

94
00:24:23,734 --> 00:24:33,244
No limit to one. The one is visited when he moved to two twins visited one of the nine and is unvisited will call the vif at the day of his function the default def is.

95
00:24:33,874 --> 00:24:48,544
This differs a function. Inside this loop right here so let's do it first. If we saw. If we saw. Our current note your eyes are curried node first eyes zero then one then two then three.

96
00:24:48,874 --> 00:25:06,074
Up to ten. Either current node is visited will just continue. Your current node is visited ybor current node is not visited we'll call this dfs function we that graph with the given graph then visited erie then our list.

97
00:25:06,484 --> 00:25:17,684
This beavis sorry this is Davis not. A beavis i'm so sorry guys. So this d of his function recalled his defense function. And we call with a recurrent note.

98
00:25:17,914 --> 00:25:31,204
I. When he called his functions if this condition is fault it means that this i is and visited. So. This is how we can handle our we can handle our disconnected graph at the end here will return this.

99
00:25:31,564 --> 00:25:46,274
List. Now let's print this list. Let the rest of this list right here. And we'll just erase the list so integer i in df is helper. And le promote your graph.

100
00:25:47,014 --> 00:26:03,674
And it writing said i'm going to just print. The velo of the list. Let's remove dysfunction call. Alright this is over. This is your function call we call this function it's written a list and reduced iterating this list now let's run this good.

101
00:26:05,854 --> 00:26:22,504
Here let's remove il in. Let's printed it one line. Let's run it again. Okay we get Judah one two five eight seven four six three nineteen so we handled our disconnected graph this is how we can.

102
00:26:22,834 --> 00:26:34,714
Handle our disconnected graph desert. Visage. De. Accord for our algorithm i hope you have understood this read explanation. This is a recursive algorithm this is.

103
00:26:35,044 --> 00:26:49,714
A really really interesting. Using the same pattern. Will clone graph. We have. A discussion gluon graph this is a very very popular recording interview questions we can clone the graph using the same pattern.

104
00:26:50,104 --> 00:27:00,934
We used. In this video. Forget using the same algorithm make sure he understand this algorithm if you aren't understanding this algorithm please review was this video.

105
00:27:01,414 --> 00:27:14,264
Was the explanations apart i then tried to relate that to with discord. I think you will understand. Still if you face any problem if you have an issue post your question on the key uniform.


@@@
1
00:00:00,000 --> 00:00:12,940
Welcome back to this video in this video we're going to solve this coding interview question number of islands. In this problem we're given. An m by n dirty binary great great.

2
00:00:13,440 --> 00:00:39,940
With repentance a map of ones and zeros. Once means land of and zeros means water we have to redone the number of islands the greed contains. And this is the definition of island and the island is surrounded by water the island is surrounded by water that means that want that is gonna get horizontally or vertically that is surrounded by.

3
00:00:40,050 --> 00:00:52,750
A ge Euros. Let's tee this definition an island is surrounded by water and is formed by connecting edges into lands to add just sent land horizontally or vertically.

4
00:00:53,040 --> 00:01:07,450
You may assume all four edges of the greed are surrounded by water that means at this ages this is one is two tourist three is for us this all ages. Are surrounded by waters we can assume that.

5
00:01:07,560 --> 00:01:49,540
For examples for examples if we're given this great. In this great we say that we have ones and zeros. We have vellus ones and zeros. The lands are connected horizontally or vertically this one is connected to this one this one is to get this one because we have to consider horizontally and vertically this one is not connected to this one that's because we don't cure da diagonal connections we can only or horizontal or vertical so this is a horizontal this one and this one is gonna hurt mentally on this one and this one is connected vertically and here this one is connected to this one.

6
00:01:49,710 --> 00:02:04,710
A vertical lift and two this one horizontally and so on and also this one is going to do this on order generally this one is going to do this one. Vertically and here as well this one is going to do to this one this one is connected to this one and this one is connected to this one.

7
00:02:05,280 --> 00:02:34,230
Also this one is connected to this one so here we see it we have total one islands. So we have to written one. For example the pigment this great in this great reason that we have once or jurors right we have ones and zeros one are connected horizontally and vertically right the land are connected horizontally or vertically here we see that one is connected to this one.

8
00:02:34,590 --> 00:02:55,230
This one is connected to this one and this one is connected to this onto this is one islands can see this is on island. And here we see this one is candidate diagonally we don't consider the diagonal connections we care only a horizontal or vertical connection so this one is not part of this island this is on separate island and here we have.

9
00:02:55,800 --> 00:03:05,770
This island so we have total three islands India's great to have written three. So in this volume we were given a grid read that contents zeros and ones.

10
00:03:06,360 --> 00:03:16,470
And we have to find due to the number of islands we have the islands are connected. Horizontally and vertically. This is the problem now let's see how does all destroy them.

11
00:03:16,860 --> 00:03:29,320
This is a standard grab problem we can solve this problem using dfs diversity so. If you haven't solved the problem in this section dfs diversity of a metrics.

12
00:03:29,790 --> 00:03:42,000
Please watch that video first. If you understand the video. If you understand the video how to diverse metrics using dfs algorithm then this is going to be very very easy for you.

13
00:03:42,420 --> 00:03:54,180
Let's assume or given this great. If we are given this great if to find the number of islands. How we're going to solve the install it using dfs algorithm.

14
00:03:54,510 --> 00:04:09,060
First ping what we will do. Will iterate these metrics using two nested fall of we know that how to iterate the matrix using two nested fall of right will start from this index is your doodle will start from here and will.

15
00:04:09,420 --> 00:04:22,980
Enter it in this order one one then on one zero one one zero one zero and so on. We'll just traverse this matrix one by one. While traversing if we find out.

16
00:04:23,310 --> 00:04:38,250
If we find it once. That is a land right. If we find out won't. Work we will do we'll call our Davis function with that index. So here if argument is great we we are at the first tower so.

17
00:04:38,700 --> 00:04:53,410
At the first step we will see our value is zero at this index. Zero zero will run in simple follows will run a simple. I'll fall of Joakim he will have the value of i and ii rule of the value object.

18
00:04:54,060 --> 00:05:07,180
And here Eve we saw our current. Our current velo is one we will call it dia of his function. Now let's see how to solve this problem so first we will see we have one.

19
00:05:07,830 --> 00:05:22,690
Let's start at index zero zero. All start at index zero zero. Okay. So we will call our deepest function century find it on and we will have a counter variable where will have a counter variable.

20
00:05:23,010 --> 00:05:55,650
In the counter available we'll keep track our up. We'll keep truck the island initially our count is zero. When you find out our element one will increase the count by one and we will call our defense function with that index and in the dfs function using the dfs function what we will do we will showers we will traverse all that connected the lands or all the ones that is connected or generally or vertical it will traverse all the ones that is connected to.

21
00:05:55,980 --> 00:06:08,590
A horizontally or vertically. Will inherit this island. We noted how to erect this island using the officers. Now let's see how we're going to solve the stolen using gear his algorithm.

22
00:06:08,670 --> 00:06:22,210
Will inherit every single element of this matrix when he find out a certain element is one we'll call our dfs function using the dfs function what we will do we will traverse.

23
00:06:22,350 --> 00:06:34,600
The islands the entire islands all the elements are all the ones that is connected at. A horizontal or vertically and we will update that one by zero.

24
00:06:34,803 --> 00:06:46,470
Will update that one by zero. So here all started with this once we'll update this one width zero. Now. We have to move. In four directions we have four direction.

25
00:06:46,800 --> 00:07:08,440
First one will go down. Then we will go off then we'll go right. Then we will go leapt. We have this for directions he can use any water of this direction are you going to his first arrived lived a double down off you can use any water that doesn't matter but if you follow that order for the rest.

26
00:07:08,640 --> 00:07:21,060
No at this point we will just update this one with zero. Instead updating the. One instant updating the one with zeros we can create auxiliary matrix with the same size.

27
00:07:21,510 --> 00:07:33,960
That is a boolean matrix to keep truck the visited cell. And using it using that dramatics all I'll just Mark the visitors so when we jeopardy smarttix one by one we will just.

28
00:07:34,440 --> 00:07:47,430
We will just escape if we saw our current element is visited. Here we can optimize display against augustana in constant space compensated by updating the metrics in place.

29
00:07:47,790 --> 00:08:02,020
We have one here and we will. Choose these directions from zero zero we have for choice we can go to down we can go to off we can go to write or we can go to lipped so they say that we're down.

30
00:08:02,100 --> 00:08:16,680
Then off. Then. Right. Then left. Are here if we move down we have to add one to this ruin dick's the ruined exit zero and column index is zero so we'll get one zero.

31
00:08:17,100 --> 00:08:37,090
So we'll move to this. Now here again we we have four choice. Before. Making our choice or what we will do we will. Will replace this one with zero since have visited we're just exploring all the lands that is connected and we're just updating that with zeroes.

32
00:08:38,610 --> 00:08:48,720
Wait we're doing this we'll see it just let me go through this algorithm now. So here we have wanted from here we have this direction down of right left so first down.

33
00:08:49,140 --> 00:09:07,170
He proved to doubt we get. To zero and we see two juries want to let aptitude with zero again from here we have for choice. Now from two zero this is our current element get him to down here done zero we cannot water down down is not our.

34
00:09:07,680 --> 00:09:21,390
Connected land. Can go to have no office already visited or against the Eve of is zero. We can use woolen metrics or even updated epistle opposite it will not do that of is zero so we cannot go to the f.

35
00:09:21,810 --> 00:09:34,840
Clinical to the right here. Yes. The right is one. So let's move to the right in her daughter right we have to add one to our. Wonder column index that we get to one to let admitted with zero.

36
00:09:35,250 --> 00:09:47,670
Know here again we have four choice. From here can you go to down note we cannot go down can you go two of us we can't let go of so old substrate one from our index we get one one.

37
00:09:48,330 --> 00:10:01,120
So let's update this with zero. Note again from here we have four choice. Can go to down no he cannot go down kindergarten of years we can see so we get zero one.

38
00:10:01,380 --> 00:10:15,630
Let's update this we're just exploring all the connected land and we're just. Abetting with zero and here. We have again for choice from judo and Kenny go to down nor can he go to earth there is nothing on that off.

39
00:10:16,140 --> 00:10:26,366
Can he go to ride yes we can go to the right. That's good right he will go to right order we'll get we'll get zero to index. Right we have one more choice here we'll.

40
00:10:26,816 --> 00:10:44,066
We'll see when all back to this. Central moving in dfs manner we're trying to we're trying to move in one direction as far as possible. Now here we visited these actually due to that market as vis it can go here down no can you go to off nor can you go to write yes we can.

41
00:10:44,426 --> 00:10:59,233
So we got the right order will get we get zero three. And here again we have four choice. Kindergarten down from Judas tree yes we can go down if we go down what we will get here we will get.

42
00:11:00,296 --> 00:11:15,876
One. O one three. Right. So let's update it. First lit up it this one him up to two or three with zero now we can move to down. To down we will obliterate with zero so here we have again for direction.

43
00:11:16,286 --> 00:11:27,606
But he received we cannot go down we cannot go to off we cannot good rider cannot go to left so let's backtrack. We can go to. Down off or right or left.

44
00:11:27,716 --> 00:11:38,496
So for jura three. We choosed down can you go to or from jittery no can go to right nor can you go to lipped no that's because old adolescent of zero is.

45
00:11:38,606 --> 00:11:52,016
Of this. Element is zero and on the trophy of naughty. So let's move to this injured or two from your wish that we have no more choice so he cannot go to writer can go to leapt and from here can go to leapt from zero one.

46
00:11:52,556 --> 00:12:10,046
No one or zero and similar for all the cages we have no more choice left so we have updated our we have updated our connected land our current island with all gyrus so we lose our current islands.

47
00:12:10,376 --> 00:12:29,676
We don't have access to our current island we just updated and we keep track the number of island so we have articles to one. If we want this August without modifying the given greed what it can do again create a boolean matrix to keep track the visited the visited cell.

48
00:12:30,026 --> 00:12:45,666
If we saw the visited sellers visited we can skip that also again soldiers this by mortifying the given. By modifying the. Dot given great input. That will be efficient that's what we're doing this.

49
00:12:46,106 --> 00:12:58,976
So at this point we hip or when it started ga we updated alda. Connected once. Now let's move to this digital one. This is zero's all escape it zero zero zero.

50
00:12:59,306 --> 00:13:10,796
Zero zero zero enable eater at this intermatic so we have no more than one so if we have no more one we have no more Lance so we have only one islands in the great oil written this one.

51
00:13:11,126 --> 00:13:24,746
This is how we can solve the stolen this is a step forward and this algorithm would be something like this will ever to nest at fall of and here at first Allah bro index it'll start from zero and here we will have column index it will start from zero.

52
00:13:25,286 --> 00:13:45,866
If we saw our current if we if we said this is our greed g. And at ero and add. Column if we saw. One. Then we will call our Davis function. And we will just increase our count variable count plus blood and let's call the of his wanting the difference function will.

53
00:13:46,286 --> 00:13:58,116
Allow the quality of his function with their current true and current column index. It will find it all the connected lent or all the connected one naughty John daly or vertically horizontally or vertically.

54
00:13:58,286 --> 00:14:17,106
It will admit that with zeros. And if we find that again one in an inland that means we have another islands so we'll just incase our code and. Let's assume we're given this greed is good we clearly saw that we have one island to island three on and we have here total three island one two three.

55
00:14:17,276 --> 00:14:27,686
So even given this. A great after written three. So we will have a count veritable will have count available in the count we have initial zero. So let's iterated first.

56
00:14:28,196 --> 00:14:44,316
U'll have the index zero zero one we find it on so we'll call it dfs function with the index of current element. So zero zero. From here we have four choice we have four choice first down then off then right.

57
00:14:44,966 --> 00:14:56,606
Then lipped. You can use any ordering but here i'm going to use this order. Sir down can i go to down here yes so since we have selected this let's market art legend updated with zero.

58
00:14:56,996 --> 00:15:09,476
So let's go to the lips and he moved to left this is our down this is down. This is off this is right and as he slept. So he moved down will get one zero.

59
00:15:09,896 --> 00:15:31,376
We can have two down because we have one on the down here. So this is one let's operate with zero here again we have four choice. We have four choice down a kennel down down is zero we can go to off because op is already admitted with zero and here we have the right varieties on a can go to right so we can go to right let's go to the right so get one.

60
00:15:31,736 --> 00:15:50,400
From here again we have for choice. Again we have for a choice for this element one can go to down. Let's update this first with zero. Can go to down here no done zero can i go to have years we can go to af so he removed after we get zero one will just stop someone from our.

61
00:15:51,026 --> 00:16:03,506
One from this ruined x again here we have four choice can you go to don't know from zero one. This is less admitted to the Zurich and i don't know can hurt of not going to go to right now can your lip know.

62
00:16:03,926 --> 00:16:15,709
From here we will be back to this one one and here we see that we cannot go to ride we can go to leaped and he received cannot go to leaped leads back here we cannot go to off from zero zero.

63
00:16:15,836 --> 00:16:24,236
Begin and good right right is zero we cannot go to lift. We have nothing on the left so we are done. Or so eat we have called our deepest function once let's.

64
00:16:24,776 --> 00:16:37,616
Increase discount. One. Now now let's iterate we have zero injured zero zero. Zero zero zero zero zero zero you one not here we'll call. It dfs function with this index to do.

65
00:16:38,366 --> 00:16:50,726
So let's quantity of his function with two two. And again here we hip afford to isolate abetted with zero. Here can go to. We have this direction down know it can go to af know we're going to go to leapt.

66
00:16:51,042 --> 00:17:03,575
Can he would write nor can you really know so. We cannot move in any one direction any direction so he recalled the of his function it will just be developed with digital let's edit our metrics again zero zero zero zero.

67
00:17:03,896 --> 00:17:17,696
One now we find it another one. Before moving that inquiry have found one it means we have another we have another islands. We have to just increase our count at this point we call a different function to them took articles two.

68
00:17:18,536 --> 00:17:31,376
Now let's call our function for this index three three. So three three. And here again we have four just going to go down no. Let's update first so we get zero.

69
00:17:31,856 --> 00:17:46,826
Can go to af know it can go to write years we can go to right so we get three four from three or four can go to in any directions. That average with zero cannery move from t v one to any direction can i go to down no can go to.

70
00:17:47,426 --> 00:17:58,656
Avenue going to go to write not going to go to lift know and here can you go to leaped. For this three three. No we cannot go to left so we are done we have color difference function to time so.

71
00:17:58,886 --> 00:18:08,156
Critical to three. This is your answer we have total three islands. This is how we can solve this problem. Now let's explain the time and space complexity at.

72
00:18:08,816 --> 00:18:21,926
The time complexity of this problem. Let's assume we have a great off. Of with him and of height and so it takes off in terms in time complexity central calling a dfs function.

73
00:18:22,286 --> 00:18:32,306
Recalling your dfs function. If we have all the ones in our given great for the worst catch all traverse our matrix twice will traverse our metrics twice.

74
00:18:32,636 --> 00:18:50,426
So it'll Dex total. To a two. Or we can see em times. In pass. Him times in. Time complexity and that is equivalent to off. Him times in and a space complexity is constant because you are not using any additional data structure.

75
00:18:50,756 --> 00:19:01,926
If we was another bullet added to keep track the visited so that all decks of 'em times in space complexity but for dissolution we're solving in place it would expect compensated you to one.

76
00:19:01,976 --> 00:19:16,056
If you're not allowed to modify the given great we can use a boolean matrix we can use billion metric it's to keep truck the visited and to keep track the visited cell and that oil takes.

77
00:19:16,226 --> 00:19:28,296
Our space complexity of em Thompson. But for this problem we are modifying the given grid in blitzer it will take space complexity of one. Now let's implement our algorithm.

78
00:19:28,766 --> 00:19:43,466
First thing we're going to create a counter available to keep track of the number of island we have initially conical to zero now let's iterate our great so in our he calls does your row index articles digital art is less than.

79
00:19:43,796 --> 00:20:00,836
Greed dot lint. I plus blech. Authority here. We should have our plus blood. Now right inside here for int c he calls digital for column index will see is less than great judo dot length.

80
00:20:01,196 --> 00:20:16,856
This is the length of column. Then here c plus split. Know here i'm going to check if our car and he power current character we're given a character or not given the number so we have to check the current character.

81
00:20:17,186 --> 00:20:29,216
If we see our current character greed r c e b your current character is equal to one if current character is one what we'll do we'll add one to our cowan.

82
00:20:29,696 --> 00:20:44,696
We'll call our dfs function. Will call our defense function right here with the given ruined x column index and we have to provide the greed so. We're calling this difference function with the ruinous and column index if you find it.

83
00:20:45,236 --> 00:21:02,246
A refined out element our character one will quality of his function. To override all that connected once. A horizontal or vertical it with zeros. Now here let's implement dysfunction dfs to public and static return type is void.

84
00:21:02,576 --> 00:21:15,486
That is a delusion nothing. Is certain type is white dfs function. It takes three parameters char. Char greed this greed then ruined x and column index.

85
00:21:15,806 --> 00:21:26,306
Will implement dysfunction dfs recursively so we will have a basis for recursive function we know that we have biscuits now let's validate the raw index and column index.

86
00:21:26,786 --> 00:21:40,686
So Eve raw index is less than zero or ii if raw index is greater than or equal to the Linda Paul roll so let's find out that it's a great dot lint. Or.

87
00:21:40,886 --> 00:21:51,683
Now let's validate our column index or here if c is less than zero if calling unix less than zero or if we saw. Quality index is greater than or recalled to.

88
00:21:52,016 --> 00:22:15,026
Agreed. Zero dot length. The column index is greater than or equal to the length of column. That means. The column index is invalid or if we find out and if we find out our current character is zero if our current character is zero what will you will do will just return we'll just exit from that function call.

89
00:22:15,506 --> 00:22:29,606
Because we cannot move in that direction. Know here. If we raise this line it means that our row index and column index is valid. To what i'm going to do.

90
00:22:29,966 --> 00:22:48,726
I'm going to Mark our ruined decks and column index with a zero so let's. Let's Mark our current character with zero. We have to market with a zero. That's because you're losing character this is not a number were given a character great.

91
00:22:49,406 --> 00:23:04,946
No. Here you will have a recursive cage we have to call a function for each function call we saw that in the explanation part we have for a function call for each function call we have for choice so for each function call we'll have four different function call.

92
00:23:05,276 --> 00:23:20,406
First we'll call with down the oil. Or call it off then right then lipped he can use any water you want. Yet i'm going to follow this order. So let's call him a d of his function dfs let's provide our great.

93
00:23:20,456 --> 00:23:33,146
Then let's go to down so we have to add one to a row inner do a move to down and our. Our a column in Dixie. Neighbor moved to we want to move to af let's call it.

94
00:23:33,476 --> 00:23:46,716
So dfs greed. Are minus one. Hundred and two off if the substance on from our current i wrote we have to move to one. Row off and here we have just see.

95
00:23:47,576 --> 00:24:01,266
This is more of now for the right dfs agreed in order to move to right we have to add one to our. Column index. In order to move to lift dfs greed. R and c minus one.

96
00:24:01,886 --> 00:24:17,246
So this function. Will this function call will move to and we'll call it with the left element of our current element. This is a straightforward algorithm if you understand how to traverse a metrics using dfs algorithm this this algorithm is going to be.

97
00:24:17,576 --> 00:24:27,926
I'm. Going to be easy for you i hope you've understood this video explains the signal algorithm and the time complexity of this algorithm is o of m times and it'll Dixon.

98
00:24:28,376 --> 00:24:39,306
Off to term symptoms integral and ethical one and two of 'em dams in and a space complexity is constant because we're modifying our greed in place and yet when modifying are great.

99
00:24:39,806 --> 00:24:56,436
This is how we can solve this problem. As all when we when we are done with this aloof we will have answer in count. At the earliest written count. In the convertible we will have the number of Ireland we have no recurrent great now let's around is good.

100
00:24:58,376 --> 00:25:13,566
Accepted that submit it. We have solved this problem successfully i hope you've understood this video explanation if you have any question guys post your question on the q and a forum thanks for watching this video.


@@@
1
00:00:00,510 --> 00:00:15,280
In this video we're going to solve this coding interview question island perimeter. In this problem you're given a great. We can see metrics. Representing a math hire great article to one.

2
00:00:15,330 --> 00:00:30,520
Repentance land and great articles digital represent order so here one means. Land and zero means water. The greed cells are connected horizontally or vertically not diagonally.

3
00:00:30,930 --> 00:00:46,030
The grid is completely surrounded by water and there is exactly one island. It means that one or more connected land sale we have exactly on eye island in the given great.

4
00:00:47,490 --> 00:01:03,233
The island doesn't have a lake meaning that water inside isn't connected to that water around the island. One sill is a square with. Side length one. The greed is rectangular.

5
00:01:03,420 --> 00:01:15,000
We see that width and height don't exceed one did digital mine. The Peter meter off the island. For examples if you're given this great disagree due to present or something like this.

6
00:01:15,420 --> 00:01:37,210
Zero one this is zero zero means water and one means land this is a land. And. We are representing the land using this color so we see that the connected land art this so here we have one island in the problem statement we saw that we have exactly one island in the great.

7
00:01:37,380 --> 00:01:49,090
We have defined the perimeter of the island here we find it at this island okay this is our island let's find out the pyramids or. So oh here we have these.

8
00:01:49,290 --> 00:02:03,390
Up this land. And we here we saw that. Is still. Or one silesia square. The sidelined each. Side. Length is one to the pyramid you're here let's calculate the perimeter.

9
00:02:03,720 --> 00:02:19,270
So this is all this aside. The length of this scientists once at one plus one two three four five six seven eight nine ten. Eleven. Twelve thirteen. Fourteen.

10
00:02:19,440 --> 00:02:35,530
Fifteen and sixteen and here we see our pyramid perimeter is a sixteen. The pyramid her. Is that sixteen yellow stripes sixteen Isla tribes in the images above and we can see that.

11
00:02:36,480 --> 00:02:55,740
I hope you have understood this problem. For example to ever given this greed we know that for once and we have afford sites so that perimeter is for and if you're given one zero so here we have island only one so for one we have four square we have foresight after the pyramid or is four.

12
00:02:56,220 --> 00:03:07,440
I hope you've understood this problem statement now let's see how to solve this problem. Let's assume we were given this great now let's see how to solve this fallen.

13
00:03:07,920 --> 00:03:28,170
This problem is similar to the problem we just solved number of islands. Let's see how to sell destroy him using the same approach. First thing what we will do we will traverse the entire the entire matrix using two and instead fall of.

14
00:03:28,530 --> 00:03:42,310
The first zero then one then zero zero one one one zero zero one zero zero two and so on. In the public statement or is or that we have exactly one islands so we have x sadly one islands.

15
00:03:42,960 --> 00:03:58,000
Epic tavern does my tricks. If we find out sl sl is one. If we find it is still with value one bin we will call our defense function. By the dfs function we will.

16
00:03:58,110 --> 00:04:11,370
We will explore all possible connected lands against a. We you'll. Explore our islands. Using our dfs function. We already saw that in the previous video.

17
00:04:11,880 --> 00:04:28,200
Or we solved the problem number of islands. So first we have zero zero. For us to have zero zero Europe zero. So all Conner Davis function now we see here when the rest decyl we see one so we'll call our Davis function.

18
00:04:28,770 --> 00:04:43,240
Let's call our differences function with the index of de seulement. Les right out here. So zero. One. The index. And we'll have your our direction. I will follow the same order.

19
00:04:43,950 --> 00:05:04,420
That i followed in the previous video first down. Then off. Then right. Then lipped. He can use. Your own ordering. No problem. You don't work just fine so we have this ordering will follow this ordering so for us so far zero one we have for choice.

20
00:05:05,460 --> 00:05:24,010
We have four choice. First four down. Then four of then right. Then lipped so we have this for choice. Save recall a recursive function or you'll have four choice that will call the same function four times.

21
00:05:25,410 --> 00:05:39,760
Now here only moved to Darwin came up to down. We see that. We see that we can move down and in his estate in his estate will have a count available. We will have a count available.

22
00:05:39,810 --> 00:05:53,230
So here county goals to. Zero in each state will have countered edible so critical to zero now. So here let's move to down. Even when two down here we get this so one.

23
00:05:53,310 --> 00:06:14,650
One. From here again we have four choice we have from here again for choice. And when we visited zero one. Somehow. We have to detect that we have visited already zero one whip the market but in this moment we cannot replace the fellow one with zero.

24
00:06:14,760 --> 00:06:25,510
Because if we find out zero we have the sight. Of the square so for one side we have the lint one will be written one but he refined it to zero that's a problem.

25
00:06:26,040 --> 00:06:42,760
So we will. We will use a boolean matrix a bullion metrics to keep the visited note. Or the visited cil or we can just a multi-ply the visited fill it with minus when we multiply then we'll get here minus one if we see negative elo it means this is visited it.

26
00:06:42,900 --> 00:06:56,220
We're given only doodles and once the magic's contains only dearest and once so if you find out wood. Sl one that is visited. If we visit as it will multiply itself by minus one so we can.

27
00:06:56,730 --> 00:07:10,403
We can say in the future if you find out a negative elo at a certain sale begins that is already visited we cannot revisit that. Okay so here we have visited this zero one.

28
00:07:10,440 --> 00:07:24,490
Now let's go to down here we have one one. So let's Margaret as visited. What i'm going to be here and would emit for choice from you're going to go to down yes we can so let's go to down a pagoda down or you'll get.

29
00:07:24,630 --> 00:07:38,860
Let's go down we will get. A two one. Right. So to one. Letter marketers visited from here we have again for direction. Can i go to down ear as we can so three.

30
00:07:39,240 --> 00:07:54,600
One. And here again we have fourth choice. And in easiest it will you will have account available here will have account available there is zero he had also will have account available that is zero here in this estate will have account available which is also.

31
00:07:54,960 --> 00:08:08,677
Zero. Now from here Kenny go down. Let's think about it can we go to down from here. Let's market first. Cannibal don't know we cannot go down he will try to go down we are out of bound.

32
00:08:09,000 --> 00:08:21,540
If we are out of bound we can see we find out. We we raised the boundary we exceed our boundary so we have the length of the side that were exceeding one.

33
00:08:21,960 --> 00:08:37,240
So here for this lip apt. When recall with this down for this will written one this is our basis. If we cross the boundary or even find it a value that is zero.

34
00:08:37,320 --> 00:08:48,150
If you find or develop in his cell zero alter will return one. So for this leapt alert and one will just add this one to this count so this county not wanting to assist it.

35
00:08:48,780 --> 00:09:03,970
Now let's go to f. Our second choice. Can you go off here. No appease already visited Eve with a visit visited will written zero. Severe if we add the to discount that we get one.

36
00:09:04,380 --> 00:09:23,770
Let's go to this direction. Right kennywood right no we see radical two zero on the right we have zero. St refined to zero it means that we crossed our boundary right it means we crossed one side of Linda one so here we'll just written one universities.

37
00:09:24,300 --> 00:09:36,330
Do this is squire this is the. This is our arm obvious square right of this rectangle square to the small rectangle of size one so is caused at all written here one.

38
00:09:36,810 --> 00:09:48,885
It would return one all add this one to recount what we'll get we'll get to at this point. So we are done. By selecting this this. So here we returned on.

39
00:09:48,930 --> 00:10:02,220
Now let's try to move to leapt can he move to left here. We're done by this trickle right for. A down off and. Right now let's go to. Lift can go to lit yes we can.

40
00:10:02,550 --> 00:10:21,840
So. Three. Zero. And. Thirteen. For sure will return invalid will added below right here. So first let's solve this. From here. Kenny go to Darwin. Years we can actually cannot go down from here at market is visited before that.

41
00:10:22,290 --> 00:10:33,736
Can go down here no we tried to go to Darwin we see it we crossed boundaries are only written one. Because we're crossing our arm awfully into one. Here will have a count zero.

42
00:10:33,785 --> 00:10:51,930
Will have e one. Now let's try to go too often can you go to off here. From three zero can you go too often. We see zero this is a boundary actual this is not a boundary this is a water this is a laker can say so we have a a boundary here in between this lake and this land.

43
00:10:52,290 --> 00:11:03,000
So we are crossing this arm or plan to one will just return here one again. So it will add one your account will get here to. Know let's go to this right.

44
00:11:03,300 --> 00:11:14,310
Can you go to right from here nor write is visited. Since visited will return zero. Didn't lipped. Can he could lift that we cannot go to the left but digital boundary.

45
00:11:14,640 --> 00:11:27,670
This is our boundary. For sure we're crossing this arm so we have to add this to our auto account here so let's read and here one. If we do that we get hit three.

46
00:11:28,200 --> 00:11:39,180
So up until this one by solving these these days we get accountable to two. And no he returned three so here we will written three and will add this three to this.

47
00:11:39,540 --> 00:11:49,750
So we'll get your articles to five. So by solving the lift up to one. By solving the lead up to what we get here five. Now let's back to this minus right here.

48
00:11:49,860 --> 00:12:08,160
To this sl. From here we moved her down and we get five. By the downs from here we'll written five these five. Now here can we go to off we already moved down can you go to our from here knew all this the boundaries so here we have to return zero.

49
00:12:08,610 --> 00:12:27,940
In this direction we will return. Zero. Then here we have this right category right from here we see we cannot go to ride up because we have zero the right is our lake the potable lake but we're crossing his arms so let's return here one.

50
00:12:27,990 --> 00:12:41,410
So we get here one so here we get five here we get whenever we add add add the tour count we get here canticles to six. Now. Let's try them up to. Now let's try to move to leapt.

51
00:12:41,460 --> 00:12:52,180
Kenny Moore to leapt right here can he move to lipped we cannot because the lip is part of a lake but we're crossing here the arm of lent one to let a return here one.

52
00:12:52,350 --> 00:13:06,520
So let's return here one so let's add this one to our. Art to our. County or we get seven. So from on on. By moving it down here we see that we have peer to meter.

53
00:13:06,720 --> 00:13:19,960
Seven and we can count that one two three four five six seven. One two. One two three four five six seven. So by moving down from. One to one we get seven.

54
00:13:20,100 --> 00:13:33,970
Now our decision to discount we get chronicles two seven oh let's try to go to Afghan or go to of. Go to off here from one one. Week you can see Henry from here or try to move to the lip we get asked him on the left we have.

55
00:13:34,050 --> 00:13:47,820
We have lake. So from here he tried to move to Alpha this is not the arm that is separated from that far. From the lake. The island is not separated from the late by disarm so we cannot read and hear one will written here zero.

56
00:13:48,330 --> 00:14:05,080
Mechanical two right here. Can go to right from here one yes we can go to right so let's go to right so you get one too. And from one two we have again for direction from one too ignorant for detection and here also we will have our count.

57
00:14:05,130 --> 00:14:23,730
From. A from this Kenny moved to don't know. This is separated by what lakes are all written here one. Let's add one to your comment. Then let's try to move to Afghan a move to afd no of Israel these are the paraplegics and disarming separated this island from lakes all written here one again.

58
00:14:24,150 --> 00:14:36,900
So we'll have articles to two. Then let's try to want to write can remove two right here. The right is separated this right is a lake right so this army separated our island from lake solid and written here.

59
00:14:37,260 --> 00:14:47,400
One. Again littered in here one. So we get here canticles the tree. Now can he go to leapt we select his visitor a candidate lipped so he ripped a written.

60
00:14:47,730 --> 00:15:00,310
Zero. And at this point. By selecting this we get seven. By moving to this by moving down and get seven moving out we. Were moving advocate at zero by moving.

61
00:15:00,480 --> 00:15:13,230
Right. We get three so let's add three. We get here ten. Now hear this direction from one organic Guinea group who leapt. From here it can get clipped and we have demanded since we have visited this.

62
00:15:13,770 --> 00:15:29,080
Now from here can Kenny move to lift yes so let's move to left. So we get. At one zero. Now here again we have four choice. From here can agree to. Let market can you go to Darwin.

63
00:15:29,370 --> 00:15:45,390
That one is the part of Blake so all written one. This this. Disarm. Is. A separating our lands from our licks origin one. Let's start him up to off. Tulip county goes to the runner to add on to her account so we get one.

64
00:15:45,990 --> 00:16:00,490
Now let's try to go to of. A p zero so this. Arm separated our island from lick so let's add one. So. Let's add count to count so we get to. Can i go to right no right is visited.

65
00:16:01,560 --> 00:16:13,830
So here we have to return zero. Kenny go to leapt. We can assume on the left Blake this armor separated our island from lick. The Linda armies onto all at one so let's return here one.

66
00:16:14,280 --> 00:16:32,550
If we add we get three. You'd be at this tree. Here what we will get. What we'll get we'll get to tin. Saw. From zero one it will. Be moved to a move to down we see that we have the perimeter of dispersion the pyramid of dispersion is.

67
00:16:32,880 --> 00:16:52,320
Turgeon. Here we see that our pyramid is starting exactly turned into a PR move to Darwin from the cell we get our pyramid at thirteen. Two hundred and thirteen and will add discounts will get critical to thirty we can count that right here so one two three four five six seven eight nine ten.

68
00:16:52,740 --> 00:17:14,290
Eleven twelve thirteen. Now from here. We moved down nor can he go to off from here. If we see that. The off we can say the off we have on the of lake this is the part of lake all the ages are surrounded by water so we can assume visited our lake this portion is our lake.

69
00:17:14,400 --> 00:17:25,510
And the arab Porsche is our lake so here we can assume this arm separated a separated our island from lakes oil read on here one. That had one to this we get fourteen.

70
00:17:25,620 --> 00:17:39,300
Can go to write read Israel public so let's add. So let's add the lint of this. Arm so. It's written one and let adere one. Can equal the lipped facility zero this army separated our.

71
00:17:39,840 --> 00:17:52,920
Island from lick so let's rate in here that you're illiterate in here one actually so let's add one to our count we get here sixteen. Now we have no more choice for digital one we find out our answer.

72
00:17:53,310 --> 00:18:05,530
Since we returned. This velika to this function call to the city of his function call will call the dfs function with zero one. So it'll reach and sixteen.

73
00:18:05,730 --> 00:18:17,050
So sixteen will be written by this default function. And this will return to our. Main function of torment program and this is the solution the time complexity of this algorithm.

74
00:18:17,550 --> 00:18:29,740
The time complexity is what the oars get off him times in two times in times in. Which is equal went to the emptiness in here emmys wit and his height and space complexity is constant.

75
00:18:30,513 --> 00:18:40,650
Space community is constant because we're not introducing an original space epic consider our recursion. Our recursion call. Tree. A recall equally considered the.

76
00:18:41,049 --> 00:19:00,340
Recursion function to space complexity analyzes the time complexity would be what orders to get 'em thomson. Dot. The length of power. That height above our decision tree can be off in terms and since you're not using any extra data structure we can see that the space complexities often we do not.

77
00:19:00,480 --> 00:19:10,080
Consider the space complexity for recursion function calling time complexity analysis for most of the cases. It can mention that if the interviewer asked the space complexity.

78
00:19:10,530 --> 00:19:24,790
So we can say we're solving his problem in off one space compensated because we're not using any. External destructor. We're not using any original data structure we're solving this problem in place by multiplying the cell.

79
00:19:25,080 --> 00:19:36,670
With minus one. I hope you've understood this reader explanation now let's implement this algorithm. If you've understood the explanation of this algorithm.

80
00:19:36,810 --> 00:19:51,330
Dot cord is easy. Now let's implement this algorithm. First what i'm going to do i'm going to run our lwf. So eat. Our royals to zero ruined x euro oil reindex is less than.

81
00:19:51,840 --> 00:20:10,660
Greed do not a lent. Then are plus splotch. So here we have to find out the height of our matrix Oregon se or upper great. Now let's. Find out the column index a sequel to jiro wild sea is less than greed.

82
00:20:10,860 --> 00:20:25,530
Zero dot length. In the column. Didn't see. Plus blech. This there were regular fall or just traversing a metrix this great. Now let's check. If we find out.

83
00:20:25,890 --> 00:20:36,510
Our current element. In disk in this time we see it we're given integer one ordered automatics contains the smarttix great con stents one or zero number o against integer.

84
00:20:37,050 --> 00:20:52,920
So r see. If it contains. One if our current element is. One we'll call our dfs function. The d of his function will return the perimeter. So we'll return.

85
00:20:53,250 --> 00:21:04,890
Whatever dysfunction ridden so here i'm going to call this function great with. The the index of our current element if refined or current element a one only then we'll call this function.

86
00:21:05,340 --> 00:21:18,100
Now let's implement this Davis function. Public. Static void sorry you didn't have his integer. Integer written dive is integer then d of his function.

87
00:21:18,240 --> 00:21:34,750
Int. Our greed grievance great and row and column. Ruined dicks and column index. Afford this. Island pyramid functions. We will have all adjust your answer seems that it didn't dive easier.

88
00:21:35,190 --> 00:21:48,610
Since that ridden dive here is. A integer your ambient will return just zero. No decision were Davis a function. We'll call this function recursively.

89
00:21:48,930 --> 00:22:03,040
So we will have a basis. First let's validate our row index and column index. If raised less than zero or if Roy's grid then records to the height. So greed dot length.

90
00:22:03,930 --> 00:22:15,870
If this condition is to ruin dick's is invalid. If sees less than zero or if we see c is greater than or equal to. The length of our column so greed zero dot length.

91
00:22:16,170 --> 00:22:31,890
If this condition is true. It means that our ruined ex or column index is invalid. Let's assume we or given these great. We know that this greed is surrounded by water this grid is surrounded by water.

92
00:22:32,190 --> 00:22:46,110
Curia border here here here. So inner outer space we can assume we have water. Now equally you see this condition is true it means that from here. If we move to leapt we see.

93
00:22:46,470 --> 00:22:58,990
We have water on the left so here we have. E. We have a sight of our smaller rectangle epic azure visit our square rectangle small rectangle here we see.

94
00:22:59,730 --> 00:23:12,630
This erect angle retried to move to the left. We will have lake on the lipped so this arm. Is. Separating from this lick we can assume so the lint of his armies one so again a written.

95
00:23:12,930 --> 00:23:34,800
One if this condition is true so it will regent one if this condition is to. Now. If we saw. If we saw greed. R c. Is equal to zero. So from here if we add this index he betrayed them to the left here is that we have zero two this is part of.

96
00:23:35,190 --> 00:23:48,310
Part of our rivalry can say this is a this is water so here we have the arm. That is separating us from this lake. So here we can written. One so let's written one.

97
00:23:49,260 --> 00:24:05,250
And if we saw. Greed r. C. He called to minus one. If we've already visited this. Will obliterate it with minus one than here but when you move here you betray to move to Africa that is visited to all written zero.

98
00:24:05,790 --> 00:24:21,389
Because there is no separator and there is no us separator. By. An arm. That is separating us from. The rest separating us from. The lake so here it written zero so if this condition is to all written.

99
00:24:21,720 --> 00:24:43,720
Zero. This three hour hour basis. Let's comment. This part here. Let's comment it. Now here. We have to update our current element with minus one to rc cold to minus one with updating our current element with minus one.

100
00:24:44,460 --> 00:24:57,390
Okay with aberdeen your current limit with minus one so he can start from what won't be processed all the four directions. If we before processing all the full deduction when a call with this one since we have visited this we will.

101
00:24:57,690 --> 00:25:11,740
Have oil market as visited will just multiply. Minus one. So your refunded minus when it means visited that is visited running zero. Now here we have four direction down off right and lipped.

102
00:25:11,790 --> 00:25:26,100
Let's color recursive function here. So d f s first down right for as good so are a plus on. The moon to the next row this is where Darwin. Dfs great let's.

103
00:25:26,460 --> 00:25:45,120
Move to turf or off so we're moving up on our rosso this is. Four of see here. Now for right. D dfs great. Idea of his great. Then r c plus one. But adding on to our Rose who are moving to that right.

104
00:25:45,600 --> 00:26:04,440
Now again dfs. Greed. Right then c minus one. Will move into that lipped this hour for functional for dress for every single function call. New here we will have one variable that is count conical did you know initially we already mentioned in the explanation part.

105
00:26:05,010 --> 00:26:16,620
So whatever it's written by dysfunction call. For current it will add the to. So let's add your sir count plus he calls to the office here as well whatever written by this.

106
00:26:17,010 --> 00:26:32,670
When he moved to off so let's add count here to count Plaza too. Count classical two agony here. Same here. Here as will. Count Plaza called. So when we done for our current stood up our function call.

107
00:26:33,210 --> 00:26:43,600
At the end we have to written count. That will before our. Previous function call the urgent value and so on and so forth that i have already explained in the explaining in part.

108
00:26:43,920 --> 00:27:05,280
The time complexity of this algorithm is off 'em times in. What it is the height and is that which were the worst gets old tavern or matrix. A twitch said it takes two times in times in time complexity which is equivalent to all of 'em times in and the space complexity or solving this problem in place so it would ex constant space it become consider dot a recursion decision tree.

109
00:27:05,670 --> 00:27:24,040
We know recursion recursion function uses a stack internally so the time complexity can be eight times in. As well. Since we're not using an original extra data structure so we can say the space complexity is off one but against a year m times in.

110
00:27:24,180 --> 00:27:32,040
Altar here again he was instead multiplying. Out. When multiplying x a tuna just a building with minus one because we have one that's right we're just.

111
00:27:32,544 --> 00:27:44,584
Inserting year minus one week hendry or something like this great equal to a great r c. This is the same thing we don't add this this is the same thing because it is mellow is.

112
00:27:44,790 --> 00:27:57,780
This value is. One. If the fellow of disagreed is us i'm sorry. If the value of disagreed is minus one this line will not. Be right for the function call.

113
00:27:58,200 --> 00:28:10,560
That's what we're handling here. We can add this line he regularly read like this. Isn't our algorithm. And here we can he was an extra destructor. A boolean matrix to keep track of visited sale.

114
00:28:11,220 --> 00:28:31,960
Here or just Molly blank with minus three. This is our algorithm. I hope you've understood as explanation now let's test this accord. Let's run it. Accepted let's submit it.

115
00:28:36,060 --> 00:28:46,900
Accepted we absolved or stolen successfully but i chose this quarter to this video. Thanks for watching this video if you have any question guys posted your question on the q and a forum.


@@@
1
00:00:00,240 --> 00:00:15,820
Welcome back to this video. In this video or going to solve this quitting interview question. Count. Sab islands. In this problem we are given to him by in binary matrices.

2
00:00:16,320 --> 00:00:35,391
Great one and gretel. Containing only zeros. Representing water and once. That represent land. An island is a groove of one nz. Connected for a directionally origin dull or vertical.

3
00:00:36,090 --> 00:00:54,600
Any sales outside of the grid are considered. Water sales. An island. In great too is considered a soft island. So. An island. Is great too. In great too.

4
00:00:55,200 --> 00:01:12,330
Is considered sub island Eve there is an island in. Great one. Here. That contents all the silts that make of this island in greed too. Indiscreet to we see this is.

5
00:01:12,960 --> 00:01:30,690
An island. And here this island exist this island exist in this. In this greed. So against it. This is a sub island. We have to region the number of islands in great two.

6
00:01:31,230 --> 00:01:53,500
That are considered soft islands. In this agreed to we see this is a south island. This. Is a sab island and this is a sub island. So we have to redone a treat we have here three saab islands in this agreed to.

7
00:01:53,940 --> 00:02:09,510
For these examples. If we're given this to great. In this too great we see that these two island these two island is sab island. That exist in this. Great.

8
00:02:09,960 --> 00:02:28,420
So we have to return to. The great contains. Zeros and once duras means water and aunt means land. We can assume that. The. Dimensions of two given grid are the same.

9
00:02:28,830 --> 00:02:49,080
Now let's see how to solve this problem. Let's assume we're given this to grid we are defined out the south island. Of this great to. The island of disagreed is called south island if the island exists in this greed one.

10
00:02:49,710 --> 00:03:00,730
We are given to my ticks off same damn mention. Now let's see how to solve this rolling. In order to solve the stall him we're going to use dfs algorithm.

11
00:03:02,040 --> 00:03:23,110
Let's see how to solve this problem. India is algorithm will have four direction. Down. Down off. Right. Lipped will have this for direction and all happy count available in discount oops toward the number of island initially zero.

12
00:03:23,580 --> 00:03:41,550
No organise get our greed to one by one. Here we have one. Okay here we have one. No. We'll call our defense function with this one when you find it one one call our defense function to let's call our defense function.

13
00:03:41,880 --> 00:03:57,840
Zero zero. This is the root of our decision tree. Since you call this function. We can guarantee that the value in greed two we have one. Now let's check the corresponding value in grid one.

14
00:03:58,410 --> 00:04:11,770
If you find a different value ingredient will immediately return false. But here we see that the families on that is. Sim come to this veloso. We have your one here we have one.

15
00:04:12,240 --> 00:04:23,640
So. Let's market as a visited. Now what are you going to do we're going to check the boundary here this is your boundary of this. Of this small square.

16
00:04:24,150 --> 00:04:35,770
He. Crossed a boundary that means. This one is exist. At the same position here right so if it crosses boundary. You've crossed his boundary since this is a match.

17
00:04:36,900 --> 00:04:47,850
It seems to suit our island this is at the island we don't have one here. This is land against him. This is same as this one so only cross our boundary will return true.

18
00:04:48,480 --> 00:05:03,570
When he moved down here we see. We have zero. That is water. So we cross our boundary so all written here true. So let's written truth for the first functional for down will return.

19
00:05:03,960 --> 00:05:17,700
True. For af with the decision boundary crossing our island we're crossing this. Decide our disarm. So let's return true for f. For avg will return true.

20
00:05:18,150 --> 00:05:35,950
Never right. So we. We have evaluated this. And this. Since this is not our island this this entire. This interpretation is your island that we have to check all these boundary.

21
00:05:36,120 --> 00:05:46,360
These all these boundary this is kind of a pyramid a ride first rule jig these boundary then. Then these these these boundary this boundary and this bound hurry.

22
00:05:47,010 --> 00:06:00,270
If all. If we saw these island exist here. He just here only then will return to equal returns true that will increase our count. So here up until this point.

23
00:06:00,660 --> 00:06:14,520
This bottom boundary and is. This a boundary is true. Now let's call it. The right epic corner right let's call it. And here now we have. Now here for Judah one.

24
00:06:14,880 --> 00:06:28,270
For choice. First down. Then f so for down we see true. This is crossing a boundary and the value here is on and on the vel your sim so let's go down.

25
00:06:28,410 --> 00:06:43,090
This is our boundary and here we find it another boundary. Right so off is to donate through no-hit let's call it a right. That is zero two. Never jiro two we have four choice.

26
00:06:43,740 --> 00:06:55,170
Can you go to down yes we can go to down first let's go down. And lit Mark the visited since we have here one. The market we can use a bullion added to market.

27
00:06:55,560 --> 00:07:06,255
Or we can just multiply with minus whenever we saw minus one. Then we can. Out we can see the negative value is. Visited find it negative self that is visited.

28
00:07:06,420 --> 00:07:18,994
So let Mark this and this as well these are all visited. Last year when he moved to this. That is one two. Little two on two. Now let the chick in this.

29
00:07:20,160 --> 00:07:31,420
This is not a boundary right so we have to expand our island let's expand our island does it exist theory yes we have your one right we have your discipline.

30
00:07:32,190 --> 00:07:47,040
So. Here let's call again with four direction down down the cedar were a boundary so it will return true this is your site. Or arm. Then we helped off.

31
00:07:47,670 --> 00:07:57,720
The top is already visited so. We can just read in here true because this is the part of our islands. Okay ridden through here. Let's market as visited.

32
00:07:58,110 --> 00:08:12,990
There here Kenny good right yes so let's get right removed right we get. A one three. Again here we have four choice we have here for choice. We have it for Joyce from one three from here.

33
00:08:13,440 --> 00:08:25,830
Joakim. Does it exist and as good as a disgrace when he was shunned as we have one is we have want to let market is minus one. As visited. Can you do don't know sir lettered and true.

34
00:08:26,280 --> 00:08:40,330
This is ever a boundary of great we're just checking by the boundary right at the sitter boundary this is boundary we find out there's boundary. We find it this boundary Joakim we have developed all the boundary.

35
00:08:41,160 --> 00:08:51,720
So here then let's go to right. We can go right we can agree to have no this your boundary return true. Then he lets go to right when you go to right here.

36
00:08:52,050 --> 00:09:07,920
This is one we can go to right for. A simply so. So one four. Lit market as visited because on August here. Never this. One lets marketers visited Kenny go to down know this is boundary.

37
00:09:08,250 --> 00:09:23,340
Return true then of this is boundary written drew didn't write boundary or dentro. Never leapt leapt is part of an island say better than here too. Nothing would be wrong because this is potable were.

38
00:09:23,670 --> 00:09:39,310
Agreed so we find out a valid portion year we find out. This valid boundary so let's return here true. So there is nothing wrong up until this point so we have all four that means our boundary match.

39
00:09:40,110 --> 00:09:56,410
Of this great and here as well. So no problem. So let's return here true. Now let's try to go to leapt from here from one three we see this is part of our island two will return true all true here's all written here too.

40
00:09:57,155 --> 00:10:09,090
Will return here true never lived from on to. We see that this is your boundary. So littered in here to all pinal to find it all true here let's return to fortuna too.

41
00:10:09,540 --> 00:10:23,772
Fragile to it we see that. We moved down. And we find out true. This boundary now. We have to check this in this tradition and in this direction. So. Let's go to f.

42
00:10:24,132 --> 00:10:36,502
This is boundary sir true let's go to ride this is boundary and odis this is boundary littered and true then. On the left this is part of our island so littered in here too so natural.

43
00:10:36,612 --> 00:10:51,952
Never zero one one for Judah one. We moved to we moved down a mob of whom have a right. Joakim Noah let's take lip this is part of our island so let's return here too since this is visited so that is part of our island.

44
00:10:52,062 --> 00:11:03,972
One hundred and two three of. All. Truths altered in here drill. Now from here we have one more joy this is slept on the lipped heresy. Boundary so oil rich central.

45
00:11:04,512 --> 00:11:19,732
We have all true here at this first level so we find out these island. We did buy this pyramid her this is kind of island pyramid or Joakim. So invalid all the pyramid years of this.

46
00:11:19,992 --> 00:11:31,492
We did so this is the pyramid or we checked with the pyramid or against it. So you find out this island already too so it will increase discount from zero to one.

47
00:11:32,112 --> 00:11:49,272
Now let's move to the next digit our next. Singer a dirty one by one. This year and next as is visited this is visited then let's iterate iterate eight hundred here we have one let's call number d of his function but here we see we have zero if he cannot give his function withdrawn the index it will immediately return false.

48
00:11:49,602 --> 00:12:00,132
If artifice one hundred and fault will not increase the key count. Let's move forward zero zero zero one and here we have one. So let's call or give his version.

49
00:12:00,522 --> 00:12:17,382
Three zero. We have here for direction here and here we have one right so let's market as visited it's market has visited Darwin. He can go to down here we see this is our boundary sorted and true can you go to tough no lids or denier too can i go to right.

50
00:12:17,862 --> 00:12:37,432
No history Von ruden true this is short lived boundary or dental he refined it all true so old in here true. That includes account from one to. The let's move forward here we have one here who don't have one he rib one we don't have one here so let's move forward here we have one here we have one.

51
00:12:37,872 --> 00:12:52,452
Let's call our Davis function with this index for one. We have four direction here. Down Kenny go to down here no decision were boundaries ordered and drew can go to turf no Willard and drew can go do.

52
00:12:52,842 --> 00:13:16,612
It right no return true can would love to know so he find out this box in their books. Is a match with this. Island so here we have these island actually these island material only this island this island exists here so this is a south island sweltered in a drought we find it alter all the natural to all increase count from two to three articles to three.

53
00:13:17,112 --> 00:13:27,882
This before we have one. And here also we have one but. This is our island but here we have only this so this is not a part of his island it'll it'll be color difference function.

54
00:13:28,182 --> 00:13:38,476
By processing difference function it'll return false let's see how it'll return false. If you call a different function with. Zero. With f forty three.

55
00:13:39,372 --> 00:13:52,762
With four three. We have your fourth choice. Kennywood or don't. Know illidan true. Can you go to. Write. Getting rid of years we can go to the top lets marketers visited.

56
00:13:52,842 --> 00:14:11,922
Your it it just. Let's move to tough. A right here. We can put it down here it's written true can get a tough year so let's go to drove we get here one and here we have a zero so it will return false if any of the Valerie get fault the answer will be false so.

57
00:14:12,282 --> 00:14:23,902
It really didn't volt owner encoder count. Logic the next that a journal so we are done biskind our entire metrics. This is how. This algorithm works.

58
00:14:24,462 --> 00:14:35,752
I hope you have understood is with explanation. This algorithm all dicks dangle big city for the worst case two dimes and dimes inward in his da. Height in his de wit.

59
00:14:35,952 --> 00:14:48,232
So the overtime comics it is all of 'em times in and space complexity is also one of 'em times in. Because our recursion decision tree might have a height.

60
00:14:48,882 --> 00:15:10,072
Embarrassed and. So despicable as it is of him times in. I hope you have understood this great explanation. No let's implement this algorithm. We know that the dimensions of this to my tix are the same no let's find out the number of rows and number of column for our matrix.

61
00:15:10,332 --> 00:15:32,002
So ain't wrong he called to. Greed one dot lint and call me call to. Grid one. Zero. Dot the lead. Now let's get our greed to. Eat articles to jiro are less than Joe are black splotch.

62
00:15:32,082 --> 00:15:55,092
Den. Four. In c calls to jiro see less than column c plus pluck right inside here let's check if our. The current value is one in greed to admit if find out a island lit cig Eve that island is a south island or not so first let's shake that if greed to r.

63
00:15:55,422 --> 00:16:11,512
See if it's a call to one. If we find that one. In agreed to that means we find the Ireland metric the island is a sovereign island or not. If the of his let's call our function.

64
00:16:11,892 --> 00:16:29,382
Greed on greed too. Did our ruin dick's column index. If it's a return. True if it's returned true. We'll increase. Our count let's go to here account readable in critical digital discount readable we'll.

65
00:16:29,682 --> 00:16:44,272
Give trump the number of sab island we have. So count plus blech. At the end here oldest region the count. Now let's implement. This day Davis function.

66
00:16:45,552 --> 00:16:59,842
Also your little pats these two parameter row and column. Row. And column. Now let's implement dysfunction d f s. Public static written Davis bullion.

67
00:17:00,042 --> 00:17:18,712
D f s. Int. This is our greed one then end. The siege greed to. The ruined x. Column index. Then the number of route we have let's call it m. In the number of column we have in.

68
00:17:19,302 --> 00:17:36,132
No let a valid it. Lit a valid ID this ruin this column index if the index r or index c is invalid or if the boat invalid that means we exceed our current island in that case we should return true because we.

69
00:17:36,492 --> 00:17:56,262
Are exceed that we have a arm a power a small square right. So let's shake that if art is less than zero or if we see are his. Ah. If we see r is greater than or equal to m that is invalid for cfcs lead in judo or sees.

70
00:17:56,592 --> 00:18:16,992
A girl then recalls two in that is invalid did or. If we find out if velo that is not one. So greed. Agreed to. R c. Eve we have if we. Don't have one.

71
00:18:17,382 --> 00:18:29,422
If we don't have one in the adjacent if we don't have one that means we exceed we exit our current island right if this for condition overload is true.

72
00:18:29,562 --> 00:18:45,502
Then. Our nc is valid and if we saw the adjutant is not one that went we exceed our current island so in that case all Irina one draw. Now. Here we have to check.

73
00:18:45,972 --> 00:19:01,602
If. Greed one r c if we have the value here is nautical too great to. R c in that kiss or will do will return false immediately. All Iranian fault immediately Eve.

74
00:19:02,082 --> 00:19:16,212
Our. Velo ad agreed to is nautical to the valley at gridiron at the corresponding position. Or here. Or to have to do when it raised this line here it means that these apes didn't have a loaded false altar this.

75
00:19:16,542 --> 00:19:34,978
Disaster with one loaded false so here let's Mark let Mark. The sill. As visited r c he called to minus one. Now. Let's call a function for down of bride left if this for Joyce.

76
00:19:35,322 --> 00:20:02,682
So d f is. Great one. Greed. Two r plus one for down. Then. Then. See him in. This is four down. Now four of. Four of here are minus one. Then four. Of four right to add on her column so let's add one to.

77
00:20:03,042 --> 00:20:20,662
Our column. Didn't hear in order to move to left we have to substrate on from our column. This for function will return true or false. So here. It is called a bullion down.

78
00:20:21,042 --> 00:20:51,084
And here. A bullion. Up. Then. Bully n. Right. Then here. Bullion leaped. I returned developed by the function call restored. At the available. If we saw the four boundary if it exists successfully the four boundary and eat even match die and the island in a great too.

79
00:20:51,644 --> 00:21:11,574
In great one. Then he will return to so return. Down. And off and right and lipped. If all. If all of the four directions written or if from the for all direction it's written true.

80
00:21:11,804 --> 00:21:26,934
On the oil retention. This is our. Algorithm. This algorithm oil takes time complexity o of m times in. And the space comics it is all of 'em times in for the oldest kit.

81
00:21:27,584 --> 00:21:46,044
The decision to recursion decision tree. Might. Have a height embarrassing. This is my solution to this problem. Now let's. Run this good if we find out anything wrong we'll fix that let's run it.

82
00:21:48,434 --> 00:22:02,034
Accepted. Let's submit it. Accepted we absorbed this problem successfully i hope you've understood this video explanation. If you guys have any question.


@@@
1
00:00:00,720 --> 00:00:11,620
Welcome back to this video in this video we're going to solve this coding interview question zero one metrics. In this volume given an mba in binary metrics met.

2
00:00:11,670 --> 00:00:25,530
We have to redone the distance of the nearest zero for each cell. The distance between two adjacent cells is one. For example if we are given these binary metrics met.

3
00:00:25,920 --> 00:00:41,730
After reaching the nearest zero for each cell. For sale with vela zero we have to do nothing. If we want to find a nearest up to zero the zero itself the nearest deteriorate we have to do nothing if we have non zero value.

4
00:00:42,090 --> 00:00:53,760
Only that we have to find out the distance from here the nearest zero is we see here. Zero or digital or digital digital the nearest euro should be be.

5
00:00:54,150 --> 00:01:07,090
Vertically or horizontally it cannot be diagonally. For this given metrics we have to return these metrics for examples if we're given these binary matrix in this binary metrics.

6
00:01:07,290 --> 00:01:19,530
We see here the nearest zero of this cell is one this is. Zero the distant is on. The nearest zero of the cell is one the nearest drop the cell is. One.

7
00:01:19,920 --> 00:01:36,150
Because you exist in. In just one cell distance. For this one the distance of nearest judo is two because we have to. Go through to sell. The first diesel and diesel to nearest distance for this one is.

8
00:01:36,510 --> 00:01:47,170
Two so here we should update developed with two. We have to redone this matrix. I hope you have understood despoil him now let's see how to solve this bolin.

9
00:01:47,640 --> 00:01:59,790
Let's assume we're given this a binary matrix first thing what we will doom. Earthscan that will scan the matrix. Will create a cute at a structure. In that queue.

10
00:02:00,150 --> 00:02:13,620
I will store. The index of all zero values the index of all zeroes so here Abdul let's store the index in our queue. So zero zero. Then this is also zero.

11
00:02:13,980 --> 00:02:32,920
So zero one. Then. Zero two. Then we have one zero. Didn't we have one when you find out non-zero value will multiply the developed with minus one we get minus one it means that the sale is not processed yet.

12
00:02:33,180 --> 00:02:51,840
Will process the sale. Now we are assuming that we don't know the nearest zero of this so we'll process it later. Then we have. One to. The sill. Then this is on till it's multiple with minus one.

13
00:02:52,170 --> 00:03:05,190
Minus minus one. Heresy we have for. A sale that is not processed we have processed the sell. Know first thing what we'll do we'll remove the front from q zero zero.

14
00:03:05,670 --> 00:03:21,750
Let's do to process. Let's start the process to add descent of zero litre of diesel will go in for direction. Down. Af. Dried. Lipped will follow this for direction down of a right elect.

15
00:03:22,230 --> 00:03:37,810
Now let's try to move in this four direction. Here we have zero zero. He betrayed him a b o on the down which is zero. If we find out minus one only did one process that this is zero nothing to do.

16
00:03:37,950 --> 00:03:47,770
If we try to go up nothing on the app that i do go to the right and right we have zero nothing to do with zero then leapt we have nothing on the left.

17
00:03:47,940 --> 00:04:10,420
Now let's revoke the next. This is the next zero one. Four zero one. Four zero one. He will try to move down here we have minus one we find it minus one here we have velo here we have value zero at this sale right we have minus one if the process to that still.

18
00:04:11,040 --> 00:04:25,590
So the index up minus one is on one. So what is the distance. This is this is. This index. This is the index of value zero right so if you find out the distance from this to this.

19
00:04:26,070 --> 00:04:39,520
We can update the distance of this the nearest distance for one one because of the process this this is our goal right. So what did the distant we see here this is at level zero this is at level one.

20
00:04:39,656 --> 00:04:50,700
Can update this developed with the level because the distance we can assume the level. So here we will just say this zero whatever palette we have year zero plus zero plus.

21
00:04:51,210 --> 00:05:06,970
Zero plus one one plus zero that is one. So it seems this is ad descent so it exist in distant one right so so we'll add one or two were developed we have here so we have your judo zero plus one is one let does Israel at with one.

22
00:05:07,200 --> 00:05:15,780
Now let's try to go to after is nothing all of that is not the one that right there is nothing on the left. So we are done singer process digital one we have to add this to our.

23
00:05:16,200 --> 00:05:31,470
Queue. Now let's remove. From our queue the front zero two. Four zero two. Four zero two there is no add dissent there is no Edison that is. There is no ad doesn't object to that we have processed.

24
00:05:31,860 --> 00:06:01,510
So. Let's snoop one zero. One zero. We have year four the direction it would try to move to down or we'll get we'll get to zero which is minus one up to process it or right of the process it here we have below zero and here we see this exist in on distant in one distant the distance in between this two cyl is one so one plus water repellent we have here that has zero so let's added with this bullet with one.

25
00:06:01,800 --> 00:06:15,330
And here let's add this index. This index singer processed to zero. Now. Let's remove the front promoter cue the front is one torno one to that is this.

26
00:06:15,930 --> 00:06:28,600
Reprocess yet will have the value one let at the index of this one. That is due to. Then order a different. One one we have processed this right one one.

27
00:06:29,670 --> 00:06:42,870
Now here we have velo one. Right here we have value one. We can assume this and this and he has ignored this August at. At the level one the level number one okay so we get this.

28
00:06:43,230 --> 00:07:00,760
From desales right from. A zero one from here we get this. Okay so this is at level two this is at level one. Want one. Now let's process this here. One one.

29
00:07:01,050 --> 00:07:11,070
Betray to move down we have your minus two and he ripped the valid one so the distance in between this to sell is one. Here we have one the distance from the cell to the cell is one.

30
00:07:11,730 --> 00:07:24,120
And the nearest. Zeros are the sill. That is once one plus one is to establish diesel with true. Now we see. He retried expert all the directions this is protest.

31
00:07:24,450 --> 00:07:37,920
Then there is. No and there is. We see that there is no. No Edison that we have to process. So we are done let's add this indexing process this. To one.

32
00:07:38,370 --> 00:07:47,460
Are pretty much two dreaded isn't adolescent up to Judah that have to process. Than for it to do that is no adolescent up to do. Than to one that has no adjutant of.

33
00:07:48,090 --> 00:08:09,070
A two one that have processed will protest only if we have the velo minus one into. Binary matrix the sooner we can solve this bowling. Now let's implement this algorithm first let's find out the height and width of our given matrix so Emmy goes to height him he calls to match dot lint.

34
00:08:09,540 --> 00:08:25,413
In his wit. Any calls to mat. Jiro dot length. Now i'm going to create a queue to destruct it in the queue i'm going to store. Rule column pier. It's called q q goals to new linked list.

35
00:08:25,680 --> 00:08:44,170
Google to new link list. No let's great disappear class. Glass beer. In this class we have. This beer has two properties row and column. Are here our constructor public.

36
00:08:44,250 --> 00:09:02,370
Bear. Int row and column. Are inside to hear these dot recalled to Rome. These dart column calls to a column. Right below here. What i'm going to do i'm going to.

37
00:09:02,700 --> 00:09:18,510
Eat or at our metrics so four ain't. Article does euro are less than him. Are plus blatche. For. Ain't see cause to jiro see less than. In. See plus split.

38
00:09:18,870 --> 00:09:32,830
Right into here i'm going to check ebro current element ip or current element is. Zero that would add the index of that element tour que ser que dot add new pair.

39
00:09:33,330 --> 00:09:52,020
R c. Ybor current element is not zero. OMG gonna just multiply that with minus one. Sir Matt r c equal to minus one times mad r. C. Since. We have only doodles and once he would just.

40
00:09:52,650 --> 00:10:08,160
It would just obliterate minus one that is ok we didn't have to multiply it. So first ID scanned our area. And we added all the index of the revelers to the skew and for non zero value multiplied with minus one that meant we updated with minus one.

41
00:10:08,640 --> 00:10:23,160
If the minus one's an annual that means that cell is not processed and reprocessed that cell to process that let's run our dfs algorithm. So here while our queue is not empty you don't ease emptied his hit our.

42
00:10:23,670 --> 00:10:35,700
Street Davis algorithm lit. Implement here straight Davis algorithm first i'm going to remove the front disappear dive off. Item we have one doc you beer.

43
00:10:36,060 --> 00:10:49,480
So beer currently called to. Queue dot pool. Now here or i'm going to do. I'm going to extract row and column from current so ain't recalled to the current dot row.

44
00:10:50,010 --> 00:11:06,219
Call he calls to. Call he calls to current dot call. We're just extracting here. Row and column. Let's. Read it indifferent line and call an angel. Now we're here.

45
00:11:06,990 --> 00:11:23,110
We have to. Find it or add descent. Let's grit here. Our direction Tory erie. Direction he called two. Direction equals to he will have four direction first one go down then off then right then lipped.

46
00:11:23,370 --> 00:11:43,320
So down one zero. Then of five for off. We have to substrate minus him from index row index minus one. Zero. Then right for. Right we have to add on to our column index.

47
00:11:43,710 --> 00:11:57,190
Then leapt. To her left zero minus one implicit we have to substitute one from our column index. Do enough right. Lipped. Now let's implement herbivorous algorithm.

48
00:11:57,900 --> 00:12:11,440
Here for ain't i called to jiro i less than for the length of these areas for. I plus splat now let's find out the index for add just sent sil xxii calls to raw applause.

49
00:12:11,550 --> 00:12:31,960
Direction. I. Zero. Then eat what he calls to call plus. Direction i won. Here i'm gonna chick. I'm gonna chick does x and y is valid or not so let's check here if x is greater than or equal to zero.

50
00:12:32,010 --> 00:12:49,420
And. X is less than. Him. This condition is to. Exist valid. Let's evaluate why if oil is greater than or equal to zero and y is less than in if this condition is to excellent why is valid if x and ois valid let's chick.

51
00:12:49,800 --> 00:13:05,500
Lit chick. Our current ad dissent. At index x y. If you find out that is. Minus one of the process that so x. Y. Equal to minus one your Edison is minus one.

52
00:13:05,790 --> 00:13:21,010
What will you will do will multiply. Up. Your current adjustment is minus one we have to process that so Matt are. Met get aches white. Or ad doesn't right this is our current adjutant.

53
00:13:21,510 --> 00:13:34,180
At doesn't equal to one plus or whatever developed we have in our current. Current. In our current position or in our current cell so Matt. Row and column.

54
00:13:34,740 --> 00:13:49,840
And the lit add he's new. At this. This new adjutant ruined x drawer. To our que so cute dort add. New beer x y. The theater where st b of his algorithm.

55
00:13:51,390 --> 00:14:04,590
When we're done with this algorithm will your will return. Dot. Matrix where. We're modifying dramatics in plus one written that metrics. Visage our solution to this problem.

56
00:14:05,100 --> 00:14:16,030
The time complexity of this algorithm is one of 'em times in to scan this area right here and here again we're running our. Our algorithm for the orders get it all dicks again.

57
00:14:16,080 --> 00:14:28,020
Emptiness into complex little googled i'm going to do is two times m times in and a space complexity is. The space complexity is. Off 'em times in as will.

58
00:14:28,350 --> 00:14:39,780
Because we're the worst get in order cute we might help. Im damaged in items. Two dimes. M times in is equivalent to. Him damson because from comics it analyzes removed the.

59
00:14:40,260 --> 00:14:57,670
Constant part. I'm sorry hero should have closing brackets. A little typo. Now let's run discord. Excepted let's admit it. Except that we have solved this problem successfully.

60
00:14:58,440 --> 00:15:10,840
We can solve this problem using dynamic programming by scanning our metrics tweet. From top left to. Right bottom and then right bottom to. Top lipped.


